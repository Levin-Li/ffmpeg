diff -pruN csrc.orig/libavcodec/avcodec.h csrc/libavcodec/avcodec.h
--- csrc.orig/libavcodec/avcodec.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavcodec/avcodec.h	2017-05-07 08:37:27.465715908 +0200
@@ -1672,7 +1672,6 @@ typedef struct AVPacket {
      * for Matroska subtitles, whose duration values could overflow when the
      * duration field was still an int.
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 } AVPacket;
@@ -1733,7 +1732,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is not used for anything in libavcodec
      */
-    attribute_deprecated
     char             codec_name[32];
 #endif
     enum AVCodecID     codec_id; /* see AV_CODEC_ID_xxx */
@@ -1757,7 +1755,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     unsigned int stream_codec_tag;
 #endif
 
@@ -1954,7 +1951,7 @@ typedef struct AVCodecContext {
      * This option does nothing
      * @deprecated use codec private options instead
      */
-    attribute_deprecated int me_method;
+    int me_method;
 #endif
 
     /**
@@ -2018,13 +2015,12 @@ typedef struct AVCodecContext {
 
 #if FF_API_RC_STRATEGY
     /** @deprecated use codec private option instead */
-    attribute_deprecated int rc_strategy;
+    int rc_strategy;
 #define FF_RC_STRATEGY_XVID 1
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int b_frame_strategy;
 #endif
 
@@ -2045,7 +2041,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int mpeg_quant;
 #endif
 
@@ -2109,7 +2104,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
      int prediction_method;
 #define FF_PRED_LEFT   0
 #define FF_PRED_PLANE  1
@@ -2190,7 +2184,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int pre_me;
 #endif
 
@@ -2225,7 +2218,7 @@ typedef struct AVCodecContext {
      * - decoding: Set by decoder.
      * @deprecated Deprecated in favor of AVSideData
      */
-    attribute_deprecated int dtg_active_format;
+    int dtg_active_format;
 #define FF_DTG_AFD_SAME         8
 #define FF_DTG_AFD_4_3          9
 #define FF_DTG_AFD_16_9         10
@@ -2248,13 +2241,13 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private option instead
      */
-    attribute_deprecated int intra_quant_bias;
+    int intra_quant_bias;
 #define FF_DEFAULT_QUANT_BIAS 999999
 
     /**
      * @deprecated use encoder private option instead
      */
-    attribute_deprecated int inter_quant_bias;
+    int inter_quant_bias;
 #endif
 
     /**
@@ -2274,7 +2267,7 @@ typedef struct AVCodecContext {
      * - decoding: set by decoder
      * @deprecated XvMC doesn't need it anymore.
      */
-    attribute_deprecated int xvmc_acceleration;
+    int xvmc_acceleration;
 #endif /* FF_API_XVMC */
 
     /**
@@ -2303,11 +2296,9 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int scenechange_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int noise_reduction;
 #endif
 
@@ -2315,13 +2306,11 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     int me_threshold;
 
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     int mb_threshold;
 #endif
 
@@ -2350,7 +2339,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float border_masking;
 #endif
 
@@ -2372,7 +2360,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int me_penalty_compensation;
 #endif
 
@@ -2384,7 +2371,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int brd_scale;
 #endif
 
@@ -2404,7 +2390,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int chromaoffset;
 #endif
 
@@ -2414,7 +2399,7 @@ typedef struct AVCodecContext {
      * - encoding: Set by user.
      * - decoding: unused
      */
-    attribute_deprecated int scenechange_factor;
+    int scenechange_factor;
 #endif
 
     /**
@@ -2426,7 +2411,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int b_sensitivity;
 #endif
 
@@ -2682,12 +2666,9 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float rc_qsquish;
 
-    attribute_deprecated
     float rc_qmod_amp;
-    attribute_deprecated
     int rc_qmod_freq;
 #endif
 
@@ -2710,7 +2691,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     const char *rc_eq;
 #endif
 
@@ -2732,10 +2712,8 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float rc_buffer_aggressivity;
 
-    attribute_deprecated
     float rc_initial_cplx;
 #endif
 
@@ -2771,13 +2749,11 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int coder_type;
 #endif /* FF_API_CODER_TYPE */
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int context_model;
 #endif
 
@@ -2785,31 +2761,25 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int lmin;
 
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int lmax;
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_factor;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_exp;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_cmp;
 #endif /* FF_API_PRIVATE_OPT */
 
@@ -2822,15 +2792,12 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int min_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int max_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int64_t timecode_frame_start;
 #endif
 
@@ -2844,13 +2811,11 @@ typedef struct AVCodecContext {
     /* with a Start Code (it should). H.263 does.   */
     /* mb_nb contains the number of macroblocks     */
     /* encoded in the RTP payload.                  */
-    attribute_deprecated
     void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int rtp_payload_size;   /* The size of the RTP payload: the coder will  */
                             /* do its best to deliver a chunk with size     */
                             /* below rtp_payload_size, the chunk will start */
@@ -2861,25 +2826,16 @@ typedef struct AVCodecContext {
 
 #if FF_API_STAT_BITS
     /* statistics, used for 2-pass encoding */
-    attribute_deprecated
     int mv_bits;
-    attribute_deprecated
     int header_bits;
-    attribute_deprecated
     int i_tex_bits;
-    attribute_deprecated
     int p_tex_bits;
-    attribute_deprecated
     int i_count;
-    attribute_deprecated
     int p_count;
-    attribute_deprecated
     int skip_count;
-    attribute_deprecated
     int misc_bits;
 
     /** @deprecated this field is unused */
-    attribute_deprecated
     int frame_bits;
 #endif
 
@@ -3139,7 +3095,7 @@ typedef struct AVCodecContext {
      *
      * @deprecated use the quality factor packet side data instead
      */
-    attribute_deprecated AVFrame *coded_frame;
+    AVFrame *coded_frame;
 #endif
 
     /**
@@ -3360,7 +3316,6 @@ typedef struct AVCodecContext {
      * @deprecated use the 'error_rate' private AVOption of the mpegvideo
      * encoders
      */
-    attribute_deprecated
     int error_rate;
 #endif
 
@@ -3373,7 +3328,6 @@ typedef struct AVCodecContext {
      * @deprecated this value is now exported as a part of
      * AV_PKT_DATA_CPB_PROPERTIES packet side data
      */
-    attribute_deprecated
     uint64_t vbv_delay;
 #endif
 
@@ -3388,7 +3342,6 @@ typedef struct AVCodecContext {
      * @deprecated this field disables the default behaviour and
      *             it is kept only for compatibility.
      */
-    attribute_deprecated
     int side_data_only_packets;
 #endif
 
@@ -3963,9 +3916,7 @@ typedef struct AVHWAccel {
  * @deprecated use AVFrame or imgutils functions instead
  */
 typedef struct AVPicture {
-    attribute_deprecated
     uint8_t *data[AV_NUM_DATA_POINTERS];    ///< pointers to the image data planes
-    attribute_deprecated
     int linesize[AV_NUM_DATA_POINTERS];     ///< number of bytes per line
 } AVPicture;
 
@@ -4005,7 +3956,6 @@ typedef struct AVSubtitleRect {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     AVPicture pict;
 #endif
     /**
@@ -4312,7 +4262,6 @@ const AVClass *avcodec_get_subtitle_rect
  * avcodec_parameters_from_context() / avcodec_parameters_to_context()
  * functions.
  */
-attribute_deprecated
 int avcodec_copy_context(AVCodecContext *dest, const AVCodecContext *src);
 #endif
 
@@ -4521,7 +4470,6 @@ int av_packet_from_data(AVPacket *pkt, u
  *
  * @deprecated Use av_packet_ref
  */
-attribute_deprecated
 int av_dup_packet(AVPacket *pkt);
 /**
  * Copy packet, including contents
@@ -4544,7 +4492,6 @@ int av_copy_packet_side_data(AVPacket *d
  *
  * @param pkt packet to free
  */
-attribute_deprecated
 void av_free_packet(AVPacket *pkt);
 #endif
 /**
@@ -4597,10 +4544,8 @@ uint8_t* av_packet_get_side_data(const A
                                  int *size);
 
 #if FF_API_MERGE_SD_API
-attribute_deprecated
 int av_packet_merge_side_data(AVPacket *pkt);
 
-attribute_deprecated
 int av_packet_split_side_data(AVPacket *pkt);
 #endif
 
@@ -4740,7 +4685,6 @@ int avcodec_default_get_buffer2(AVCodecC
  * @deprecated CODEC_FLAG_EMU_EDGE is deprecated, so this function is no longer
  * needed
  */
-attribute_deprecated
 unsigned avcodec_get_edge_width(void);
 #endif
 
@@ -4838,7 +4782,6 @@ enum AVChromaLocation avcodec_chroma_pos
  *
 * @deprecated Use avcodec_send_packet() and avcodec_receive_frame().
  */
-attribute_deprecated
 int avcodec_decode_audio4(AVCodecContext *avctx, AVFrame *frame,
                           int *got_frame_ptr, const AVPacket *avpkt);
 
@@ -4887,7 +4830,6 @@ int avcodec_decode_audio4(AVCodecContext
  *
  * @deprecated Use avcodec_send_packet() and avcodec_receive_frame().
  */
-attribute_deprecated
 int avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture,
                          int *got_picture_ptr,
                          const AVPacket *avpkt);
@@ -5117,7 +5059,6 @@ typedef struct AVCodecParserContext {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 
@@ -5363,7 +5304,6 @@ AVCodec *avcodec_find_encoder_by_name(co
  *
  * @deprecated use avcodec_send_frame()/avcodec_receive_packet() instead
  */
-attribute_deprecated
 int avcodec_encode_audio2(AVCodecContext *avctx, AVPacket *avpkt,
                           const AVFrame *frame, int *got_packet_ptr);
 
@@ -5402,7 +5342,6 @@ int avcodec_encode_audio2(AVCodecContext
  *
  * @deprecated use avcodec_send_frame()/avcodec_receive_packet() instead
  */
-attribute_deprecated
 int avcodec_encode_video2(AVCodecContext *avctx, AVPacket *avpkt,
                           const AVFrame *frame, int *got_packet_ptr);
 
@@ -5443,7 +5382,6 @@ typedef struct ReSampleContext ReSampleC
  * @param cutoff           cutoff frequency, 1.0 corresponds to half the output sampling rate
  * @return allocated ReSampleContext, NULL if error occurred
  */
-attribute_deprecated
 ReSampleContext *av_audio_resample_init(int output_channels, int input_channels,
                                         int output_rate, int input_rate,
                                         enum AVSampleFormat sample_fmt_out,
@@ -5451,7 +5389,6 @@ ReSampleContext *av_audio_resample_init(
                                         int filter_length, int log2_phase_count,
                                         int linear, double cutoff);
 
-attribute_deprecated
 int audio_resample(ReSampleContext *s, short *output, short *input, int nb_samples);
 
 /**
@@ -5460,7 +5397,6 @@ int audio_resample(ReSampleContext *s, s
  * @param s a non-NULL pointer to a resample context previously
  *          created with av_audio_resample_init()
  */
-attribute_deprecated
 void audio_resample_close(ReSampleContext *s);
 
 
@@ -5473,7 +5409,6 @@ void audio_resample_close(ReSampleContex
                  between the 2 closest, if 0 the closest will be used
  * @param cutoff cutoff frequency, 1.0 corresponds to half the output sampling rate
  */
-attribute_deprecated
 struct AVResampleContext *av_resample_init(int out_rate, int in_rate, int filter_length, int log2_phase_count, int linear, double cutoff);
 
 /**
@@ -5485,7 +5420,6 @@ struct AVResampleContext *av_resample_in
  * @param update_ctx If this is 0 then the context will not be modified, that way several channels can be resampled with the same context.
  * @return the number of samples written in dst or -1 if an error occurred
  */
-attribute_deprecated
 int av_resample(struct AVResampleContext *c, short *dst, short *src, int *consumed, int src_size, int dst_size, int update_ctx);
 
 
@@ -5501,9 +5435,7 @@ int av_resample(struct AVResampleContext
  * note, due to rounding the actual compensation might be slightly different,
  * especially if the compensation_distance is large and the in_rate used during init is small
  */
-attribute_deprecated
 void av_resample_compensate(struct AVResampleContext *c, int sample_delta, int compensation_distance);
-attribute_deprecated
 void av_resample_close(struct AVResampleContext *c);
 
 /**
@@ -5520,26 +5452,22 @@ void av_resample_close(struct AVResample
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int avpicture_alloc(AVPicture *picture, enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 void avpicture_free(AVPicture *picture);
 
 /**
  * @deprecated use av_image_fill_arrays() instead.
  */
-attribute_deprecated
 int avpicture_fill(AVPicture *picture, const uint8_t *ptr,
                    enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated use av_image_copy_to_buffer() instead.
  */
-attribute_deprecated
 int avpicture_layout(const AVPicture *src, enum AVPixelFormat pix_fmt,
                      int width, int height,
                      unsigned char *dest, int dest_size);
@@ -5547,27 +5475,23 @@ int avpicture_layout(const AVPicture *sr
 /**
  * @deprecated use av_image_get_buffer_size() instead.
  */
-attribute_deprecated
 int avpicture_get_size(enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated av_image_copy() instead.
  */
-attribute_deprecated
 void av_picture_copy(AVPicture *dst, const AVPicture *src,
                      enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int av_picture_crop(AVPicture *dst, const AVPicture *src,
                     enum AVPixelFormat pix_fmt, int top_band, int left_band);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int av_picture_pad(AVPicture *dst, const AVPicture *src, int height, int width, enum AVPixelFormat pix_fmt,
             int padtop, int padbottom, int padleft, int padright, int *color);
 
@@ -5649,7 +5573,6 @@ enum AVPixelFormat avcodec_find_best_pix
 enum AVPixelFormat avcodec_find_best_pix_fmt_of_2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
 
-attribute_deprecated
 enum AVPixelFormat avcodec_find_best_pix_fmt2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
 
@@ -5663,7 +5586,6 @@ enum AVPixelFormat avcodec_default_get_f
 /**
  * @deprecated this function is not supposed to be used from outside of lavc
  */
-attribute_deprecated
 void avcodec_set_dimensions(AVCodecContext *s, int width, int height);
 #endif
 
@@ -5679,7 +5601,6 @@ void avcodec_set_dimensions(AVCodecConte
  *
  * @deprecated see av_fourcc_make_string() and av_fourcc2str().
  */
-attribute_deprecated
 size_t av_get_codec_tag_string(char *buf, size_t buf_size, unsigned int codec_tag);
 #endif
 
@@ -5911,7 +5832,6 @@ typedef struct AVBitStreamFilter {
  *
  * @see avcodec_register_all()
  */
-attribute_deprecated
 void av_register_bitstream_filter(AVBitStreamFilter *bsf);
 
 /**
@@ -5924,7 +5844,6 @@ void av_register_bitstream_filter(AVBitS
  * @return a bitstream filter context if a matching filter was found
  * and successfully initialized, NULL otherwise
  */
-attribute_deprecated
 AVBitStreamFilterContext *av_bitstream_filter_init(const char *name);
 
 /**
@@ -5956,7 +5875,6 @@ AVBitStreamFilterContext *av_bitstream_f
  * its starting address). A special case is if *poutbuf was set to NULL and
  * *poutbuf_size was set to 0, which indicates the packet should be dropped.
  */
-attribute_deprecated
 int av_bitstream_filter_filter(AVBitStreamFilterContext *bsfc,
                                AVCodecContext *avctx, const char *args,
                                uint8_t **poutbuf, int *poutbuf_size,
@@ -5968,7 +5886,6 @@ int av_bitstream_filter_filter(AVBitStre
  * @param bsf the bitstream filter context created with
  * av_bitstream_filter_init(), can be NULL
  */
-attribute_deprecated
 void av_bitstream_filter_close(AVBitStreamFilterContext *bsf);
 
 /**
@@ -5979,7 +5896,6 @@ void av_bitstream_filter_close(AVBitStre
  * This function can be used to iterate over all registered bitstream
  * filters.
  */
-attribute_deprecated
 AVBitStreamFilter *av_bitstream_filter_next(const AVBitStreamFilter *f);
 #endif
 
@@ -6203,7 +6119,6 @@ unsigned int av_xiphlacing(unsigned char
  * mailing list.
  * @deprecated Use avpriv_report_missing_feature() instead.
  */
-attribute_deprecated
 void av_log_missing_feature(void *avc, const char *feature, int want_sample);
 
 /**
@@ -6215,7 +6130,6 @@ void av_log_missing_feature(void *avc, c
  * @param[in] msg string containing an optional message, or NULL if no message
  * @deprecated Use avpriv_request_sample() instead.
  */
-attribute_deprecated
 void av_log_ask_for_sample(void *avc, const char *msg, ...) av_printf_format(2, 3);
 #endif /* FF_API_MISSING_SAMPLE */
 
diff -pruN csrc.orig/libavcodec/vaapi.h csrc/libavcodec/vaapi.h
--- csrc.orig/libavcodec/vaapi.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavcodec/vaapi.h	2017-05-07 08:37:38.369873216 +0200
@@ -53,7 +53,7 @@
  *
  * Deprecated: use AVCodecContext.hw_frames_ctx instead.
  */
-struct attribute_deprecated vaapi_context {
+struct vaapi_context {
     /**
      * Window system dependent data
      *
@@ -85,7 +85,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t pic_param_buf_id;
 
     /**
@@ -94,7 +93,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t iq_matrix_buf_id;
 
     /**
@@ -103,7 +101,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t bitplane_buf_id;
 
     /**
@@ -112,7 +109,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t *slice_buf_ids;
 
     /**
@@ -121,7 +117,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int n_slice_buf_ids;
 
     /**
@@ -130,7 +125,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_buf_ids_alloc;
 
     /**
@@ -139,7 +133,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     void *slice_params;
 
     /**
@@ -148,7 +141,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_param_size;
 
     /**
@@ -157,7 +149,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_params_alloc;
 
     /**
@@ -166,7 +157,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_count;
 
     /**
@@ -174,7 +164,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     const uint8_t *slice_data;
 
     /**
@@ -183,7 +172,6 @@ struct attribute_deprecated vaapi_contex
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t slice_data_size;
 #endif
 };
diff -pruN csrc.orig/libavcodec/vdpau.h csrc/libavcodec/vdpau.h
--- csrc.orig/libavcodec/vdpau.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavcodec/vdpau.h	2017-05-07 08:36:29.272886004 +0200
@@ -108,7 +108,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     union AVVDPAUPictureInfo info;
 
     /**
@@ -116,7 +115,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     int bitstream_buffers_allocated;
 
     /**
@@ -124,7 +122,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     int bitstream_buffers_used;
 
    /**
@@ -133,7 +130,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     VdpBitstreamBuffer *bitstream_buffers;
 #endif
     AVVDPAU_Render2 render2;
@@ -210,7 +206,6 @@ AVVDPAUContext *av_vdpau_alloc_context(v
  *
  * @return 0 on success (non-negative), a negative AVERROR on failure.
  */
-attribute_deprecated
 int av_vdpau_get_profile(AVCodecContext *avctx, VdpDecoderProfile *profile);
 #endif
 
diff -pruN csrc.orig/libavcodec/xvmc.h csrc/libavcodec/xvmc.h
--- csrc.orig/libavcodec/xvmc.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavcodec/xvmc.h	2017-05-07 08:36:29.272886004 +0200
@@ -43,7 +43,7 @@
 #define AV_XVMC_ID                    0x1DC711C0  /**< special value to ensure that regular pixel routines haven't corrupted the struct
                                                        the number is 1337 speak for the letters IDCT MCo (motion compensation) */
 
-struct attribute_deprecated xvmc_pix_fmt {
+struct xvmc_pix_fmt {
     /** The field contains the special constant value AV_XVMC_ID.
         It is used as a test that the application correctly uses the API,
         and that there is no corruption caused by pixel routines.
diff -pruN csrc.orig/libavfilter/avfilter.h csrc/libavfilter/avfilter.h
--- csrc.orig/libavfilter/avfilter.h	2017-04-28 08:36:01.000000000 +0200
+++ csrc/libavfilter/avfilter.h	2017-05-07 08:37:59.162174573 +0200
@@ -642,7 +642,6 @@ int avfilter_link_get_channels(AVFilterL
  * @deprecated applications are not supposed to mess with links, they should
  * close the sinks.
  */
-attribute_deprecated
 void avfilter_link_set_closed(AVFilterLink *link, int closed);
 
 /**
@@ -667,7 +666,6 @@ void avfilter_register_all(void);
 
 #if FF_API_OLD_FILTER_REGISTER
 /** Uninitialize the filter system. Unregister all filters. */
-attribute_deprecated
 void avfilter_uninit(void);
 #endif
 
@@ -710,7 +708,6 @@ const AVFilter *avfilter_next(const AVFi
  * was already reached.
  * @deprecated use avfilter_next()
  */
-attribute_deprecated
 AVFilter **av_filter_next(AVFilter **filter);
 #endif
 
@@ -725,7 +722,6 @@ AVFilter **av_filter_next(AVFilter **fil
  * @return >= 0 in case of success, a negative error code otherwise
  * @deprecated use avfilter_graph_alloc_filter() instead
  */
-attribute_deprecated
 int avfilter_open(AVFilterContext **filter_ctx, AVFilter *filter, const char *inst_name);
 #endif
 
@@ -741,7 +737,6 @@ int avfilter_open(AVFilterContext **filt
  *               of this parameter varies by filter.
  * @return       zero on success
  */
-attribute_deprecated
 int avfilter_init_filter(AVFilterContext *filter, const char *args, void *opaque);
 #endif
 
@@ -844,7 +839,7 @@ typedef struct AVFilterGraph {
 
     char *scale_sws_opts; ///< sws options to use for the auto-inserted scale filters
 #if FF_API_LAVR_OPTS
-    attribute_deprecated char *resample_lavr_opts;   ///< libavresample options to use for the auto-inserted resample filters
+    char *resample_lavr_opts;   ///< libavresample options to use for the auto-inserted resample filters
 #endif
 
     /**
@@ -954,7 +949,6 @@ AVFilterContext *avfilter_graph_get_filt
  * @deprecated use avfilter_graph_alloc_filter() to allocate a filter in a
  * filter graph
  */
-attribute_deprecated
 int avfilter_graph_add_filter(AVFilterGraph *graphctx, AVFilterContext *filter);
 #endif
 
diff -pruN csrc.orig/libavformat/avformat.h csrc/libavformat/avformat.h
--- csrc.orig/libavformat/avformat.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavformat/avformat.h	2017-05-07 08:36:29.276886060 +0200
@@ -889,7 +889,6 @@ typedef struct AVStream {
     /**
      * @deprecated use the codecpar struct instead
      */
-    attribute_deprecated
     AVCodecContext *codec;
 #endif
     void *priv_data;
@@ -898,7 +897,6 @@ typedef struct AVStream {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     struct AVFrac pts;
 #endif
 
@@ -1865,7 +1863,6 @@ typedef struct AVFormatContext {
      *
      * @deprecated Use io_open and io_close.
      */
-    attribute_deprecated
     int (*open_cb)(struct AVFormatContext *s, AVIOContext **p, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options);
 #endif
 
@@ -1939,8 +1936,8 @@ void      av_format_set_opaque(AVFormatC
 av_format_control_message av_format_get_control_message_cb(const AVFormatContext *s);
 void      av_format_set_control_message_cb(AVFormatContext *s, av_format_control_message callback);
 #if FF_API_OLD_OPEN_CALLBACKS
-attribute_deprecated AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
-attribute_deprecated void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
+AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
+void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
 #endif
 
 /**
@@ -2227,7 +2224,6 @@ int av_probe_input_buffer(AVIOContext *p
  */
 int avformat_open_input(AVFormatContext **ps, const char *url, AVInputFormat *fmt, AVDictionary **options);
 
-attribute_deprecated
 int av_demuxer_open(AVFormatContext *ic);
 
 /**
@@ -2966,7 +2962,6 @@ int avformat_queue_attached_pictures(AVF
  *          AVERROR code on failure
  */
 #if FF_API_OLD_BSF
-attribute_deprecated
 int av_apply_bitstream_filters(AVCodecContext *codec, AVPacket *pkt,
                                AVBitStreamFilterContext *bsfc);
 #endif
diff -pruN csrc.orig/libavformat/avio.h csrc/libavformat/avio.h
--- csrc.orig/libavformat/avio.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavformat/avio.h	2017-05-07 08:36:29.276886060 +0200
@@ -542,7 +542,6 @@ int avio_feof(AVIOContext *s);
 /**
  * @deprecated use avio_feof()
  */
-attribute_deprecated
 int url_feof(AVIOContext *s);
 #endif
 
diff -pruN csrc.orig/libavutil/attributes.h csrc/libavutil/attributes.h
--- csrc.orig/libavutil/attributes.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavutil/attributes.h	2017-05-07 08:36:29.276886060 +0200
@@ -90,14 +90,6 @@
 #    define av_flatten
 #endif
 
-#if AV_GCC_VERSION_AT_LEAST(3,1)
-#    define attribute_deprecated __attribute__((deprecated))
-#elif defined(_MSC_VER)
-#    define attribute_deprecated __declspec(deprecated)
-#else
-#    define attribute_deprecated
-#endif
-
 /**
  * Disable warnings about deprecated features
  * This is useful for sections of code kept for backward compatibility and
diff -pruN csrc.orig/libavutil/cpu.h csrc/libavutil/cpu.h
--- csrc.orig/libavutil/cpu.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavutil/cpu.h	2017-05-07 08:36:29.276886060 +0200
@@ -87,7 +87,7 @@ void av_force_cpu_flags(int flags);
  * This function is mainly useful for testing.
  * Please use av_force_cpu_flags() and av_get_cpu_flags() instead which are more flexible
  */
-attribute_deprecated void av_set_cpu_flags_mask(int mask);
+void av_set_cpu_flags_mask(int mask);
 
 /**
  * Parse CPU flags from a string.
@@ -98,7 +98,6 @@ attribute_deprecated void av_set_cpu_fla
  * Please use av_parse_cpu_caps() when possible.
  * @return a combination of AV_CPU_* flags, negative on error.
  */
-attribute_deprecated
 int av_parse_cpu_flags(const char *s);
 
 /**
diff -pruN csrc.orig/libavutil/frame.h csrc/libavutil/frame.h
--- csrc.orig/libavutil/frame.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavutil/frame.h	2017-05-07 08:38:13.354381263 +0200
@@ -275,7 +275,6 @@ typedef struct AVFrame {
      * PTS copied from the AVPacket that was decoded to produce this frame.
      * @deprecated use the pts field instead
      */
-    attribute_deprecated
     int64_t pkt_pts;
 #endif
 
@@ -309,7 +308,6 @@ typedef struct AVFrame {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     uint64_t error[AV_NUM_DATA_POINTERS];
 #endif
 
@@ -495,15 +493,12 @@ typedef struct AVFrame {
     /**
      * QP table
      */
-    attribute_deprecated
     int8_t *qscale_table;
     /**
      * QP store stride
      */
-    attribute_deprecated
     int qstride;
 
-    attribute_deprecated
     int qscale_type;
 
     AVBufferRef *qp_table_buf;
diff -pruN csrc.orig/libavutil/pixdesc.h csrc/libavutil/pixdesc.h
--- csrc.orig/libavutil/pixdesc.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libavutil/pixdesc.h	2017-05-07 08:36:29.280886117 +0200
@@ -59,13 +59,13 @@ typedef struct AVComponentDescriptor {
 
 #if FF_API_PLUS1_MINUS1
     /** deprecated, use step instead */
-    attribute_deprecated int step_minus1;
+    int step_minus1;
 
     /** deprecated, use depth instead */
-    attribute_deprecated int depth_minus1;
+    int depth_minus1;
 
     /** deprecated, use offset instead */
-    attribute_deprecated int offset_plus1;
+    int offset_plus1;
 #endif
 } AVComponentDescriptor;
 
diff -pruN csrc.orig/libswscale/swscale.h csrc/libswscale/swscale.h
--- csrc.orig/libswscale/swscale.h	2017-04-28 08:36:02.000000000 +0200
+++ csrc/libswscale/swscale.h	2017-05-07 08:36:29.280886117 +0200
@@ -261,14 +261,14 @@ void sws_scaleVec(SwsVector *a, double s
 void sws_normalizeVec(SwsVector *a, double height);
 
 #if FF_API_SWS_VECTOR
-attribute_deprecated SwsVector *sws_getConstVec(double c, int length);
-attribute_deprecated SwsVector *sws_getIdentityVec(void);
-attribute_deprecated void sws_convVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_addVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_subVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_shiftVec(SwsVector *a, int shift);
-attribute_deprecated SwsVector *sws_cloneVec(SwsVector *a);
-attribute_deprecated void sws_printVec2(SwsVector *a, AVClass *log_ctx, int log_level);
+SwsVector *sws_getConstVec(double c, int length);
+SwsVector *sws_getIdentityVec(void);
+void sws_convVec(SwsVector *a, SwsVector *b);
+void sws_addVec(SwsVector *a, SwsVector *b);
+void sws_subVec(SwsVector *a, SwsVector *b);
+void sws_shiftVec(SwsVector *a, int shift);
+SwsVector *sws_cloneVec(SwsVector *a);
+void sws_printVec2(SwsVector *a, AVClass *log_ctx, int log_level);
 #endif
 
 void sws_freeVec(SwsVector *a);
