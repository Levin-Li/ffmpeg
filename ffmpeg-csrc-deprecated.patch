diff -pruN csrc.orig/libavcodec/avcodec.h csrc/libavcodec/avcodec.h
--- csrc.orig/libavcodec/avcodec.h	2016-05-03 17:25:53.000000000 +0200
+++ csrc/libavcodec/avcodec.h	2016-05-03 17:31:47.595261696 +0200
@@ -1492,7 +1492,6 @@ typedef struct AVPacket {
      * for Matroska subtitles, whose duration values could overflow when the
      * duration field was still an int.
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 } AVPacket;
@@ -1543,7 +1542,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is not used for anything in libavcodec
      */
-    attribute_deprecated
     char             codec_name[32];
 #endif
     enum AVCodecID     codec_id; /* see AV_CODEC_ID_xxx */
@@ -1567,7 +1565,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     unsigned int stream_codec_tag;
 #endif
 
@@ -1756,7 +1753,7 @@ typedef struct AVCodecContext {
      * This option does nothing
      * @deprecated use codec private options instead
      */
-    attribute_deprecated int me_method;
+    int me_method;
 #endif
 
     /**
@@ -1820,13 +1817,12 @@ typedef struct AVCodecContext {
 
 #if FF_API_RC_STRATEGY
     /** @deprecated use codec private option instead */
-    attribute_deprecated int rc_strategy;
+    int rc_strategy;
 #define FF_RC_STRATEGY_XVID 1
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int b_frame_strategy;
 #endif
 
@@ -1847,7 +1843,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int mpeg_quant;
 #endif
 
@@ -1911,7 +1906,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
      int prediction_method;
 #define FF_PRED_LEFT   0
 #define FF_PRED_PLANE  1
@@ -1991,7 +1985,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int pre_me;
 #endif
 
@@ -2026,7 +2019,7 @@ typedef struct AVCodecContext {
      * - decoding: Set by decoder.
      * @deprecated Deprecated in favor of AVSideData
      */
-    attribute_deprecated int dtg_active_format;
+    int dtg_active_format;
 #define FF_DTG_AFD_SAME         8
 #define FF_DTG_AFD_4_3          9
 #define FF_DTG_AFD_16_9         10
@@ -2049,13 +2042,13 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private option instead
      */
-    attribute_deprecated int intra_quant_bias;
+    int intra_quant_bias;
 #define FF_DEFAULT_QUANT_BIAS 999999
 
     /**
      * @deprecated use encoder private option instead
      */
-    attribute_deprecated int inter_quant_bias;
+    int inter_quant_bias;
 #endif
 
     /**
@@ -2075,7 +2068,7 @@ typedef struct AVCodecContext {
      * - decoding: set by decoder
      * @deprecated XvMC doesn't need it anymore.
      */
-    attribute_deprecated int xvmc_acceleration;
+    int xvmc_acceleration;
 #endif /* FF_API_XVMC */
 
     /**
@@ -2104,11 +2097,9 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int scenechange_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int noise_reduction;
 #endif
 
@@ -2116,13 +2107,11 @@ typedef struct AVCodecContext {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     int me_threshold;
 
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     int mb_threshold;
 #endif
 
@@ -2151,7 +2140,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float border_masking;
 #endif
 
@@ -2173,7 +2161,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int me_penalty_compensation;
 #endif
 
@@ -2186,7 +2173,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int brd_scale;
 #endif
 
@@ -2206,7 +2192,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int chromaoffset;
 #endif
 
@@ -2216,7 +2201,7 @@ typedef struct AVCodecContext {
      * - encoding: Set by user.
      * - decoding: unused
      */
-    attribute_deprecated int scenechange_factor;
+    int scenechange_factor;
 #endif
 
     /**
@@ -2229,7 +2214,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int b_sensitivity;
 #endif
 
@@ -2483,12 +2467,9 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float rc_qsquish;
 
-    attribute_deprecated
     float rc_qmod_amp;
-    attribute_deprecated
     int rc_qmod_freq;
 #endif
 
@@ -2511,7 +2492,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     const char *rc_eq;
 #endif
 
@@ -2533,10 +2513,8 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     float rc_buffer_aggressivity;
 
-    attribute_deprecated
     float rc_initial_cplx;
 #endif
 
@@ -2572,13 +2550,11 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int coder_type;
 #endif /* FF_API_CODER_TYPE */
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int context_model;
 #endif
 
@@ -2586,31 +2562,25 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int lmin;
 
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int lmax;
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_factor;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_exp;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int frame_skip_cmp;
 #endif /* FF_API_PRIVATE_OPT */
 
@@ -2623,15 +2593,12 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int min_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int max_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int64_t timecode_frame_start;
 #endif
 
@@ -2645,13 +2612,11 @@ typedef struct AVCodecContext {
     /* with a Start Code (it should). H.263 does.   */
     /* mb_nb contains the number of macroblocks     */
     /* encoded in the RTP payload.                  */
-    attribute_deprecated
     void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int rtp_payload_size;   /* The size of the RTP payload: the coder will  */
                             /* do its best to deliver a chunk with size     */
                             /* below rtp_payload_size, the chunk will start */
@@ -2662,25 +2627,16 @@ typedef struct AVCodecContext {
 
 #if FF_API_STAT_BITS
     /* statistics, used for 2-pass encoding */
-    attribute_deprecated
     int mv_bits;
-    attribute_deprecated
     int header_bits;
-    attribute_deprecated
     int i_tex_bits;
-    attribute_deprecated
     int p_tex_bits;
-    attribute_deprecated
     int i_count;
-    attribute_deprecated
     int p_count;
-    attribute_deprecated
     int skip_count;
-    attribute_deprecated
     int misc_bits;
 
     /** @deprecated this field is unused */
-    attribute_deprecated
     int frame_bits;
 #endif
 
@@ -2942,7 +2898,7 @@ typedef struct AVCodecContext {
      *
      * @deprecated use the quality factor packet side data instead
      */
-    attribute_deprecated AVFrame *coded_frame;
+    AVFrame *coded_frame;
 #endif
 
     /**
@@ -3154,7 +3110,6 @@ typedef struct AVCodecContext {
      * @deprecated use the 'error_rate' private AVOption of the mpegvideo
      * encoders
      */
-    attribute_deprecated
     int error_rate;
 #endif
 
@@ -3167,7 +3122,6 @@ typedef struct AVCodecContext {
      * @deprecated this value is now exported as a part of
      * AV_PKT_DATA_CPB_PROPERTIES packet side data
      */
-    attribute_deprecated
     uint64_t vbv_delay;
 #endif
 
@@ -3182,7 +3136,6 @@ typedef struct AVCodecContext {
      * @deprecated this field disables the default behaviour and
      *             it is kept only for compatibility.
      */
-    attribute_deprecated
     int side_data_only_packets;
 #endif
 
@@ -3664,9 +3617,7 @@ typedef struct AVHWAccel {
  * @deprecated use AVFrame or imgutils functions instead
  */
 typedef struct AVPicture {
-    attribute_deprecated
     uint8_t *data[AV_NUM_DATA_POINTERS];    ///< pointers to the image data planes
-    attribute_deprecated
     int linesize[AV_NUM_DATA_POINTERS];     ///< number of bytes per line
 } AVPicture;
 
@@ -3706,7 +3657,6 @@ typedef struct AVSubtitleRect {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     AVPicture pict;
 #endif
     /**
@@ -4013,7 +3963,6 @@ int av_packet_from_data(AVPacket *pkt, u
  *
  * @deprecated Use av_packet_ref
  */
-attribute_deprecated
 int av_dup_packet(AVPacket *pkt);
 /**
  * Copy packet, including contents
@@ -4036,7 +3985,6 @@ int av_copy_packet_side_data(AVPacket *d
  *
  * @param pkt packet to free
  */
-attribute_deprecated
 void av_free_packet(AVPacket *pkt);
 #endif
 /**
@@ -4229,7 +4177,6 @@ int avcodec_default_get_buffer2(AVCodecC
  * @deprecated CODEC_FLAG_EMU_EDGE is deprecated, so this function is no longer
  * needed
  */
-attribute_deprecated
 unsigned avcodec_get_edge_width(void);
 #endif
 
@@ -4473,7 +4420,6 @@ typedef struct AVCodecParserContext {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 
@@ -4790,7 +4736,6 @@ typedef struct ReSampleContext ReSampleC
  * @param cutoff           cutoff frequency, 1.0 corresponds to half the output sampling rate
  * @return allocated ReSampleContext, NULL if error occurred
  */
-attribute_deprecated
 ReSampleContext *av_audio_resample_init(int output_channels, int input_channels,
                                         int output_rate, int input_rate,
                                         enum AVSampleFormat sample_fmt_out,
@@ -4798,7 +4743,6 @@ ReSampleContext *av_audio_resample_init(
                                         int filter_length, int log2_phase_count,
                                         int linear, double cutoff);
 
-attribute_deprecated
 int audio_resample(ReSampleContext *s, short *output, short *input, int nb_samples);
 
 /**
@@ -4807,7 +4751,6 @@ int audio_resample(ReSampleContext *s, s
  * @param s a non-NULL pointer to a resample context previously
  *          created with av_audio_resample_init()
  */
-attribute_deprecated
 void audio_resample_close(ReSampleContext *s);
 
 
@@ -4820,7 +4763,6 @@ void audio_resample_close(ReSampleContex
                  between the 2 closest, if 0 the closest will be used
  * @param cutoff cutoff frequency, 1.0 corresponds to half the output sampling rate
  */
-attribute_deprecated
 struct AVResampleContext *av_resample_init(int out_rate, int in_rate, int filter_length, int log2_phase_count, int linear, double cutoff);
 
 /**
@@ -4832,7 +4774,6 @@ struct AVResampleContext *av_resample_in
  * @param update_ctx If this is 0 then the context will not be modified, that way several channels can be resampled with the same context.
  * @return the number of samples written in dst or -1 if an error occurred
  */
-attribute_deprecated
 int av_resample(struct AVResampleContext *c, short *dst, short *src, int *consumed, int src_size, int dst_size, int update_ctx);
 
 
@@ -4848,9 +4789,7 @@ int av_resample(struct AVResampleContext
  * note, due to rounding the actual compensation might be slightly different,
  * especially if the compensation_distance is large and the in_rate used during init is small
  */
-attribute_deprecated
 void av_resample_compensate(struct AVResampleContext *c, int sample_delta, int compensation_distance);
-attribute_deprecated
 void av_resample_close(struct AVResampleContext *c);
 
 /**
@@ -4867,26 +4806,22 @@ void av_resample_close(struct AVResample
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int avpicture_alloc(AVPicture *picture, enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 void avpicture_free(AVPicture *picture);
 
 /**
  * @deprecated use av_image_fill_arrays() instead.
  */
-attribute_deprecated
 int avpicture_fill(AVPicture *picture, const uint8_t *ptr,
                    enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated use av_image_copy_to_buffer() instead.
  */
-attribute_deprecated
 int avpicture_layout(const AVPicture *src, enum AVPixelFormat pix_fmt,
                      int width, int height,
                      unsigned char *dest, int dest_size);
@@ -4894,27 +4829,23 @@ int avpicture_layout(const AVPicture *sr
 /**
  * @deprecated use av_image_get_buffer_size() instead.
  */
-attribute_deprecated
 int avpicture_get_size(enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated av_image_copy() instead.
  */
-attribute_deprecated
 void av_picture_copy(AVPicture *dst, const AVPicture *src,
                      enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int av_picture_crop(AVPicture *dst, const AVPicture *src,
                     enum AVPixelFormat pix_fmt, int top_band, int left_band);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int av_picture_pad(AVPicture *dst, const AVPicture *src, int height, int width, enum AVPixelFormat pix_fmt,
             int padtop, int padbottom, int padleft, int padright, int *color);
 
@@ -4996,7 +4927,6 @@ enum AVPixelFormat avcodec_find_best_pix
 enum AVPixelFormat avcodec_find_best_pix_fmt_of_2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
 
-attribute_deprecated
 #if AV_HAVE_INCOMPATIBLE_LIBAV_ABI
 enum AVPixelFormat avcodec_find_best_pix_fmt2(const enum AVPixelFormat *pix_fmt_list,
                                               enum AVPixelFormat src_pix_fmt,
@@ -5017,7 +4947,6 @@ enum AVPixelFormat avcodec_default_get_f
 /**
  * @deprecated this function is not supposed to be used from outside of lavc
  */
-attribute_deprecated
 void avcodec_set_dimensions(AVCodecContext *s, int width, int height);
 #endif
 
@@ -5273,7 +5202,6 @@ unsigned int av_xiphlacing(unsigned char
  * mailing list.
  * @deprecated Use avpriv_report_missing_feature() instead.
  */
-attribute_deprecated
 void av_log_missing_feature(void *avc, const char *feature, int want_sample);
 
 /**
@@ -5285,7 +5213,6 @@ void av_log_missing_feature(void *avc, c
  * @param[in] msg string containing an optional message, or NULL if no message
  * @deprecated Use avpriv_request_sample() instead.
  */
-attribute_deprecated
 void av_log_ask_for_sample(void *avc, const char *msg, ...) av_printf_format(2, 3);
 #endif /* FF_API_MISSING_SAMPLE */
 
diff -pruN csrc.orig/libavcodec/vaapi.h csrc/libavcodec/vaapi.h
--- csrc.orig/libavcodec/vaapi.h	2016-05-02 14:52:08.000000000 +0200
+++ csrc/libavcodec/vaapi.h	2016-05-03 17:26:39.558553240 +0200
@@ -81,7 +81,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t pic_param_buf_id;
 
     /**
@@ -90,7 +89,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t iq_matrix_buf_id;
 
     /**
@@ -99,7 +97,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t bitplane_buf_id;
 
     /**
@@ -108,7 +105,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t *slice_buf_ids;
 
     /**
@@ -117,7 +113,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int n_slice_buf_ids;
 
     /**
@@ -126,7 +121,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_buf_ids_alloc;
 
     /**
@@ -135,7 +129,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     void *slice_params;
 
     /**
@@ -144,7 +137,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_param_size;
 
     /**
@@ -153,7 +145,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_params_alloc;
 
     /**
@@ -162,7 +153,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     unsigned int slice_count;
 
     /**
@@ -170,7 +160,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     const uint8_t *slice_data;
 
     /**
@@ -179,7 +168,6 @@ struct vaapi_context {
      * - encoding: unused
      * - decoding: Set by libavcodec
      */
-    attribute_deprecated
     uint32_t slice_data_size;
 #endif
 };
diff -pruN csrc.orig/libavcodec/vdpau.h csrc/libavcodec/vdpau.h
--- csrc.orig/libavcodec/vdpau.h	2016-05-02 14:52:08.000000000 +0200
+++ csrc/libavcodec/vdpau.h	2016-05-03 17:26:39.562553301 +0200
@@ -108,7 +108,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     union AVVDPAUPictureInfo info;
 
     /**
@@ -116,7 +115,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     int bitstream_buffers_allocated;
 
     /**
@@ -124,7 +122,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     int bitstream_buffers_used;
 
    /**
@@ -133,7 +130,6 @@ typedef struct AVVDPAUContext {
      *
      * Set by libavcodec.
      */
-    attribute_deprecated
     VdpBitstreamBuffer *bitstream_buffers;
 #endif
     AVVDPAU_Render2 render2;
diff -pruN csrc.orig/libavfilter/avfilter.h csrc/libavfilter/avfilter.h
--- csrc.orig/libavfilter/avfilter.h	2016-05-02 14:52:08.000000000 +0200
+++ csrc/libavfilter/avfilter.h	2016-05-03 17:32:13.715659937 +0200
@@ -563,7 +563,6 @@ int avfilter_link_get_channels(AVFilterL
  * @deprecated applications are not supposed to mess with links, they should
  * close the sinks.
  */
-attribute_deprecated
 void avfilter_link_set_closed(AVFilterLink *link, int closed);
 
 /**
@@ -588,7 +587,6 @@ void avfilter_register_all(void);
 
 #if FF_API_OLD_FILTER_REGISTER
 /** Uninitialize the filter system. Unregister all filters. */
-attribute_deprecated
 void avfilter_uninit(void);
 #endif
 
@@ -631,7 +629,6 @@ const AVFilter *avfilter_next(const AVFi
  * was already reached.
  * @deprecated use avfilter_next()
  */
-attribute_deprecated
 AVFilter **av_filter_next(AVFilter **filter);
 #endif
 
@@ -646,7 +643,6 @@ AVFilter **av_filter_next(AVFilter **fil
  * @return >= 0 in case of success, a negative error code otherwise
  * @deprecated use avfilter_graph_alloc_filter() instead
  */
-attribute_deprecated
 int avfilter_open(AVFilterContext **filter_ctx, AVFilter *filter, const char *inst_name);
 #endif
 
@@ -662,7 +658,6 @@ int avfilter_open(AVFilterContext **filt
  *               of this parameter varies by filter.
  * @return       zero on success
  */
-attribute_deprecated
 int avfilter_init_filter(AVFilterContext *filter, const char *args, void *opaque);
 #endif
 
@@ -873,7 +868,6 @@ AVFilterContext *avfilter_graph_get_filt
  * @deprecated use avfilter_graph_alloc_filter() to allocate a filter in a
  * filter graph
  */
-attribute_deprecated
 int avfilter_graph_add_filter(AVFilterGraph *graphctx, AVFilterContext *filter);
 #endif
 
diff -pruN csrc.orig/libavformat/avformat.h csrc/libavformat/avformat.h
--- csrc.orig/libavformat/avformat.h	2016-05-02 14:52:08.000000000 +0200
+++ csrc/libavformat/avformat.h	2016-05-03 17:32:06.519550237 +0200
@@ -891,7 +891,6 @@ typedef struct AVStream {
     /**
      * @deprecated this field is unused
      */
-    attribute_deprecated
     struct AVFrac pts;
 #endif
 
@@ -1828,7 +1827,6 @@ typedef struct AVFormatContext {
      *
      * @deprecated Use io_open and io_close.
      */
-    attribute_deprecated
     int (*open_cb)(struct AVFormatContext *s, AVIOContext **p, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options);
 #endif
 
@@ -1884,8 +1882,8 @@ void      av_format_set_opaque(AVFormatC
 av_format_control_message av_format_get_control_message_cb(const AVFormatContext *s);
 void      av_format_set_control_message_cb(AVFormatContext *s, av_format_control_message callback);
 #if FF_API_OLD_OPEN_CALLBACKS
-attribute_deprecated AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
-attribute_deprecated void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
+AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
+void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
 #endif
 
 /**
@@ -2152,7 +2150,6 @@ int av_probe_input_buffer(AVIOContext *p
  */
 int avformat_open_input(AVFormatContext **ps, const char *url, AVInputFormat *fmt, AVDictionary **options);
 
-attribute_deprecated
 int av_demuxer_open(AVFormatContext *ic);
 
 /**
diff -pruN csrc.orig/libavformat/avio.h csrc/libavformat/avio.h
--- csrc.orig/libavformat/avio.h	2016-05-02 14:52:08.000000000 +0200
+++ csrc/libavformat/avio.h	2016-05-03 17:27:05.886956637 +0200
@@ -459,7 +459,6 @@ int avio_feof(AVIOContext *s);
 /**
  * @deprecated use avio_feof()
  */
-attribute_deprecated
 int url_feof(AVIOContext *s);
 #endif
 
diff -pruN csrc.orig/libavutil/attributes.h csrc/libavutil/attributes.h
--- csrc.orig/libavutil/attributes.h	2016-05-02 14:52:09.000000000 +0200
+++ csrc/libavutil/attributes.h	2016-05-03 17:27:05.886956637 +0200
@@ -90,14 +90,6 @@
 #    define av_flatten
 #endif
 
-#if AV_GCC_VERSION_AT_LEAST(3,1)
-#    define attribute_deprecated __attribute__((deprecated))
-#elif defined(_MSC_VER)
-#    define attribute_deprecated __declspec(deprecated)
-#else
-#    define attribute_deprecated
-#endif
-
 /**
  * Disable warnings about deprecated features
  * This is useful for sections of code kept for backward compatibility and
diff -pruN csrc.orig/libavutil/cpu.h csrc/libavutil/cpu.h
--- csrc.orig/libavutil/cpu.h	2016-05-02 14:52:09.000000000 +0200
+++ csrc/libavutil/cpu.h	2016-05-03 17:27:05.890956698 +0200
@@ -88,7 +88,7 @@ void av_force_cpu_flags(int flags);
  *
  * @warning this function is not thread safe.
  */
-attribute_deprecated void av_set_cpu_flags_mask(int mask);
+void av_set_cpu_flags_mask(int mask);
 
 /**
  * Parse CPU flags from a string.
@@ -99,7 +99,6 @@ attribute_deprecated void av_set_cpu_fla
  * Please use av_parse_cpu_caps() when possible.
  * @return a combination of AV_CPU_* flags, negative on error.
  */
-attribute_deprecated
 int av_parse_cpu_flags(const char *s);
 
 /**
diff -pruN csrc.orig/libavutil/frame.h csrc/libavutil/frame.h
--- csrc.orig/libavutil/frame.h	2016-05-02 14:52:09.000000000 +0200
+++ csrc/libavutil/frame.h	2016-05-03 17:29:50.469474119 +0200
@@ -296,7 +296,6 @@ typedef struct AVFrame {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     uint64_t error[AV_NUM_DATA_POINTERS];
 #endif
 
@@ -495,16 +494,13 @@ typedef struct AVFrame {
      * QP table
      * Not to be accessed directly from outside libavutil
      */
-    attribute_deprecated
     int8_t *qscale_table;
     /**
      * QP store stride
      * Not to be accessed directly from outside libavutil
      */
-    attribute_deprecated
     int qstride;
 
-    attribute_deprecated
     int qscale_type;
 
     /**
diff -pruN csrc.orig/libavutil/pixdesc.h csrc/libavutil/pixdesc.h
--- csrc.orig/libavutil/pixdesc.h	2016-05-02 14:52:09.000000000 +0200
+++ csrc/libavutil/pixdesc.h	2016-05-03 17:30:08.845754785 +0200
@@ -59,13 +59,13 @@ typedef struct AVComponentDescriptor {
 
 #if FF_API_PLUS1_MINUS1
     /** deprecated, use step instead */
-    attribute_deprecated int step_minus1;
+    int step_minus1;
 
     /** deprecated, use depth instead */
-    attribute_deprecated int depth_minus1;
+    int depth_minus1;
 
     /** deprecated, use offset instead */
-    attribute_deprecated int offset_plus1;
+    int offset_plus1;
 #endif
 } AVComponentDescriptor;
 
