diff -pruN src/org/ffmpeg/avcodec/AVCodecContext.java src.bak/org/ffmpeg/avcodec/AVCodecContext.java
--- src/org/ffmpeg/avcodec/AVCodecContext.java	2014-03-11 16:05:35.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVCodecContext.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,309 +0,0 @@
-package org.ffmpeg.avcodec;
-
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVSubtitle;
-import org.ffmpeg.avutil.AVClass;
-import org.ffmpeg.avutil.AVFrame;
-import org.ffmpeg.avutil.AVRational;
-import org.ffmpeg.avutil.AvutilLibrary.AVMediaType;
-import org.ffmpeg.avutil.AvutilLibrary.AVPixelFormat;
-import org.ffmpeg.avutil.AvutilLibrary.AVSampleFormat;
-
-/**
- * Manually constructed data type from libavcodec.h
- * 
- */
-@Library("avcodec")
-public class AVCodecContext extends StructObject {
-	static {
-		BridJ.register();
-	}
-
-	/** C type : AVMediaType */
-	@Field(0)
-	public IntValuedEnum<AVMediaType> codec_type() {
-		return this.io.getEnumField(this, 0);
-	}
-
-	/** C type : AVMediaType */
-	@Field(0)
-	public AVCodecContext codec_type(IntValuedEnum<AVMediaType> codec_type) {
-		this.io.setEnumField(this, 0, codec_type);
-		return this;
-	}
-
-	/** const struct AVCodec *codec; */
-	@Field(1)
-	public Pointer<AVCodec> codec() {
-		return this.io.getPointerField(this, 1);
-	}
-
-	@Field(1)
-	public AVCodecContext codec(Pointer<AVCodec> codec) {
-		this.io.setPointerField(this, 1, codec);
-		return this;
-	}
-
-	/** C type : AVCodecID */
-	@Field(2)
-	public IntValuedEnum<AVCodecID> codec_id() {
-		return this.io.getEnumField(this, 2);
-	}
-
-	/** C type : AVCodecID */
-	@Field(2)
-	public AVCodecContext codec_id(IntValuedEnum<AVCodecID> codec_id) {
-		this.io.setEnumField(this, 2, codec_id);
-		return this;
-	}
-
-	/** void *priv_data; */
-	@Field(3)
-	public Pointer<?> priv_data() {
-		return this.io.getPointerField(this, 3);
-	}
-
-	@Field(3)
-	public AVCodecContext priv_data(Pointer<?> priv_data) {
-		this.io.setPointerField(this, 3, priv_data);
-		return this;
-	}
-
-	/** void *opaque;4 */
-	@Field(4)
-	public Pointer<?> opaque() {
-		return this.io.getPointerField(this, 4);
-	}
-
-	@Field(4)
-	public AVCodecContext opaque(Pointer<?> opaque) {
-		this.io.setPointerField(this, 4, opaque);
-		return this;
-	}
-
-	@Field(5)
-	public int bit_rate() {
-		return this.io.getIntField(this, 5);
-	}
-
-	@Field(5)
-	public AVCodecContext bit_rate(int bit_rate) {
-		this.io.setIntField(this, 5, bit_rate);
-		return this;
-	}
-
-	@Field(6)
-	public int bit_rate_tolerance() {
-		return this.io.getIntField(this, 6);
-	}
-
-	@Field(6)
-	public AVCodecContext bit_rate_tolerance(int bit_rate_tolerance) {
-		this.io.setIntField(this, 6, bit_rate_tolerance);
-		return this;
-	}
-
-	@Field(7)
-	public int flags() {
-		return this.io.getIntField(this, 7);
-	}
-
-	@Field(7)
-	public AVCodecContext flags(int flags) {
-		this.io.setIntField(this, 7, flags);
-		return this;
-	}
-
-	/** uint8_t *extradata;8 */
-	@Field(8)
-	public Pointer<Byte> extradata() {
-		return this.io.getPointerField(this, 8);
-	}
-
-	@Field(8)
-	public AVCodecContext extradata(Pointer<Byte> extradata) {
-		this.io.setPointerField(this, 8, extradata);
-		return this;
-	}
-
-	@Field(9)
-	public int extradata_size() {
-		return this.io.getIntField(this, 9);
-	}
-
-	@Field(9)
-	public AVCodecContext extradata_size(int extradata_size) {
-		this.io.setIntField(this, 9, extradata_size);
-		return this;
-	}
-
-	/** C type : AVRational */
-	@Field(10)
-	public AVRational time_base() {
-		return this.io.getNativeObjectField(this, 10);
-	}
-
-	/** C type : AVRational */
-	@Field(10)
-	public AVCodecContext sample_aspect_ratio(AVRational time_base) {
-		this.io.setNativeObjectField(this, 10, time_base);
-		return this;
-	}
-
-	@Field(11)
-	public int ticks_per_frame() {
-		return this.io.getIntField(this, 11);
-	}
-
-	@Field(11)
-	public AVCodecContext ticks_per_frame(int ticks_per_frame) {
-		this.io.setIntField(this, 11, ticks_per_frame);
-		return this;
-	}
-
-	@Field(12)
-	public int width() {
-		return this.io.getIntField(this, 12);
-	}
-
-	@Field(12)
-	public AVCodecContext width(int width) {
-		this.io.setIntField(this, 12, width);
-		return this;
-	}
-
-	@Field(13)
-	public int height() {
-		return this.io.getIntField(this, 13);
-	}
-
-	@Field(13)
-	public AVCodecContext height(int height) {
-		this.io.setIntField(this, 13, height);
-		return this;
-	}
-
-	@Field(14)
-	public int gop_size() {
-		return this.io.getIntField(this, 14);
-	}
-
-	@Field(14)
-	public AVCodecContext gop_size(int gop_size) {
-		this.io.setIntField(this, 14, gop_size);
-		return this;
-	}
-
-	/** C type : AVPixelFormat */
-	@Field(15)
-	public IntValuedEnum<AVPixelFormat> pix_fmt() {
-		return this.io.getEnumField(this, 15);
-	}
-
-	/** C type : AVPixelFormat */
-	@Field(15)
-	public AVCodecContext pix_fmt(IntValuedEnum<AVPixelFormat> pix_fmt) {
-		this.io.setEnumField(this, 15, pix_fmt);
-		return this;
-	}
-
-	@Field(16)
-	public int max_b_frames() {
-		return this.io.getIntField(this, 16);
-	}
-
-	@Field(16)
-	public AVCodecContext max_b_frames(int max_b_frames) {
-		this.io.setIntField(this, 16, max_b_frames);
-		return this;
-	}
-
-	@Field(17)
-	public int has_b_frames() {
-		return this.io.getIntField(this, 17);
-	}
-
-	@Field(17)
-	public AVCodecContext has_b_frames(int has_b_frames) {
-		this.io.setIntField(this, 17, has_b_frames);
-		return this;
-	}
-
-	@Field(18)
-	public int sample_rate() {
-		return this.io.getIntField(this, 18);
-	}
-	
-	@Field(18)
-	public AVCodecContext sample_rate(int sample_rate) {
-		this.io.setIntField(this, 18, sample_rate);
-		return this;
-	}
-	
-	@Field(19)
-	public int channels() {
-		return this.io.getIntField(this, 19);
-	}
-	
-	@Field(19)
-	public AVCodecContext channels(int channels) {
-		this.io.setIntField(this, 19, channels);
-		return this;
-	}
-	
-	/** enum AVSampleFormat sample_fmt; ///< sample format */
-	@Field(20)
-	public IntValuedEnum<AVSampleFormat> sample_fmt() {
-		return this.io.getEnumField(this, 20);
-	}
-
-	@Field(20)
-	public AVCodecContext sample_fmt(IntValuedEnum<AVSampleFormat> sample_fmt) {
-		this.io.setEnumField(this, 20, sample_fmt);
-		return this;
-	}
-
-	@Field(21)
-	public int strict_std_compliance() {
-		return this.io.getIntField(this, 21);
-	}
-
-	@Field(21)
-	public AVCodecContext strict_std_compliance(int strict_std_compliance) {
-		this.io.setIntField(this, 21, strict_std_compliance);
-		return this;
-	}
-
-	/** C type AVFrame */
-	@Field(22)
-	public Pointer<AVFrame> coded_frame() {
-		return this.io.getPointerField(this, 22);
-	}
-
-	@Field(22)
-	public AVCodecContext coded_frame(Pointer<AVFrame> coded_frame) {
-		this.io.setPointerField(this, 22, coded_frame);
-		return this;
-	}
-
-	/** uint8_t *subtitle_header */
-	@Field(23)
-	public Pointer<Byte> subtitle_header() {
-		return this.io.getPointerField(this, 23);
-	}
-
-	@Field(23)
-	public AVCodecContext subtitle_header(Pointer<Byte> subtitle_header) {
-		this.io.setPointerField(this, 23, subtitle_header);
-		return this;
-	}
-
-}
diff -pruN src/org/ffmpeg/avcodec/AVCodecDescriptor.java src.bak/org/ffmpeg/avcodec/AVCodecDescriptor.java
--- src/org/ffmpeg/avcodec/AVCodecDescriptor.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVCodecDescriptor.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,80 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avutil.AvutilLibrary.AVMediaType;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:883</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVCodecDescriptor extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : AVCodecID */
-	@Field(0) 
-	public IntValuedEnum<AVCodecID > id() {
-		return this.io.getEnumField(this, 0);
-	}
-	/** C type : AVCodecID */
-	@Field(0) 
-	public AVCodecDescriptor id(IntValuedEnum<AVCodecID > id) {
-		this.io.setEnumField(this, 0, id);
-		return this;
-	}
-	/** C type : AVMediaType */
-	@Field(1) 
-	public IntValuedEnum<AVMediaType > type() {
-		return this.io.getEnumField(this, 1);
-	}
-	/** C type : AVMediaType */
-	@Field(1) 
-	public AVCodecDescriptor type(IntValuedEnum<AVMediaType > type) {
-		this.io.setEnumField(this, 1, type);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(2) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : const char* */
-	@Field(2) 
-	public AVCodecDescriptor name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 2, name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(3) 
-	public Pointer<Byte > long_name() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : const char* */
-	@Field(3) 
-	public AVCodecDescriptor long_name(Pointer<Byte > long_name) {
-		this.io.setPointerField(this, 3, long_name);
-		return this;
-	}
-	@Field(4) 
-	public int props() {
-		return this.io.getIntField(this, 4);
-	}
-	@Field(4) 
-	public AVCodecDescriptor props(int props) {
-		this.io.setIntField(this, 4, props);
-		return this;
-	}
-	public AVCodecDescriptor() {
-		super();
-	}
-	public AVCodecDescriptor(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avcodec/AVCodec.java src.bak/org/ffmpeg/avcodec/AVCodec.java
--- src/org/ffmpeg/avcodec/AVCodec.java	2014-03-11 18:01:20.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVCodec.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,403 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avcodec.AVCodecContext;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVSubtitle;
-import org.ffmpeg.avutil.AVClass;
-import org.ffmpeg.avutil.AVFrame;
-import org.ffmpeg.avutil.AVRational;
-import org.ffmpeg.avutil.AvutilLibrary.AVMediaType;
-import org.ffmpeg.avutil.AvutilLibrary.AVPixelFormat;
-import org.ffmpeg.avutil.AvutilLibrary.AVSampleFormat;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1134</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public abstract class AVCodec extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVCodec name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 0, name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public Pointer<Byte > long_name() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public AVCodec long_name(Pointer<Byte > long_name) {
-		this.io.setPointerField(this, 1, long_name);
-		return this;
-	}
-	/** C type : AVMediaType */
-	@Field(2) 
-	public IntValuedEnum<AVMediaType > type() {
-		return this.io.getEnumField(this, 2);
-	}
-	/** C type : AVMediaType */
-	@Field(2) 
-	public AVCodec type(IntValuedEnum<AVMediaType > type) {
-		this.io.setEnumField(this, 2, type);
-		return this;
-	}
-	/** C type : AVCodecID */
-	@Field(3) 
-	public IntValuedEnum<AVCodecID > id() {
-		return this.io.getEnumField(this, 3);
-	}
-	/** C type : AVCodecID */
-	@Field(3) 
-	public AVCodec id(IntValuedEnum<AVCodecID > id) {
-		this.io.setEnumField(this, 3, id);
-		return this;
-	}
-	@Field(4) 
-	public int capabilities() {
-		return this.io.getIntField(this, 4);
-	}
-	@Field(4) 
-	public AVCodec capabilities(int capabilities) {
-		this.io.setIntField(this, 4, capabilities);
-		return this;
-	}
-	/**
-	 * < array of supported framerates, or NULL if any, array is terminated by {0,0}<br>
-	 * C type : const AVRational*
-	 */
-	@Field(5) 
-	public Pointer<AVRational > supported_framerates() {
-		return this.io.getPointerField(this, 5);
-	}
-	/**
-	 * < array of supported framerates, or NULL if any, array is terminated by {0,0}<br>
-	 * C type : const AVRational*
-	 */
-	@Field(5) 
-	public AVCodec supported_framerates(Pointer<AVRational > supported_framerates) {
-		this.io.setPointerField(this, 5, supported_framerates);
-		return this;
-	}
-	/**
-	 * < array of supported pixel formats, or NULL if unknown, array is terminated by -1<br>
-	 * C type : AVPixelFormat*
-	 */
-	@Field(6) 
-	public Pointer<IntValuedEnum<AVPixelFormat > > pix_fmts() {
-		return this.io.getPointerField(this, 6);
-	}
-	/**
-	 * < array of supported pixel formats, or NULL if unknown, array is terminated by -1<br>
-	 * C type : AVPixelFormat*
-	 */
-	@Field(6) 
-	public AVCodec pix_fmts(Pointer<IntValuedEnum<AVPixelFormat > > pix_fmts) {
-		this.io.setPointerField(this, 6, pix_fmts);
-		return this;
-	}
-	/**
-	 * < array of supported audio samplerates, or NULL if unknown, array is terminated by 0<br>
-	 * C type : const int*
-	 */
-	@Field(7) 
-	public Pointer<Integer > supported_samplerates() {
-		return this.io.getPointerField(this, 7);
-	}
-	/**
-	 * < array of supported audio samplerates, or NULL if unknown, array is terminated by 0<br>
-	 * C type : const int*
-	 */
-	@Field(7) 
-	public AVCodec supported_samplerates(Pointer<Integer > supported_samplerates) {
-		this.io.setPointerField(this, 7, supported_samplerates);
-		return this;
-	}
-	/**
-	 * < array of supported sample formats, or NULL if unknown, array is terminated by -1<br>
-	 * C type : AVSampleFormat*
-	 */
-	@Field(8) 
-	public Pointer<IntValuedEnum<AVSampleFormat > > sample_fmts() {
-		return this.io.getPointerField(this, 8);
-	}
-	/**
-	 * < array of supported sample formats, or NULL if unknown, array is terminated by -1<br>
-	 * C type : AVSampleFormat*
-	 */
-	@Field(8) 
-	public AVCodec sample_fmts(Pointer<IntValuedEnum<AVSampleFormat > > sample_fmts) {
-		this.io.setPointerField(this, 8, sample_fmts);
-		return this;
-	}
-	/**
-	 * < array of support channel layouts, or NULL if unknown. array is terminated by 0<br>
-	 * C type : const uint64_t*
-	 */
-	@Field(9) 
-	public Pointer<Long > channel_layouts() {
-		return this.io.getPointerField(this, 9);
-	}
-	/**
-	 * < array of support channel layouts, or NULL if unknown. array is terminated by 0<br>
-	 * C type : const uint64_t*
-	 */
-	@Field(9) 
-	public AVCodec channel_layouts(Pointer<Long > channel_layouts) {
-		this.io.setPointerField(this, 9, channel_layouts);
-		return this;
-	}
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(10) 
-	public Pointer<AVClass > priv_class() {
-		return this.io.getPointerField(this, 10);
-	}
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(10) 
-	public AVCodec priv_class(Pointer<AVClass > priv_class) {
-		this.io.setPointerField(this, 10, priv_class);
-		return this;
-	}
-	/**
-	 * < array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}<br>
-	 * C type : const AVProfile*
-	 */
-	@Field(11) 
-	public Pointer<AVProfile > profiles() {
-		return this.io.getPointerField(this, 11);
-	}
-	/**
-	 * < array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}<br>
-	 * C type : const AVProfile*
-	 */
-	@Field(11) 
-	public AVCodec profiles(Pointer<AVProfile > profiles) {
-		this.io.setPointerField(this, 11, profiles);
-		return this;
-	}
-	@Field(12) 
-	public int priv_data_size() {
-		return this.io.getIntField(this, 12);
-	}
-	@Field(12) 
-	public AVCodec priv_data_size(int priv_data_size) {
-		this.io.setIntField(this, 12, priv_data_size);
-		return this;
-	}
-	/** C type : AVCodec* */
-	@Field(13) 
-	public Pointer<AVCodec > next() {
-		return this.io.getPointerField(this, 13);
-	}
-	/** C type : AVCodec* */
-	@Field(13) 
-	public AVCodec next(Pointer<AVCodec > next) {
-		this.io.setPointerField(this, 13, next);
-		return this;
-	}
-	/** C type : init_thread_copy_callback* */
-	@Field(14) 
-	public Pointer<AVCodec.init_thread_copy_callback > init_thread_copy() {
-		return this.io.getPointerField(this, 14);
-	}
-	/** C type : init_thread_copy_callback* */
-	@Field(14) 
-	public AVCodec init_thread_copy(Pointer<AVCodec.init_thread_copy_callback > init_thread_copy) {
-		this.io.setPointerField(this, 14, init_thread_copy);
-		return this;
-	}
-	/** C type : update_thread_context_callback* */
-	@Field(15) 
-	public Pointer<AVCodec.update_thread_context_callback > update_thread_context() {
-		return this.io.getPointerField(this, 15);
-	}
-	/** C type : update_thread_context_callback* */
-	@Field(15) 
-	public AVCodec update_thread_context(Pointer<AVCodec.update_thread_context_callback > update_thread_context) {
-		this.io.setPointerField(this, 15, update_thread_context);
-		return this;
-	}
-	/** Conversion Error : const AVCodecDefault* (failed to convert type to Java (undefined type)) */
-	/** C type : init_static_data_callback* */
-	@Field(17) 
-	public Pointer<AVCodec.init_static_data_callback > init_static_data() {
-		return this.io.getPointerField(this, 17);
-	}
-	/** C type : init_static_data_callback* */
-	@Field(17) 
-	public AVCodec init_static_data(Pointer<AVCodec.init_static_data_callback > init_static_data) {
-		this.io.setPointerField(this, 17, init_static_data);
-		return this;
-	}
-	/** C type : init_callback* */
-	@Field(18) 
-	public Pointer<AVCodec.init_callback > init() {
-		return this.io.getPointerField(this, 18);
-	}
-	/** C type : init_callback* */
-	@Field(18) 
-	public AVCodec init(Pointer<AVCodec.init_callback > init) {
-		this.io.setPointerField(this, 18, init);
-		return this;
-	}
-	/** C type : encode_sub_callback* */
-	@Field(19) 
-	public Pointer<AVCodec.encode_sub_callback > encode_sub() {
-		return this.io.getPointerField(this, 19);
-	}
-	/** C type : encode_sub_callback* */
-	@Field(19) 
-	public AVCodec encode_sub(Pointer<AVCodec.encode_sub_callback > encode_sub) {
-		this.io.setPointerField(this, 19, encode_sub);
-		return this;
-	}
-	/** C type : encode2_callback* */
-	@Field(20) 
-	public Pointer<AVCodec.encode2_callback > encode2() {
-		return this.io.getPointerField(this, 20);
-	}
-	/** C type : encode2_callback* */
-	@Field(20) 
-	public AVCodec encode2(Pointer<AVCodec.encode2_callback > encode2) {
-		this.io.setPointerField(this, 20, encode2);
-		return this;
-	}
-	/** C type : decode_callback* */
-	@Field(21) 
-	public Pointer<AVCodec.decode_callback > decode() {
-		return this.io.getPointerField(this, 21);
-	}
-	/** C type : decode_callback* */
-	@Field(21) 
-	public AVCodec decode(Pointer<AVCodec.decode_callback > decode) {
-		this.io.setPointerField(this, 21, decode);
-		return this;
-	}
-	/** C type : close_callback* */
-	@Field(22) 
-	public Pointer<AVCodec.close_callback > close() {
-		return this.io.getPointerField(this, 22);
-	}
-	/** C type : close_callback* */
-	@Field(22) 
-	public AVCodec close(Pointer<AVCodec.close_callback > close) {
-		this.io.setPointerField(this, 22, close);
-		return this;
-	}
-	/** C type : flush_callback* */
-	@Field(23) 
-	public Pointer<AVCodec.flush_callback > flush() {
-		return this.io.getPointerField(this, 23);
-	}
-	/** C type : flush_callback* */
-	@Field(23) 
-	public AVCodec flush(Pointer<AVCodec.flush_callback > flush) {
-		this.io.setPointerField(this, 23, flush);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1125</i> */
-	public static abstract class init_thread_copy_callback extends Callback<init_thread_copy_callback > {
-		public int apply(Pointer<AVCodecContext > AVCodecContextPtr1) {
-			return apply(Pointer.getPeer(AVCodecContextPtr1));
-		}
-		public int apply(@Ptr long AVCodecContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1126</i> */
-	public static abstract class update_thread_context_callback extends Callback<update_thread_context_callback > {
-		public int apply(Pointer<AVCodecContext > dst, Pointer<AVCodecContext > src) {
-			return apply(Pointer.getPeer(dst), Pointer.getPeer(src));
-		}
-		public int apply(@Ptr long dst, @Ptr long src) {
-			return apply(Pointer.pointerToAddress(dst, AVCodecContext.class), Pointer.pointerToAddress(src, AVCodecContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1127</i> */
-	public static abstract class init_static_data_callback extends Callback<init_static_data_callback > {
-		public void apply(Pointer<AVCodec > codec) {
-			apply(Pointer.getPeer(codec));
-		}
-		public void apply(@Ptr long codec) {
-			apply(Pointer.pointerToAddress(codec, AVCodec.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1128</i> */
-	public static abstract class init_callback extends Callback<init_callback > {
-		public int apply(Pointer<AVCodecContext > AVCodecContextPtr1) {
-			return apply(Pointer.getPeer(AVCodecContextPtr1));
-		}
-		public int apply(@Ptr long AVCodecContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1129</i> */
-	public static abstract class encode_sub_callback extends Callback<encode_sub_callback > {
-		public int apply(Pointer<AVCodecContext > AVCodecContextPtr1, Pointer<Byte > buf, int buf_size, Pointer<AVSubtitle > sub) {
-			return apply(Pointer.getPeer(AVCodecContextPtr1), Pointer.getPeer(buf), buf_size, Pointer.getPeer(sub));
-		}
-		public int apply(@Ptr long AVCodecContextPtr1, @Ptr long buf, int buf_size, @Ptr long sub) {
-			return apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class), Pointer.pointerToAddress(buf, Byte.class), buf_size, Pointer.pointerToAddress(sub, AVSubtitle.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1130</i> */
-	public static abstract class encode2_callback extends Callback<encode2_callback > {
-		public int apply(Pointer<AVCodecContext > avctx, Pointer<AVPacket > avpkt, Pointer<AVFrame > frame, Pointer<Integer > got_packet_ptr) {
-			return apply(Pointer.getPeer(avctx), Pointer.getPeer(avpkt), Pointer.getPeer(frame), Pointer.getPeer(got_packet_ptr));
-		}
-		public int apply(@Ptr long avctx, @Ptr long avpkt, @Ptr long frame, @Ptr long got_packet_ptr) {
-			return apply(Pointer.pointerToAddress(avctx, AVCodecContext.class), Pointer.pointerToAddress(avpkt, AVPacket.class), Pointer.pointerToAddress(frame, AVFrame.class), Pointer.pointerToAddress(got_packet_ptr, Integer.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1131</i> */
-	public static abstract class decode_callback extends Callback<decode_callback > {
-		public int apply(Pointer<AVCodecContext > AVCodecContextPtr1, Pointer<? > outdata, Pointer<Integer > outdata_size, Pointer<AVPacket > avpkt) {
-			return apply(Pointer.getPeer(AVCodecContextPtr1), Pointer.getPeer(outdata), Pointer.getPeer(outdata_size), Pointer.getPeer(avpkt));
-		}
-		public int apply(@Ptr long AVCodecContextPtr1, @Ptr long outdata, @Ptr long outdata_size, @Ptr long avpkt) {
-			return apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class), Pointer.pointerToAddress(outdata), Pointer.pointerToAddress(outdata_size, Integer.class), Pointer.pointerToAddress(avpkt, AVPacket.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1132</i> */
-	public static abstract class close_callback extends Callback<close_callback > {
-		public int apply(Pointer<AVCodecContext > AVCodecContextPtr1) {
-			return apply(Pointer.getPeer(AVCodecContextPtr1));
-		}
-		public int apply(@Ptr long AVCodecContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1133</i> */
-	public static abstract class flush_callback extends Callback<flush_callback > {
-		public void apply(Pointer<AVCodecContext > AVCodecContextPtr1) {
-			apply(Pointer.getPeer(AVCodecContextPtr1));
-		}
-		public void apply(@Ptr long AVCodecContextPtr1) {
-			apply(Pointer.pointerToAddress(AVCodecContextPtr1, AVCodecContext.class));
-		}
-	};
-}
diff -pruN src/org/ffmpeg/avcodec/AvcodecLibrary.java src.bak/org/ffmpeg/avcodec/AvcodecLibrary.java
--- src/org/ffmpeg/avcodec/AvcodecLibrary.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AvcodecLibrary.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,4659 +0,0 @@
-package org.ffmpeg.avcodec;
-import java.util.Collections;
-import java.util.Iterator;
-import org.bridj.BridJ;
-import org.bridj.CRuntime;
-import org.bridj.FlagSet;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.ann.Array;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.bridj.ann.Runtime;
-import org.bridj.util.DefaultParameterizedType;
-import org.ffmpeg.avutil.AVClass;
-import org.ffmpeg.avutil.AVDictionary;
-import org.ffmpeg.avutil.AVFrame;
-import org.ffmpeg.avutil.AVRational;
-import org.ffmpeg.avutil.AvutilLibrary.AVColorRange;
-import org.ffmpeg.avutil.AvutilLibrary.AVColorSpace;
-import org.ffmpeg.avutil.AvutilLibrary.AVMediaType;
-import org.ffmpeg.avutil.AvutilLibrary.AVPixelFormat;
-import org.ffmpeg.avutil.AvutilLibrary.AVSampleFormat;
-/**
- * Wrapper for library <b>avcodec</b><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-@Runtime(CRuntime.class) 
-public class AvcodecLibrary {
-	static {
-		BridJ.register();
-	}
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:768</i>
-	 */
-	public enum AVCodecID implements IntValuedEnum<AVCodecID > {
-		AV_CODEC_ID_NONE(0),
-		/** video codecs */
-		AV_CODEC_ID_MPEG1VIDEO(1),
-		/** < preferred ID for MPEG-1/2 video decoding */
-		AV_CODEC_ID_MPEG2VIDEO(2),
-		AV_CODEC_ID_MPEG2VIDEO_XVMC(3),
-		AV_CODEC_ID_H261(4),
-		AV_CODEC_ID_H263(5),
-		AV_CODEC_ID_RV10(6),
-		AV_CODEC_ID_RV20(7),
-		AV_CODEC_ID_MJPEG(8),
-		AV_CODEC_ID_MJPEGB(9),
-		AV_CODEC_ID_LJPEG(10),
-		AV_CODEC_ID_SP5X(11),
-		AV_CODEC_ID_JPEGLS(12),
-		AV_CODEC_ID_MPEG4(13),
-		AV_CODEC_ID_RAWVIDEO(14),
-		AV_CODEC_ID_MSMPEG4V1(15),
-		AV_CODEC_ID_MSMPEG4V2(16),
-		AV_CODEC_ID_MSMPEG4V3(17),
-		AV_CODEC_ID_WMV1(18),
-		AV_CODEC_ID_WMV2(19),
-		AV_CODEC_ID_H263P(20),
-		AV_CODEC_ID_H263I(21),
-		AV_CODEC_ID_FLV1(22),
-		AV_CODEC_ID_SVQ1(23),
-		AV_CODEC_ID_SVQ3(24),
-		AV_CODEC_ID_DVVIDEO(25),
-		AV_CODEC_ID_HUFFYUV(26),
-		AV_CODEC_ID_CYUV(27),
-		AV_CODEC_ID_H264(28),
-		AV_CODEC_ID_INDEO3(29),
-		AV_CODEC_ID_VP3(30),
-		AV_CODEC_ID_THEORA(31),
-		AV_CODEC_ID_ASV1(32),
-		AV_CODEC_ID_ASV2(33),
-		AV_CODEC_ID_FFV1(34),
-		AV_CODEC_ID_4XM(35),
-		AV_CODEC_ID_VCR1(36),
-		AV_CODEC_ID_CLJR(37),
-		AV_CODEC_ID_MDEC(38),
-		AV_CODEC_ID_ROQ(39),
-		AV_CODEC_ID_INTERPLAY_VIDEO(40),
-		AV_CODEC_ID_XAN_WC3(41),
-		AV_CODEC_ID_XAN_WC4(42),
-		AV_CODEC_ID_RPZA(43),
-		AV_CODEC_ID_CINEPAK(44),
-		AV_CODEC_ID_WS_VQA(45),
-		AV_CODEC_ID_MSRLE(46),
-		AV_CODEC_ID_MSVIDEO1(47),
-		AV_CODEC_ID_IDCIN(48),
-		AV_CODEC_ID_8BPS(49),
-		AV_CODEC_ID_SMC(50),
-		AV_CODEC_ID_FLIC(51),
-		AV_CODEC_ID_TRUEMOTION1(52),
-		AV_CODEC_ID_VMDVIDEO(53),
-		AV_CODEC_ID_MSZH(54),
-		AV_CODEC_ID_ZLIB(55),
-		AV_CODEC_ID_QTRLE(56),
-		AV_CODEC_ID_TSCC(57),
-		AV_CODEC_ID_ULTI(58),
-		AV_CODEC_ID_QDRAW(59),
-		AV_CODEC_ID_VIXL(60),
-		AV_CODEC_ID_QPEG(61),
-		AV_CODEC_ID_PNG(62),
-		AV_CODEC_ID_PPM(63),
-		AV_CODEC_ID_PBM(64),
-		AV_CODEC_ID_PGM(65),
-		AV_CODEC_ID_PGMYUV(66),
-		AV_CODEC_ID_PAM(67),
-		AV_CODEC_ID_FFVHUFF(68),
-		AV_CODEC_ID_RV30(69),
-		AV_CODEC_ID_RV40(70),
-		AV_CODEC_ID_VC1(71),
-		AV_CODEC_ID_WMV3(72),
-		AV_CODEC_ID_LOCO(73),
-		AV_CODEC_ID_WNV1(74),
-		AV_CODEC_ID_AASC(75),
-		AV_CODEC_ID_INDEO2(76),
-		AV_CODEC_ID_FRAPS(77),
-		AV_CODEC_ID_TRUEMOTION2(78),
-		AV_CODEC_ID_BMP(79),
-		AV_CODEC_ID_CSCD(80),
-		AV_CODEC_ID_MMVIDEO(81),
-		AV_CODEC_ID_ZMBV(82),
-		AV_CODEC_ID_AVS(83),
-		AV_CODEC_ID_SMACKVIDEO(84),
-		AV_CODEC_ID_NUV(85),
-		AV_CODEC_ID_KMVC(86),
-		AV_CODEC_ID_FLASHSV(87),
-		AV_CODEC_ID_CAVS(88),
-		AV_CODEC_ID_JPEG2000(89),
-		AV_CODEC_ID_VMNC(90),
-		AV_CODEC_ID_VP5(91),
-		AV_CODEC_ID_VP6(92),
-		AV_CODEC_ID_VP6F(93),
-		AV_CODEC_ID_TARGA(94),
-		AV_CODEC_ID_DSICINVIDEO(95),
-		AV_CODEC_ID_TIERTEXSEQVIDEO(96),
-		AV_CODEC_ID_TIFF(97),
-		AV_CODEC_ID_GIF(98),
-		AV_CODEC_ID_DXA(99),
-		AV_CODEC_ID_DNXHD(100),
-		AV_CODEC_ID_THP(101),
-		AV_CODEC_ID_SGI(102),
-		AV_CODEC_ID_C93(103),
-		AV_CODEC_ID_BETHSOFTVID(104),
-		AV_CODEC_ID_PTX(105),
-		AV_CODEC_ID_TXD(106),
-		AV_CODEC_ID_VP6A(107),
-		AV_CODEC_ID_AMV(108),
-		AV_CODEC_ID_VB(109),
-		AV_CODEC_ID_PCX(110),
-		AV_CODEC_ID_SUNRAST(111),
-		AV_CODEC_ID_INDEO4(112),
-		AV_CODEC_ID_INDEO5(113),
-		AV_CODEC_ID_MIMIC(114),
-		AV_CODEC_ID_RL2(115),
-		AV_CODEC_ID_ESCAPE124(116),
-		AV_CODEC_ID_DIRAC(117),
-		AV_CODEC_ID_BFI(118),
-		AV_CODEC_ID_CMV(119),
-		AV_CODEC_ID_MOTIONPIXELS(120),
-		AV_CODEC_ID_TGV(121),
-		AV_CODEC_ID_TGQ(122),
-		AV_CODEC_ID_TQI(123),
-		AV_CODEC_ID_AURA(124),
-		AV_CODEC_ID_AURA2(125),
-		AV_CODEC_ID_V210X(126),
-		AV_CODEC_ID_TMV(127),
-		AV_CODEC_ID_V210(128),
-		AV_CODEC_ID_DPX(129),
-		AV_CODEC_ID_MAD(130),
-		AV_CODEC_ID_FRWU(131),
-		AV_CODEC_ID_FLASHSV2(132),
-		AV_CODEC_ID_CDGRAPHICS(133),
-		AV_CODEC_ID_R210(134),
-		AV_CODEC_ID_ANM(135),
-		AV_CODEC_ID_BINKVIDEO(136),
-		AV_CODEC_ID_IFF_ILBM(137),
-		AV_CODEC_ID_IFF_BYTERUN1(138),
-		AV_CODEC_ID_KGV1(139),
-		AV_CODEC_ID_YOP(140),
-		AV_CODEC_ID_VP8(141),
-		AV_CODEC_ID_PICTOR(142),
-		AV_CODEC_ID_ANSI(143),
-		AV_CODEC_ID_A64_MULTI(144),
-		AV_CODEC_ID_A64_MULTI5(145),
-		AV_CODEC_ID_R10K(146),
-		AV_CODEC_ID_MXPEG(147),
-		AV_CODEC_ID_LAGARITH(148),
-		AV_CODEC_ID_PRORES(149),
-		AV_CODEC_ID_JV(150),
-		AV_CODEC_ID_DFA(151),
-		AV_CODEC_ID_WMV3IMAGE(152),
-		AV_CODEC_ID_VC1IMAGE(153),
-		AV_CODEC_ID_UTVIDEO(154),
-		AV_CODEC_ID_BMV_VIDEO(155),
-		AV_CODEC_ID_VBLE(156),
-		AV_CODEC_ID_DXTORY(157),
-		AV_CODEC_ID_V410(158),
-		AV_CODEC_ID_XWD(159),
-		AV_CODEC_ID_CDXL(160),
-		AV_CODEC_ID_XBM(161),
-		AV_CODEC_ID_ZEROCODEC(162),
-		AV_CODEC_ID_MSS1(163),
-		AV_CODEC_ID_MSA1(164),
-		AV_CODEC_ID_TSCC2(165),
-		AV_CODEC_ID_MTS2(166),
-		AV_CODEC_ID_CLLC(167),
-		AV_CODEC_ID_MSS2(168),
-		AV_CODEC_ID_VP9(169),
-		AV_CODEC_ID_AIC(170),
-		AV_CODEC_ID_ESCAPE130_DEPRECATED(171),
-		AV_CODEC_ID_G2M_DEPRECATED(172),
-		AV_CODEC_ID_WEBP_DEPRECATED(173),
-		AV_CODEC_ID_BRENDER_PIX((('X') | (('I') << 8) | (('P') << 16) | ('B' << 24))),
-		AV_CODEC_ID_Y41P((('P') | (('1') << 8) | (('4') << 16) | ('Y' << 24))),
-		AV_CODEC_ID_ESCAPE130((('0') | (('3') << 8) | (('1') << 16) | ('E' << 24))),
-		AV_CODEC_ID_EXR((('R') | (('X') << 8) | (('E') << 16) | ('0' << 24))),
-		AV_CODEC_ID_AVRP((('P') | (('R') << 8) | (('V') << 16) | ('A' << 24))),
-		AV_CODEC_ID_012V((('V') | (('2') << 8) | (('1') << 16) | ('0' << 24))),
-		AV_CODEC_ID_G2M((('M') | (('2') << 8) | (('G') << 16) | (0 << 24))),
-		AV_CODEC_ID_AVUI((('I') | (('U') << 8) | (('V') << 16) | ('A' << 24))),
-		AV_CODEC_ID_AYUV((('V') | (('U') << 8) | (('Y') << 16) | ('A' << 24))),
-		AV_CODEC_ID_TARGA_Y216((('6') | (('1') << 8) | (('2') << 16) | ('T' << 24))),
-		AV_CODEC_ID_V308((('8') | (('0') << 8) | (('3') << 16) | ('V' << 24))),
-		AV_CODEC_ID_V408((('8') | (('0') << 8) | (('4') << 16) | ('V' << 24))),
-		AV_CODEC_ID_YUV4((('4') | (('V') << 8) | (('U') << 16) | ('Y' << 24))),
-		AV_CODEC_ID_SANM((('M') | (('N') << 8) | (('A') << 16) | ('S' << 24))),
-		AV_CODEC_ID_PAF_VIDEO((('V') | (('F') << 8) | (('A') << 16) | ('P' << 24))),
-		AV_CODEC_ID_AVRN((('n') | (('R') << 8) | (('V') << 16) | ('A' << 24))),
-		AV_CODEC_ID_CPIA((('A') | (('I') << 8) | (('P') << 16) | ('C' << 24))),
-		AV_CODEC_ID_XFACE((('C') | (('A') << 8) | (('F') << 16) | ('X' << 24))),
-		AV_CODEC_ID_SGIRLE((('R') | (('I') << 8) | (('G') << 16) | ('S' << 24))),
-		AV_CODEC_ID_MVC1((('1') | (('C') << 8) | (('V') << 16) | ('M' << 24))),
-		AV_CODEC_ID_MVC2((('2') | (('C') << 8) | (('V') << 16) | ('M' << 24))),
-		AV_CODEC_ID_SNOW((('W') | (('O') << 8) | (('N') << 16) | ('S' << 24))),
-		AV_CODEC_ID_WEBP((('P') | (('B') << 8) | (('E') << 16) | ('W' << 24))),
-		AV_CODEC_ID_SMVJPEG((('J') | (('V') << 8) | (('M') << 16) | ('S' << 24))),
-		AV_CODEC_ID_HEVC((('5') | (('6') << 8) | (('2') << 16) | ('H' << 24))),
-		/**
-		 * various PCM "codecs"<br>
-		 * < A dummy id pointing at the start of audio codecs
-		 */
-		AV_CODEC_ID_FIRST_AUDIO(0x10000),
-		AV_CODEC_ID_PCM_S16LE(0x10000),
-		AV_CODEC_ID_PCM_S16BE((0x10000 + 1)),
-		AV_CODEC_ID_PCM_U16LE((0x10000 + 2)),
-		AV_CODEC_ID_PCM_U16BE((0x10000 + 3)),
-		AV_CODEC_ID_PCM_S8((0x10000 + 4)),
-		AV_CODEC_ID_PCM_U8((0x10000 + 5)),
-		AV_CODEC_ID_PCM_MULAW((0x10000 + 6)),
-		AV_CODEC_ID_PCM_ALAW((0x10000 + 7)),
-		AV_CODEC_ID_PCM_S32LE((0x10000 + 8)),
-		AV_CODEC_ID_PCM_S32BE((0x10000 + 9)),
-		AV_CODEC_ID_PCM_U32LE((0x10000 + 10)),
-		AV_CODEC_ID_PCM_U32BE((0x10000 + 11)),
-		AV_CODEC_ID_PCM_S24LE((0x10000 + 12)),
-		AV_CODEC_ID_PCM_S24BE((0x10000 + 13)),
-		AV_CODEC_ID_PCM_U24LE((0x10000 + 14)),
-		AV_CODEC_ID_PCM_U24BE((0x10000 + 15)),
-		AV_CODEC_ID_PCM_S24DAUD((0x10000 + 16)),
-		AV_CODEC_ID_PCM_ZORK((0x10000 + 17)),
-		AV_CODEC_ID_PCM_S16LE_PLANAR((0x10000 + 18)),
-		AV_CODEC_ID_PCM_DVD((0x10000 + 19)),
-		AV_CODEC_ID_PCM_F32BE((0x10000 + 20)),
-		AV_CODEC_ID_PCM_F32LE((0x10000 + 21)),
-		AV_CODEC_ID_PCM_F64BE((0x10000 + 22)),
-		AV_CODEC_ID_PCM_F64LE((0x10000 + 23)),
-		AV_CODEC_ID_PCM_BLURAY((0x10000 + 24)),
-		AV_CODEC_ID_PCM_LXF((0x10000 + 25)),
-		AV_CODEC_ID_S302M((0x10000 + 26)),
-		AV_CODEC_ID_PCM_S8_PLANAR((0x10000 + 27)),
-		AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED((0x10000 + 28)),
-		AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED((0x10000 + 29)),
-		AV_CODEC_ID_PCM_S24LE_PLANAR((('P') | (('S') << 8) | (('P') << 16) | (24 << 24))),
-		AV_CODEC_ID_PCM_S32LE_PLANAR((('P') | (('S') << 8) | (('P') << 16) | (32 << 24))),
-		AV_CODEC_ID_PCM_S16BE_PLANAR(((16) | (('P') << 8) | (('S') << 16) | ('P' << 24))),
-		/** various ADPCM codecs */
-		AV_CODEC_ID_ADPCM_IMA_QT(0x11000),
-		AV_CODEC_ID_ADPCM_IMA_WAV((0x11000 + 1)),
-		AV_CODEC_ID_ADPCM_IMA_DK3((0x11000 + 2)),
-		AV_CODEC_ID_ADPCM_IMA_DK4((0x11000 + 3)),
-		AV_CODEC_ID_ADPCM_IMA_WS((0x11000 + 4)),
-		AV_CODEC_ID_ADPCM_IMA_SMJPEG((0x11000 + 5)),
-		AV_CODEC_ID_ADPCM_MS((0x11000 + 6)),
-		AV_CODEC_ID_ADPCM_4XM((0x11000 + 7)),
-		AV_CODEC_ID_ADPCM_XA((0x11000 + 8)),
-		AV_CODEC_ID_ADPCM_ADX((0x11000 + 9)),
-		AV_CODEC_ID_ADPCM_EA((0x11000 + 10)),
-		AV_CODEC_ID_ADPCM_G726((0x11000 + 11)),
-		AV_CODEC_ID_ADPCM_CT((0x11000 + 12)),
-		AV_CODEC_ID_ADPCM_SWF((0x11000 + 13)),
-		AV_CODEC_ID_ADPCM_YAMAHA((0x11000 + 14)),
-		AV_CODEC_ID_ADPCM_SBPRO_4((0x11000 + 15)),
-		AV_CODEC_ID_ADPCM_SBPRO_3((0x11000 + 16)),
-		AV_CODEC_ID_ADPCM_SBPRO_2((0x11000 + 17)),
-		AV_CODEC_ID_ADPCM_THP((0x11000 + 18)),
-		AV_CODEC_ID_ADPCM_IMA_AMV((0x11000 + 19)),
-		AV_CODEC_ID_ADPCM_EA_R1((0x11000 + 20)),
-		AV_CODEC_ID_ADPCM_EA_R3((0x11000 + 21)),
-		AV_CODEC_ID_ADPCM_EA_R2((0x11000 + 22)),
-		AV_CODEC_ID_ADPCM_IMA_EA_SEAD((0x11000 + 23)),
-		AV_CODEC_ID_ADPCM_IMA_EA_EACS((0x11000 + 24)),
-		AV_CODEC_ID_ADPCM_EA_XAS((0x11000 + 25)),
-		AV_CODEC_ID_ADPCM_EA_MAXIS_XA((0x11000 + 26)),
-		AV_CODEC_ID_ADPCM_IMA_ISS((0x11000 + 27)),
-		AV_CODEC_ID_ADPCM_G722((0x11000 + 28)),
-		AV_CODEC_ID_ADPCM_IMA_APC((0x11000 + 29)),
-		AV_CODEC_ID_VIMA((('A') | (('M') << 8) | (('I') << 16) | ('V' << 24))),
-		AV_CODEC_ID_ADPCM_AFC(((' ') | (('C') << 8) | (('F') << 16) | ('A' << 24))),
-		AV_CODEC_ID_ADPCM_IMA_OKI(((' ') | (('I') << 8) | (('K') << 16) | ('O' << 24))),
-		AV_CODEC_ID_ADPCM_DTK(((' ') | (('K') << 8) | (('T') << 16) | ('D' << 24))),
-		AV_CODEC_ID_ADPCM_IMA_RAD(((' ') | (('D') << 8) | (('A') << 16) | ('R' << 24))),
-		AV_CODEC_ID_ADPCM_G726LE((('G') | (('7') << 8) | (('2') << 16) | ('6' << 24))),
-		/** AMR */
-		AV_CODEC_ID_AMR_NB(0x12000),
-		AV_CODEC_ID_AMR_WB((0x12000 + 1)),
-		/** RealAudio codecs */
-		AV_CODEC_ID_RA_144(0x13000),
-		AV_CODEC_ID_RA_288((0x13000 + 1)),
-		/** various DPCM codecs */
-		AV_CODEC_ID_ROQ_DPCM(0x14000),
-		AV_CODEC_ID_INTERPLAY_DPCM((0x14000 + 1)),
-		AV_CODEC_ID_XAN_DPCM((0x14000 + 2)),
-		AV_CODEC_ID_SOL_DPCM((0x14000 + 3)),
-		/** audio codecs */
-		AV_CODEC_ID_MP2(0x15000),
-		/** < preferred ID for decoding MPEG audio layer 1, 2 or 3 */
-		AV_CODEC_ID_MP3((0x15000 + 1)),
-		AV_CODEC_ID_AAC((0x15000 + 2)),
-		AV_CODEC_ID_AC3((0x15000 + 3)),
-		AV_CODEC_ID_DTS((0x15000 + 4)),
-		AV_CODEC_ID_VORBIS((0x15000 + 5)),
-		AV_CODEC_ID_DVAUDIO((0x15000 + 6)),
-		AV_CODEC_ID_WMAV1((0x15000 + 7)),
-		AV_CODEC_ID_WMAV2((0x15000 + 8)),
-		AV_CODEC_ID_MACE3((0x15000 + 9)),
-		AV_CODEC_ID_MACE6((0x15000 + 10)),
-		AV_CODEC_ID_VMDAUDIO((0x15000 + 11)),
-		AV_CODEC_ID_FLAC((0x15000 + 12)),
-		AV_CODEC_ID_MP3ADU((0x15000 + 13)),
-		AV_CODEC_ID_MP3ON4((0x15000 + 14)),
-		AV_CODEC_ID_SHORTEN((0x15000 + 15)),
-		AV_CODEC_ID_ALAC((0x15000 + 16)),
-		AV_CODEC_ID_WESTWOOD_SND1((0x15000 + 17)),
-		/** < as in Berlin toast format */
-		AV_CODEC_ID_GSM((0x15000 + 18)),
-		AV_CODEC_ID_QDM2((0x15000 + 19)),
-		AV_CODEC_ID_COOK((0x15000 + 20)),
-		AV_CODEC_ID_TRUESPEECH((0x15000 + 21)),
-		AV_CODEC_ID_TTA((0x15000 + 22)),
-		AV_CODEC_ID_SMACKAUDIO((0x15000 + 23)),
-		AV_CODEC_ID_QCELP((0x15000 + 24)),
-		AV_CODEC_ID_WAVPACK((0x15000 + 25)),
-		AV_CODEC_ID_DSICINAUDIO((0x15000 + 26)),
-		AV_CODEC_ID_IMC((0x15000 + 27)),
-		AV_CODEC_ID_MUSEPACK7((0x15000 + 28)),
-		AV_CODEC_ID_MLP((0x15000 + 29)),
-		/** as found in WAV */
-		AV_CODEC_ID_GSM_MS((0x15000 + 30)),
-		AV_CODEC_ID_ATRAC3((0x15000 + 31)),
-		AV_CODEC_ID_VOXWARE((0x15000 + 32)),
-		AV_CODEC_ID_APE((0x15000 + 33)),
-		AV_CODEC_ID_NELLYMOSER((0x15000 + 34)),
-		AV_CODEC_ID_MUSEPACK8((0x15000 + 35)),
-		AV_CODEC_ID_SPEEX((0x15000 + 36)),
-		AV_CODEC_ID_WMAVOICE((0x15000 + 37)),
-		AV_CODEC_ID_WMAPRO((0x15000 + 38)),
-		AV_CODEC_ID_WMALOSSLESS((0x15000 + 39)),
-		AV_CODEC_ID_ATRAC3P((0x15000 + 40)),
-		AV_CODEC_ID_EAC3((0x15000 + 41)),
-		AV_CODEC_ID_SIPR((0x15000 + 42)),
-		AV_CODEC_ID_MP1((0x15000 + 43)),
-		AV_CODEC_ID_TWINVQ((0x15000 + 44)),
-		AV_CODEC_ID_TRUEHD((0x15000 + 45)),
-		AV_CODEC_ID_MP4ALS((0x15000 + 46)),
-		AV_CODEC_ID_ATRAC1((0x15000 + 47)),
-		AV_CODEC_ID_BINKAUDIO_RDFT((0x15000 + 48)),
-		AV_CODEC_ID_BINKAUDIO_DCT((0x15000 + 49)),
-		AV_CODEC_ID_AAC_LATM((0x15000 + 50)),
-		AV_CODEC_ID_QDMC((0x15000 + 51)),
-		AV_CODEC_ID_CELT((0x15000 + 52)),
-		AV_CODEC_ID_G723_1((0x15000 + 53)),
-		AV_CODEC_ID_G729((0x15000 + 54)),
-		AV_CODEC_ID_8SVX_EXP((0x15000 + 55)),
-		AV_CODEC_ID_8SVX_FIB((0x15000 + 56)),
-		AV_CODEC_ID_BMV_AUDIO((0x15000 + 57)),
-		AV_CODEC_ID_RALF((0x15000 + 58)),
-		AV_CODEC_ID_IAC((0x15000 + 59)),
-		AV_CODEC_ID_ILBC((0x15000 + 60)),
-		AV_CODEC_ID_OPUS_DEPRECATED((0x15000 + 61)),
-		AV_CODEC_ID_COMFORT_NOISE((0x15000 + 62)),
-		AV_CODEC_ID_TAK_DEPRECATED((0x15000 + 63)),
-		AV_CODEC_ID_METASOUND((0x15000 + 64)),
-		AV_CODEC_ID_FFWAVESYNTH((('S') | (('W') << 8) | (('F') << 16) | ('F' << 24))),
-		AV_CODEC_ID_SONIC((('C') | (('N') << 8) | (('O') << 16) | ('S' << 24))),
-		AV_CODEC_ID_SONIC_LS((('L') | (('N') << 8) | (('O') << 16) | ('S' << 24))),
-		AV_CODEC_ID_PAF_AUDIO((('A') | (('F') << 8) | (('A') << 16) | ('P' << 24))),
-		AV_CODEC_ID_OPUS((('S') | (('U') << 8) | (('P') << 16) | ('O' << 24))),
-		AV_CODEC_ID_TAK((('K') | (('a') << 8) | (('B') << 16) | ('t' << 24))),
-		AV_CODEC_ID_EVRC((('c') | (('v') << 8) | (('e') << 16) | ('s' << 24))),
-		AV_CODEC_ID_SMV((('v') | (('m') << 8) | (('s') << 16) | ('s' << 24))),
-		/**
-		 * subtitle codecs<br>
-		 * < A dummy ID pointing at the start of subtitle codecs.
-		 */
-		AV_CODEC_ID_FIRST_SUBTITLE(0x17000),
-		AV_CODEC_ID_DVD_SUBTITLE(0x17000),
-		AV_CODEC_ID_DVB_SUBTITLE((0x17000 + 1)),
-		/** < raw UTF-8 text */
-		AV_CODEC_ID_TEXT((0x17000 + 2)),
-		AV_CODEC_ID_XSUB((0x17000 + 3)),
-		AV_CODEC_ID_SSA((0x17000 + 4)),
-		AV_CODEC_ID_MOV_TEXT((0x17000 + 5)),
-		AV_CODEC_ID_HDMV_PGS_SUBTITLE((0x17000 + 6)),
-		AV_CODEC_ID_DVB_TELETEXT((0x17000 + 7)),
-		AV_CODEC_ID_SRT((0x17000 + 8)),
-		AV_CODEC_ID_MICRODVD((('D') | (('V') << 8) | (('D') << 16) | ('m' << 24))),
-		AV_CODEC_ID_EIA_608((('8') | (('0') << 8) | (('6') << 16) | ('c' << 24))),
-		AV_CODEC_ID_JACOSUB((('B') | (('U') << 8) | (('S') << 16) | ('J' << 24))),
-		AV_CODEC_ID_SAMI((('I') | (('M') << 8) | (('A') << 16) | ('S' << 24))),
-		AV_CODEC_ID_REALTEXT((('T') | (('X') << 8) | (('T') << 16) | ('R' << 24))),
-		AV_CODEC_ID_SUBVIEWER1((('1') | (('V') << 8) | (('b') << 16) | ('S' << 24))),
-		AV_CODEC_ID_SUBVIEWER((('V') | (('b') << 8) | (('u') << 16) | ('S' << 24))),
-		AV_CODEC_ID_SUBRIP((('p') | (('i') << 8) | (('R') << 16) | ('S' << 24))),
-		AV_CODEC_ID_WEBVTT((('T') | (('T') << 8) | (('V') << 16) | ('W' << 24))),
-		AV_CODEC_ID_MPL2((('2') | (('L') << 8) | (('P') << 16) | ('M' << 24))),
-		AV_CODEC_ID_VPLAYER((('r') | (('l') << 8) | (('P') << 16) | ('V' << 24))),
-		AV_CODEC_ID_PJS((('S') | (('J') << 8) | (('h') << 16) | ('P' << 24))),
-		/** < ASS as defined in Matroska */
-		AV_CODEC_ID_ASS(((' ') | (('S') << 8) | (('S') << 16) | ('A' << 24))),
-		/**
-		 * other specific kind of codecs (generally used for attachments)<br>
-		 * < A dummy ID pointing at the start of various fake codecs.
-		 */
-		AV_CODEC_ID_FIRST_UNKNOWN(0x18000),
-		AV_CODEC_ID_TTF(0x18000),
-		AV_CODEC_ID_BINTEXT((('T') | (('X') << 8) | (('T') << 16) | ('B' << 24))),
-		AV_CODEC_ID_XBIN((('N') | (('I') << 8) | (('B') << 16) | ('X' << 24))),
-		AV_CODEC_ID_IDF((('F') | (('D') << 8) | (('I') << 16) | (0 << 24))),
-		AV_CODEC_ID_OTF((('F') | (('T') << 8) | (('O') << 16) | (0 << 24))),
-		AV_CODEC_ID_SMPTE_KLV((('A') | (('V') << 8) | (('L') << 16) | ('K' << 24))),
-		AV_CODEC_ID_DVD_NAV((('V') | (('A') << 8) | (('N') << 16) | ('D' << 24))),
-		/** < codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it */
-		AV_CODEC_ID_PROBE(0x19000),
-		/**
-		 * < _FAKE_ codec to indicate a raw MPEG-2 TS<br>
-		 * stream (only used by libavformat)
-		 */
-		AV_CODEC_ID_MPEG2TS(0x20000),
-		/**
-		 * < _FAKE_ codec to indicate a MPEG-4 Systems<br>
-		 * stream (only used by libavformat)
-		 */
-		AV_CODEC_ID_MPEG4SYSTEMS(0x20001),
-		/** < Dummy codec for streams containing only metadata information. */
-		AV_CODEC_ID_FFMETADATA(0x21000),
-		CODEC_ID_NONE(0),
-		/** video codecs */
-		CODEC_ID_MPEG1VIDEO((0 + 1)),
-		/** < preferred ID for MPEG-1/2 video decoding */
-		CODEC_ID_MPEG2VIDEO((0 + 2)),
-		CODEC_ID_MPEG2VIDEO_XVMC((0 + 3)),
-		CODEC_ID_H261((0 + 4)),
-		CODEC_ID_H263((0 + 5)),
-		CODEC_ID_RV10((0 + 6)),
-		CODEC_ID_RV20((0 + 7)),
-		CODEC_ID_MJPEG((0 + 8)),
-		CODEC_ID_MJPEGB((0 + 9)),
-		CODEC_ID_LJPEG((0 + 10)),
-		CODEC_ID_SP5X((0 + 11)),
-		CODEC_ID_JPEGLS((0 + 12)),
-		CODEC_ID_MPEG4((0 + 13)),
-		CODEC_ID_RAWVIDEO((0 + 14)),
-		CODEC_ID_MSMPEG4V1((0 + 15)),
-		CODEC_ID_MSMPEG4V2((0 + 16)),
-		CODEC_ID_MSMPEG4V3((0 + 17)),
-		CODEC_ID_WMV1((0 + 18)),
-		CODEC_ID_WMV2((0 + 19)),
-		CODEC_ID_H263P((0 + 20)),
-		CODEC_ID_H263I((0 + 21)),
-		CODEC_ID_FLV1((0 + 22)),
-		CODEC_ID_SVQ1((0 + 23)),
-		CODEC_ID_SVQ3((0 + 24)),
-		CODEC_ID_DVVIDEO((0 + 25)),
-		CODEC_ID_HUFFYUV((0 + 26)),
-		CODEC_ID_CYUV((0 + 27)),
-		CODEC_ID_H264((0 + 28)),
-		CODEC_ID_INDEO3((0 + 29)),
-		CODEC_ID_VP3((0 + 30)),
-		CODEC_ID_THEORA((0 + 31)),
-		CODEC_ID_ASV1((0 + 32)),
-		CODEC_ID_ASV2((0 + 33)),
-		CODEC_ID_FFV1((0 + 34)),
-		CODEC_ID_4XM((0 + 35)),
-		CODEC_ID_VCR1((0 + 36)),
-		CODEC_ID_CLJR((0 + 37)),
-		CODEC_ID_MDEC((0 + 38)),
-		CODEC_ID_ROQ((0 + 39)),
-		CODEC_ID_INTERPLAY_VIDEO((0 + 40)),
-		CODEC_ID_XAN_WC3((0 + 41)),
-		CODEC_ID_XAN_WC4((0 + 42)),
-		CODEC_ID_RPZA((0 + 43)),
-		CODEC_ID_CINEPAK((0 + 44)),
-		CODEC_ID_WS_VQA((0 + 45)),
-		CODEC_ID_MSRLE((0 + 46)),
-		CODEC_ID_MSVIDEO1((0 + 47)),
-		CODEC_ID_IDCIN((0 + 48)),
-		CODEC_ID_8BPS((0 + 49)),
-		CODEC_ID_SMC((0 + 50)),
-		CODEC_ID_FLIC((0 + 51)),
-		CODEC_ID_TRUEMOTION1((0 + 52)),
-		CODEC_ID_VMDVIDEO((0 + 53)),
-		CODEC_ID_MSZH((0 + 54)),
-		CODEC_ID_ZLIB((0 + 55)),
-		CODEC_ID_QTRLE((0 + 56)),
-		CODEC_ID_TSCC((0 + 57)),
-		CODEC_ID_ULTI((0 + 58)),
-		CODEC_ID_QDRAW((0 + 59)),
-		CODEC_ID_VIXL((0 + 60)),
-		CODEC_ID_QPEG((0 + 61)),
-		CODEC_ID_PNG((0 + 62)),
-		CODEC_ID_PPM((0 + 63)),
-		CODEC_ID_PBM((0 + 64)),
-		CODEC_ID_PGM((0 + 65)),
-		CODEC_ID_PGMYUV((0 + 66)),
-		CODEC_ID_PAM((0 + 67)),
-		CODEC_ID_FFVHUFF((0 + 68)),
-		CODEC_ID_RV30((0 + 69)),
-		CODEC_ID_RV40((0 + 70)),
-		CODEC_ID_VC1((0 + 71)),
-		CODEC_ID_WMV3((0 + 72)),
-		CODEC_ID_LOCO((0 + 73)),
-		CODEC_ID_WNV1((0 + 74)),
-		CODEC_ID_AASC((0 + 75)),
-		CODEC_ID_INDEO2((0 + 76)),
-		CODEC_ID_FRAPS((0 + 77)),
-		CODEC_ID_TRUEMOTION2((0 + 78)),
-		CODEC_ID_BMP((0 + 79)),
-		CODEC_ID_CSCD((0 + 80)),
-		CODEC_ID_MMVIDEO((0 + 81)),
-		CODEC_ID_ZMBV((0 + 82)),
-		CODEC_ID_AVS((0 + 83)),
-		CODEC_ID_SMACKVIDEO((0 + 84)),
-		CODEC_ID_NUV((0 + 85)),
-		CODEC_ID_KMVC((0 + 86)),
-		CODEC_ID_FLASHSV((0 + 87)),
-		CODEC_ID_CAVS((0 + 88)),
-		CODEC_ID_JPEG2000((0 + 89)),
-		CODEC_ID_VMNC((0 + 90)),
-		CODEC_ID_VP5((0 + 91)),
-		CODEC_ID_VP6((0 + 92)),
-		CODEC_ID_VP6F((0 + 93)),
-		CODEC_ID_TARGA((0 + 94)),
-		CODEC_ID_DSICINVIDEO((0 + 95)),
-		CODEC_ID_TIERTEXSEQVIDEO((0 + 96)),
-		CODEC_ID_TIFF((0 + 97)),
-		CODEC_ID_GIF((0 + 98)),
-		CODEC_ID_DXA((0 + 99)),
-		CODEC_ID_DNXHD((0 + 100)),
-		CODEC_ID_THP((0 + 101)),
-		CODEC_ID_SGI((0 + 102)),
-		CODEC_ID_C93((0 + 103)),
-		CODEC_ID_BETHSOFTVID((0 + 104)),
-		CODEC_ID_PTX((0 + 105)),
-		CODEC_ID_TXD((0 + 106)),
-		CODEC_ID_VP6A((0 + 107)),
-		CODEC_ID_AMV((0 + 108)),
-		CODEC_ID_VB((0 + 109)),
-		CODEC_ID_PCX((0 + 110)),
-		CODEC_ID_SUNRAST((0 + 111)),
-		CODEC_ID_INDEO4((0 + 112)),
-		CODEC_ID_INDEO5((0 + 113)),
-		CODEC_ID_MIMIC((0 + 114)),
-		CODEC_ID_RL2((0 + 115)),
-		CODEC_ID_ESCAPE124((0 + 116)),
-		CODEC_ID_DIRAC((0 + 117)),
-		CODEC_ID_BFI((0 + 118)),
-		CODEC_ID_CMV((0 + 119)),
-		CODEC_ID_MOTIONPIXELS((0 + 120)),
-		CODEC_ID_TGV((0 + 121)),
-		CODEC_ID_TGQ((0 + 122)),
-		CODEC_ID_TQI((0 + 123)),
-		CODEC_ID_AURA((0 + 124)),
-		CODEC_ID_AURA2((0 + 125)),
-		CODEC_ID_V210X((0 + 126)),
-		CODEC_ID_TMV((0 + 127)),
-		CODEC_ID_V210((0 + 128)),
-		CODEC_ID_DPX((0 + 129)),
-		CODEC_ID_MAD((0 + 130)),
-		CODEC_ID_FRWU((0 + 131)),
-		CODEC_ID_FLASHSV2((0 + 132)),
-		CODEC_ID_CDGRAPHICS((0 + 133)),
-		CODEC_ID_R210((0 + 134)),
-		CODEC_ID_ANM((0 + 135)),
-		CODEC_ID_BINKVIDEO((0 + 136)),
-		CODEC_ID_IFF_ILBM((0 + 137)),
-		CODEC_ID_IFF_BYTERUN1((0 + 138)),
-		CODEC_ID_KGV1((0 + 139)),
-		CODEC_ID_YOP((0 + 140)),
-		CODEC_ID_VP8((0 + 141)),
-		CODEC_ID_PICTOR((0 + 142)),
-		CODEC_ID_ANSI((0 + 143)),
-		CODEC_ID_A64_MULTI((0 + 144)),
-		CODEC_ID_A64_MULTI5((0 + 145)),
-		CODEC_ID_R10K((0 + 146)),
-		CODEC_ID_MXPEG((0 + 147)),
-		CODEC_ID_LAGARITH((0 + 148)),
-		CODEC_ID_PRORES((0 + 149)),
-		CODEC_ID_JV((0 + 150)),
-		CODEC_ID_DFA((0 + 151)),
-		CODEC_ID_WMV3IMAGE((0 + 152)),
-		CODEC_ID_VC1IMAGE((0 + 153)),
-		CODEC_ID_UTVIDEO((0 + 154)),
-		CODEC_ID_BMV_VIDEO((0 + 155)),
-		CODEC_ID_VBLE((0 + 156)),
-		CODEC_ID_DXTORY((0 + 157)),
-		CODEC_ID_V410((0 + 158)),
-		CODEC_ID_XWD((0 + 159)),
-		CODEC_ID_CDXL((0 + 160)),
-		CODEC_ID_XBM((0 + 161)),
-		CODEC_ID_ZEROCODEC((0 + 162)),
-		CODEC_ID_MSS1((0 + 163)),
-		CODEC_ID_MSA1((0 + 164)),
-		CODEC_ID_TSCC2((0 + 165)),
-		CODEC_ID_MTS2((0 + 166)),
-		CODEC_ID_CLLC((0 + 167)),
-		CODEC_ID_Y41P((('P') | (('1') << 8) | (('4') << 16) | ('Y' << 24))),
-		CODEC_ID_ESCAPE130((('0') | (('3') << 8) | (('1') << 16) | ('E' << 24))),
-		CODEC_ID_EXR((('R') | (('X') << 8) | (('E') << 16) | ('0' << 24))),
-		CODEC_ID_AVRP((('P') | (('R') << 8) | (('V') << 16) | ('A' << 24))),
-		CODEC_ID_G2M((('M') | (('2') << 8) | (('G') << 16) | (0 << 24))),
-		CODEC_ID_AVUI((('I') | (('U') << 8) | (('V') << 16) | ('A' << 24))),
-		CODEC_ID_AYUV((('V') | (('U') << 8) | (('Y') << 16) | ('A' << 24))),
-		CODEC_ID_V308((('8') | (('0') << 8) | (('3') << 16) | ('V' << 24))),
-		CODEC_ID_V408((('8') | (('0') << 8) | (('4') << 16) | ('V' << 24))),
-		CODEC_ID_YUV4((('4') | (('V') << 8) | (('U') << 16) | ('Y' << 24))),
-		CODEC_ID_SANM((('M') | (('N') << 8) | (('A') << 16) | ('S' << 24))),
-		CODEC_ID_PAF_VIDEO((('V') | (('F') << 8) | (('A') << 16) | ('P' << 24))),
-		CODEC_ID_SNOW(('W') | (('O') << 8) | (('N') << 16) | ('S' << 24)),
-		/**
-		 * various PCM "codecs"<br>
-		 * < A dummy id pointing at the start of audio codecs
-		 */
-		CODEC_ID_FIRST_AUDIO(0x10000),
-		CODEC_ID_PCM_S16LE(0x10000),
-		CODEC_ID_PCM_S16BE((0x10000 + 1)),
-		CODEC_ID_PCM_U16LE((0x10000 + 2)),
-		CODEC_ID_PCM_U16BE((0x10000 + 3)),
-		CODEC_ID_PCM_S8((0x10000 + 4)),
-		CODEC_ID_PCM_U8((0x10000 + 5)),
-		CODEC_ID_PCM_MULAW((0x10000 + 6)),
-		CODEC_ID_PCM_ALAW((0x10000 + 7)),
-		CODEC_ID_PCM_S32LE((0x10000 + 8)),
-		CODEC_ID_PCM_S32BE((0x10000 + 9)),
-		CODEC_ID_PCM_U32LE((0x10000 + 10)),
-		CODEC_ID_PCM_U32BE((0x10000 + 11)),
-		CODEC_ID_PCM_S24LE((0x10000 + 12)),
-		CODEC_ID_PCM_S24BE((0x10000 + 13)),
-		CODEC_ID_PCM_U24LE((0x10000 + 14)),
-		CODEC_ID_PCM_U24BE((0x10000 + 15)),
-		CODEC_ID_PCM_S24DAUD((0x10000 + 16)),
-		CODEC_ID_PCM_ZORK((0x10000 + 17)),
-		CODEC_ID_PCM_S16LE_PLANAR((0x10000 + 18)),
-		CODEC_ID_PCM_DVD((0x10000 + 19)),
-		CODEC_ID_PCM_F32BE((0x10000 + 20)),
-		CODEC_ID_PCM_F32LE((0x10000 + 21)),
-		CODEC_ID_PCM_F64BE((0x10000 + 22)),
-		CODEC_ID_PCM_F64LE((0x10000 + 23)),
-		CODEC_ID_PCM_BLURAY((0x10000 + 24)),
-		CODEC_ID_PCM_LXF((0x10000 + 25)),
-		CODEC_ID_S302M((0x10000 + 26)),
-		CODEC_ID_PCM_S8_PLANAR((0x10000 + 27)),
-		/** various ADPCM codecs */
-		CODEC_ID_ADPCM_IMA_QT(0x11000),
-		CODEC_ID_ADPCM_IMA_WAV((0x11000 + 1)),
-		CODEC_ID_ADPCM_IMA_DK3((0x11000 + 2)),
-		CODEC_ID_ADPCM_IMA_DK4((0x11000 + 3)),
-		CODEC_ID_ADPCM_IMA_WS((0x11000 + 4)),
-		CODEC_ID_ADPCM_IMA_SMJPEG((0x11000 + 5)),
-		CODEC_ID_ADPCM_MS((0x11000 + 6)),
-		CODEC_ID_ADPCM_4XM((0x11000 + 7)),
-		CODEC_ID_ADPCM_XA((0x11000 + 8)),
-		CODEC_ID_ADPCM_ADX((0x11000 + 9)),
-		CODEC_ID_ADPCM_EA((0x11000 + 10)),
-		CODEC_ID_ADPCM_G726((0x11000 + 11)),
-		CODEC_ID_ADPCM_CT((0x11000 + 12)),
-		CODEC_ID_ADPCM_SWF((0x11000 + 13)),
-		CODEC_ID_ADPCM_YAMAHA((0x11000 + 14)),
-		CODEC_ID_ADPCM_SBPRO_4((0x11000 + 15)),
-		CODEC_ID_ADPCM_SBPRO_3((0x11000 + 16)),
-		CODEC_ID_ADPCM_SBPRO_2((0x11000 + 17)),
-		CODEC_ID_ADPCM_THP((0x11000 + 18)),
-		CODEC_ID_ADPCM_IMA_AMV((0x11000 + 19)),
-		CODEC_ID_ADPCM_EA_R1((0x11000 + 20)),
-		CODEC_ID_ADPCM_EA_R3((0x11000 + 21)),
-		CODEC_ID_ADPCM_EA_R2((0x11000 + 22)),
-		CODEC_ID_ADPCM_IMA_EA_SEAD((0x11000 + 23)),
-		CODEC_ID_ADPCM_IMA_EA_EACS((0x11000 + 24)),
-		CODEC_ID_ADPCM_EA_XAS((0x11000 + 25)),
-		CODEC_ID_ADPCM_EA_MAXIS_XA((0x11000 + 26)),
-		CODEC_ID_ADPCM_IMA_ISS((0x11000 + 27)),
-		CODEC_ID_ADPCM_G722((0x11000 + 28)),
-		CODEC_ID_ADPCM_IMA_APC((0x11000 + 29)),
-		CODEC_ID_VIMA((('A') | (('M') << 8) | (('I') << 16) | ('V' << 24))),
-		/** AMR */
-		CODEC_ID_AMR_NB(0x12000),
-		CODEC_ID_AMR_WB((0x12000 + 1)),
-		/** RealAudio codecs */
-		CODEC_ID_RA_144(0x13000),
-		CODEC_ID_RA_288((0x13000 + 1)),
-		/** various DPCM codecs */
-		CODEC_ID_ROQ_DPCM(0x14000),
-		CODEC_ID_INTERPLAY_DPCM((0x14000 + 1)),
-		CODEC_ID_XAN_DPCM((0x14000 + 2)),
-		CODEC_ID_SOL_DPCM((0x14000 + 3)),
-		/** audio codecs */
-		CODEC_ID_MP2(0x15000),
-		/** < preferred ID for decoding MPEG audio layer 1, 2 or 3 */
-		CODEC_ID_MP3((0x15000 + 1)),
-		CODEC_ID_AAC((0x15000 + 2)),
-		CODEC_ID_AC3((0x15000 + 3)),
-		CODEC_ID_DTS((0x15000 + 4)),
-		CODEC_ID_VORBIS((0x15000 + 5)),
-		CODEC_ID_DVAUDIO((0x15000 + 6)),
-		CODEC_ID_WMAV1((0x15000 + 7)),
-		CODEC_ID_WMAV2((0x15000 + 8)),
-		CODEC_ID_MACE3((0x15000 + 9)),
-		CODEC_ID_MACE6((0x15000 + 10)),
-		CODEC_ID_VMDAUDIO((0x15000 + 11)),
-		CODEC_ID_FLAC((0x15000 + 12)),
-		CODEC_ID_MP3ADU((0x15000 + 13)),
-		CODEC_ID_MP3ON4((0x15000 + 14)),
-		CODEC_ID_SHORTEN((0x15000 + 15)),
-		CODEC_ID_ALAC((0x15000 + 16)),
-		CODEC_ID_WESTWOOD_SND1((0x15000 + 17)),
-		/** < as in Berlin toast format */
-		CODEC_ID_GSM((0x15000 + 18)),
-		CODEC_ID_QDM2((0x15000 + 19)),
-		CODEC_ID_COOK((0x15000 + 20)),
-		CODEC_ID_TRUESPEECH((0x15000 + 21)),
-		CODEC_ID_TTA((0x15000 + 22)),
-		CODEC_ID_SMACKAUDIO((0x15000 + 23)),
-		CODEC_ID_QCELP((0x15000 + 24)),
-		CODEC_ID_WAVPACK((0x15000 + 25)),
-		CODEC_ID_DSICINAUDIO((0x15000 + 26)),
-		CODEC_ID_IMC((0x15000 + 27)),
-		CODEC_ID_MUSEPACK7((0x15000 + 28)),
-		CODEC_ID_MLP((0x15000 + 29)),
-		/** as found in WAV */
-		CODEC_ID_GSM_MS((0x15000 + 30)),
-		CODEC_ID_ATRAC3((0x15000 + 31)),
-		CODEC_ID_VOXWARE((0x15000 + 32)),
-		CODEC_ID_APE((0x15000 + 33)),
-		CODEC_ID_NELLYMOSER((0x15000 + 34)),
-		CODEC_ID_MUSEPACK8((0x15000 + 35)),
-		CODEC_ID_SPEEX((0x15000 + 36)),
-		CODEC_ID_WMAVOICE((0x15000 + 37)),
-		CODEC_ID_WMAPRO((0x15000 + 38)),
-		CODEC_ID_WMALOSSLESS((0x15000 + 39)),
-		CODEC_ID_ATRAC3P((0x15000 + 40)),
-		CODEC_ID_EAC3((0x15000 + 41)),
-		CODEC_ID_SIPR((0x15000 + 42)),
-		CODEC_ID_MP1((0x15000 + 43)),
-		CODEC_ID_TWINVQ((0x15000 + 44)),
-		CODEC_ID_TRUEHD((0x15000 + 45)),
-		CODEC_ID_MP4ALS((0x15000 + 46)),
-		CODEC_ID_ATRAC1((0x15000 + 47)),
-		CODEC_ID_BINKAUDIO_RDFT((0x15000 + 48)),
-		CODEC_ID_BINKAUDIO_DCT((0x15000 + 49)),
-		CODEC_ID_AAC_LATM((0x15000 + 50)),
-		CODEC_ID_QDMC((0x15000 + 51)),
-		CODEC_ID_CELT((0x15000 + 52)),
-		CODEC_ID_G723_1((0x15000 + 53)),
-		CODEC_ID_G729((0x15000 + 54)),
-		CODEC_ID_8SVX_EXP((0x15000 + 55)),
-		CODEC_ID_8SVX_FIB((0x15000 + 56)),
-		CODEC_ID_BMV_AUDIO((0x15000 + 57)),
-		CODEC_ID_RALF((0x15000 + 58)),
-		CODEC_ID_IAC((0x15000 + 59)),
-		CODEC_ID_ILBC((0x15000 + 60)),
-		CODEC_ID_FFWAVESYNTH((('S') | (('W') << 8) | (('F') << 16) | ('F' << 24))),
-		CODEC_ID_SONIC((('C') | (('N') << 8) | (('O') << 16) | ('S' << 24))),
-		CODEC_ID_SONIC_LS((('L') | (('N') << 8) | (('O') << 16) | ('S' << 24))),
-		CODEC_ID_PAF_AUDIO((('A') | (('F') << 8) | (('A') << 16) | ('P' << 24))),
-		CODEC_ID_OPUS((('S') | (('U') << 8) | (('P') << 16) | ('O' << 24))),
-		/**
-		 * subtitle codecs<br>
-		 * < A dummy ID pointing at the start of subtitle codecs.
-		 */
-		CODEC_ID_FIRST_SUBTITLE(0x17000),
-		CODEC_ID_DVD_SUBTITLE(0x17000),
-		CODEC_ID_DVB_SUBTITLE((0x17000 + 1)),
-		/** < raw UTF-8 text */
-		CODEC_ID_TEXT((0x17000 + 2)),
-		CODEC_ID_XSUB((0x17000 + 3)),
-		CODEC_ID_SSA((0x17000 + 4)),
-		CODEC_ID_MOV_TEXT((0x17000 + 5)),
-		CODEC_ID_HDMV_PGS_SUBTITLE((0x17000 + 6)),
-		CODEC_ID_DVB_TELETEXT((0x17000 + 7)),
-		CODEC_ID_SRT((0x17000 + 8)),
-		CODEC_ID_MICRODVD((('D') | (('V') << 8) | (('D') << 16) | ('m' << 24))),
-		CODEC_ID_EIA_608((('8') | (('0') << 8) | (('6') << 16) | ('c' << 24))),
-		CODEC_ID_JACOSUB((('B') | (('U') << 8) | (('S') << 16) | ('J' << 24))),
-		CODEC_ID_SAMI((('I') | (('M') << 8) | (('A') << 16) | ('S' << 24))),
-		CODEC_ID_REALTEXT((('T') | (('X') << 8) | (('T') << 16) | ('R' << 24))),
-		CODEC_ID_SUBVIEWER((('V') | (('b') << 8) | (('u') << 16) | ('S' << 24))),
-		/**
-		 * other specific kind of codecs (generally used for attachments)<br>
-		 * < A dummy ID pointing at the start of various fake codecs.
-		 */
-		CODEC_ID_FIRST_UNKNOWN(0x18000),
-		CODEC_ID_TTF(0x18000),
-		CODEC_ID_BINTEXT((('T') | (('X') << 8) | (('T') << 16) | ('B' << 24))),
-		CODEC_ID_XBIN((('N') | (('I') << 8) | (('B') << 16) | ('X' << 24))),
-		CODEC_ID_IDF((('F') | (('D') << 8) | (('I') << 16) | (0 << 24))),
-		CODEC_ID_OTF((('F') | (('T') << 8) | (('O') << 16) | (0 << 24))),
-		/** < codec_id is not known (like CODEC_ID_NONE) but lavf should attempt to identify it */
-		CODEC_ID_PROBE(0x19000),
-		/**
-		 * < _FAKE_ codec to indicate a raw MPEG-2 TS<br>
-		 * stream (only used by libavformat)
-		 */
-		CODEC_ID_MPEG2TS(0x20000),
-		/**
-		 * < _FAKE_ codec to indicate a MPEG-4 Systems<br>
-		 * stream (only used by libavformat)
-		 */
-		CODEC_ID_MPEG4SYSTEMS(0x20001),
-		/** < Dummy codec for streams containing only metadata information. */
-		CODEC_ID_FFMETADATA(0x21000);
-		AVCodecID(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVCodecID > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVCodecID > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:786</i>
-	 */
-	public enum AVDiscard implements IntValuedEnum<AVDiscard > {
-		/**
-		 * We leave some space between them for extensions (drop some<br>
-		 * keyframes for intra-only or drop just some bidir frames).<br>
-		 * < discard nothing
-		 */
-		AVDISCARD_NONE(-16),
-		/** < discard useless packets like 0 size packets in avi */
-		AVDISCARD_DEFAULT(0),
-		/** < discard all non reference */
-		AVDISCARD_NONREF(8),
-		/** < discard all bidirectional frames */
-		AVDISCARD_BIDIR(16),
-		/** < discard all frames except keyframes */
-		AVDISCARD_NONKEY(32),
-		/** < discard all */
-		AVDISCARD_ALL(48);
-		AVDiscard(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVDiscard > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVDiscard > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:801</i>
-	 */
-	public enum AVColorPrimaries implements IntValuedEnum<AVColorPrimaries > {
-		/** < also ITU-R BT1361 / IEC 61966-2-4 / SMPTE RP177 Annex B */
-		AVCOL_PRI_BT709(1),
-		AVCOL_PRI_UNSPECIFIED(2),
-		AVCOL_PRI_BT470M(4),
-		/** < also ITU-R BT601-6 625 / ITU-R BT1358 625 / ITU-R BT1700 625 PAL & SECAM */
-		AVCOL_PRI_BT470BG(5),
-		/** < also ITU-R BT601-6 525 / ITU-R BT1358 525 / ITU-R BT1700 NTSC */
-		AVCOL_PRI_SMPTE170M(6),
-		/** < functionally identical to above */
-		AVCOL_PRI_SMPTE240M(7),
-		AVCOL_PRI_FILM(8),
-		/** < Not part of ABI */
-		AVCOL_PRI_NB(9);
-		AVColorPrimaries(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVColorPrimaries > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVColorPrimaries > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:813</i>
-	 */
-	public enum AVColorTransferCharacteristic implements IntValuedEnum<AVColorTransferCharacteristic > {
-		/** < also ITU-R BT1361 */
-		AVCOL_TRC_BT709(1),
-		AVCOL_TRC_UNSPECIFIED(2),
-		/** < also ITU-R BT470M / ITU-R BT1700 625 PAL & SECAM */
-		AVCOL_TRC_GAMMA22(4),
-		/** < also ITU-R BT470BG */
-		AVCOL_TRC_GAMMA28(5),
-		AVCOL_TRC_SMPTE240M(7),
-		/** < Not part of ABI */
-		AVCOL_TRC_NB(8);
-		AVColorTransferCharacteristic(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVColorTransferCharacteristic > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVColorTransferCharacteristic > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:827</i>
-	 */
-	public enum AVChromaLocation implements IntValuedEnum<AVChromaLocation > {
-		AVCHROMA_LOC_UNSPECIFIED(0),
-		/** < mpeg2/4, h264 default */
-		AVCHROMA_LOC_LEFT(1),
-		/** < mpeg1, jpeg, h263 */
-		AVCHROMA_LOC_CENTER(2),
-		/** < DV */
-		AVCHROMA_LOC_TOPLEFT(3),
-		AVCHROMA_LOC_TOP(4),
-		AVCHROMA_LOC_BOTTOMLEFT(5),
-		AVCHROMA_LOC_BOTTOM(6),
-		/** < Not part of ABI */
-		AVCHROMA_LOC_NB(7);
-		AVChromaLocation(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVChromaLocation > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVChromaLocation > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:840</i>
-	 */
-	public enum AVAudioServiceType implements IntValuedEnum<AVAudioServiceType > {
-		AV_AUDIO_SERVICE_TYPE_MAIN(0),
-		AV_AUDIO_SERVICE_TYPE_EFFECTS(1),
-		AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED(2),
-		AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED(3),
-		AV_AUDIO_SERVICE_TYPE_DIALOGUE(4),
-		AV_AUDIO_SERVICE_TYPE_COMMENTARY(5),
-		AV_AUDIO_SERVICE_TYPE_EMERGENCY(6),
-		AV_AUDIO_SERVICE_TYPE_VOICE_OVER(7),
-		AV_AUDIO_SERVICE_TYPE_KARAOKE(8),
-		/** < Not part of ABI */
-		AV_AUDIO_SERVICE_TYPE_NB(9);
-		AVAudioServiceType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVAudioServiceType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVAudioServiceType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:852</i>
-	 */
-	public enum AVFieldOrder implements IntValuedEnum<AVFieldOrder > {
-		AV_FIELD_UNKNOWN(0),
-		AV_FIELD_PROGRESSIVE(1),
-		/** < Top coded_first, top displayed first */
-		AV_FIELD_TT(2),
-		/** < Bottom coded first, bottom displayed first */
-		AV_FIELD_BB(3),
-		/** < Top coded first, bottom displayed first */
-		AV_FIELD_TB(4),
-		/** < Bottom coded first, top displayed first */
-		AV_FIELD_BT(5);
-		AVFieldOrder(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVFieldOrder > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVFieldOrder > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1170</i>
-	 */
-	public enum AVPictureStructure implements IntValuedEnum<AVPictureStructure > {
-		/** < unknown */
-		AV_PICTURE_STRUCTURE_UNKNOWN(0),
-		/** < coded as top field */
-		AV_PICTURE_STRUCTURE_TOP_FIELD(1),
-		/** < coded as bottom field */
-		AV_PICTURE_STRUCTURE_BOTTOM_FIELD(2),
-		/** < coded as frame */
-		AV_PICTURE_STRUCTURE_FRAME(3);
-		AVPictureStructure(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVPictureStructure > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVPictureStructure > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_CBP = (int)0x00020000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_CLOSED_GOP = (int)0x80000000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_LOSSLESS = (int)0x80000000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int AV_PKT_FLAG_KEY = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_FRAME_THREADS = (int)0x1000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_NEG_LINESIZES = (int)0x0800;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_NO_OUTPUT = (int)0x00000004;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_QPEL = (int)0x0010;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_NORMALIZE_AQP = (int)0x00020000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_BITEXACT = (int)0x00800000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_L0 = (int)(0x1000 | 0x2000);
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_HWACCEL = (int)0x0010;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_QUANT = (int)0x00010000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_QSCALE_TYPE_H264 = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_L1 = (int)(0x4000 | 0x8000);
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_VARIABLE_FRAME_SIZE = (int)0x10000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_TRUNCATED = (int)0x0008;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_TYPE_SHARED = (int)4;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_DELAY = (int)0x0020;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_INTERLACED_DCT = (int)0x00040000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_CHANNEL_CONF = (int)0x0400;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_LOW_DELAY = (int)0x00080000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int AV_PARSER_PTS_NB = (int)4;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_L0L1 = (int)((0x1000 | 0x2000) | (0x4000 | 0x8000));
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_GRAY = (int)0x2000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_16x8 = (int)0x0010;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_INTRA16x16 = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_QSCALE_TYPE_VP56 = (int)3;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_P0L0 = (int)0x1000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_LOOP_FILTER = (int)0x00000800;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_EMU_EDGE = (int)0x4000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_DRAW_HORIZ_BAND = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_INTERLACED_ME = (int)0x20000000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_8x8 = (int)0x0040;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_PASS2 = (int)0x0400;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_PASS1 = (int)0x0200;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_16x16 = (int)0x0008;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_PARAM_CHANGE = (int)0x4000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_SLICE_THREADS = (int)0x2000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int AV_GET_BUFFER_FLAG_REF = (int)(1 << 0);
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_GMC = (int)0x0400;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_AUTO_THREADS = (int)0x8000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_SUBFRAMES = (int)0x0100;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_INTRA_PCM = (int)0x0004;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_HWACCEL_VDPAU = (int)0x0080;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_FAST = (int)0x00000001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_TYPE_USER = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_CHUNKS = (int)0x00008000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_GLOBAL_HEADER = (int)0x00400000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_P1L1 = (int)0x8000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_UNALIGNED = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_DROP_FRAME_TIMECODE = (int)0x00002000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int AV_PKT_FLAG_CORRUPT = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_P1L0 = (int)0x2000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_IGNORE_CROP = (int)0x00010000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int PARSER_FLAG_ONCE = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_4MV = (int)0x0004;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_PSNR = (int)0x8000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_AC_PRED = (int)0x01000000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_DR1 = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_QSCALE = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_ACPRED = (int)0x0200;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_SMALL_LAST_FRAME = (int)0x0040;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_TYPE_INTERNAL = (int)1;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_SKIP = (int)0x0800;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_P0L1 = (int)0x4000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_8x16 = (int)0x0020;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_MV0 = (int)0x0040;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_INTERLACED = (int)0x0080;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_LOCAL_HEADER = (int)0x00000008;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_TYPE_COPY = (int)8;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_EXPERIMENTAL = (int)0x0200;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_GMC = (int)0x0020;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_HINTS_VALID = (int)0x01;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_DIRECT2 = (int)0x0100;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_QSCALE_TYPE_MPEG1 = (int)0;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int PARSER_FLAG_USE_CODEC_TS = (int)0x1000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_QSCALE_TYPE_MPEG2 = (int)1;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_HINTS_REUSABLE = (int)0x08;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG2_SHOW_ALL = (int)0x00400000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int PARSER_FLAG_FETCHED_OFFSET = (int)0x0004;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_INPUT_PRESERVED = (int)0x0100;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_FLAG_TRUNCATED = (int)0x00010000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_HINTS_PRESERVE = (int)0x04;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int PARSER_FLAG_COMPLETE_FRAMES = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int MB_TYPE_INTRA4x4 = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int FF_BUFFER_HINTS_READABLE = (int)0x02;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h</i> */
-	public static final int CODEC_CAP_INTRA_ONLY = (int)0x40000000;
-	/**
-	 * Original signature : <code>int avcodec_version()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1142</i>
-	 */
-	public native int avcodec_version();
-	/**
-	 * Original signature : <code>AVCodecContext* avcodec_alloc_context3(const AVCodec*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1144</i>
-	 */
-	public Pointer<AVCodecContext > avcodec_alloc_context3(Pointer<AVCodec > codec) {
-		return Pointer.pointerToAddress(avcodec_alloc_context3(Pointer.getPeer(codec)), AVCodecContext.class);
-	}
-	@Ptr 
-	public native long avcodec_alloc_context3(@Ptr long codec);
-	/**
-	 * Original signature : <code>int avcodec_get_context_defaults3(AVCodecContext*, const AVCodec*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1146</i>
-	 */
-	public int avcodec_get_context_defaults3(Pointer<AVCodecContext > s, Pointer<AVCodec > codec) {
-		return avcodec_get_context_defaults3(Pointer.getPeer(s), Pointer.getPeer(codec));
-	}
-	public native int avcodec_get_context_defaults3(@Ptr long s, @Ptr long codec);
-	/**
-	 * Original signature : <code>AVFrame* avcodec_alloc_frame()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1148</i>
-	 */
-	public Pointer<AVFrame > alloc_frame() {
-		return Pointer.pointerToAddress(avcodec_alloc_frame(), AVFrame.class);
-	}
-	@Ptr 
-	public native long avcodec_alloc_frame();
-	/**
-	 * Original signature : <code>int avcodec_open2(AVCodecContext*, const AVCodec*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1150</i>
-	 */
-	public int avcodec_open2(Pointer<AVCodecContext > avctx, Pointer<AVCodec > codec, Pointer<Pointer<AVDictionary > > options) {
-		return avcodec_open2(Pointer.getPeer(avctx), Pointer.getPeer(codec), Pointer.getPeer(options));
-	}
-	public native int avcodec_open2(@Ptr long avctx, @Ptr long codec, @Ptr long options);
-	/**
-	 * Original signature : <code>int avcodec_close(AVCodecContext*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1152</i>
-	 */
-	public int avcodec_close(Pointer<AVCodecContext > avctx) {
-		return avcodec_close(Pointer.getPeer(avctx));
-	}
-	public native int avcodec_close(@Ptr long avctx);
-	/**
-	 * Original signature : <code>void av_init_packet(AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1154</i>
-	 */
-	public void av_init_packet(Pointer<AVPacket > pkt) {
-		av_init_packet(Pointer.getPeer(pkt));
-	}
-	public native void av_init_packet(@Ptr long pkt);
-	/**
-	 * Original signature : <code>void av_free_packet(AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1156</i>
-	 */
-	public void av_free_packet(Pointer<AVPacket > pkt) {
-		av_free_packet(Pointer.getPeer(pkt));
-	}
-	public native void av_free_packet(@Ptr long pkt);
-	/**
-	 * Original signature : <code>int avcodec_decode_video2(AVCodecContext*, AVFrame*, int*, const AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1158</i>
-	 */
-	public int avcodec_decode_video2(Pointer<AVCodecContext > avctx, Pointer<AVFrame > picture, Pointer<Integer > got_picture_ptr, Pointer<AVPacket > avpkt) {
-		return avcodec_decode_video2(Pointer.getPeer(avctx), Pointer.getPeer(picture), Pointer.getPeer(got_picture_ptr), Pointer.getPeer(avpkt));
-	}
-	public native int avcodec_decode_video2(@Ptr long avctx, @Ptr long picture, @Ptr long got_picture_ptr, @Ptr long avpkt);
-	/**
-	 * Original signature : <code>int avcodec_decode_audio4(AVCodecContext*, AVFrame*, int*, const AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1160</i>
-	 */
-	public int avcodec_decode_audio4(Pointer<AVCodecContext > avctx, Pointer<AVFrame > picture, Pointer<Integer > got_picture_ptr, Pointer<AVPacket > avpkt) {
-		return avcodec_decode_audio4(Pointer.getPeer(avctx), Pointer.getPeer(picture), Pointer.getPeer(got_picture_ptr), Pointer.getPeer(avpkt));
-	}
-	public native int avcodec_decode_audio4(@Ptr long avctx, @Ptr long picture, @Ptr long got_picture_ptr, @Ptr long avpkt);
-	/**
-	 * Original signature : <code>AVCodec* avcodec_find_decoder(AVCodecID)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1225</i>
-	 */
-	public Pointer<AVCodec > avcodec_find_decoder(IntValuedEnum<AvcodecLibrary.AVCodecID > id) {
-		return Pointer.pointerToAddress(avcodec_find_decoder((int)id.value()), AVCodec.class);
-	}
-	@Ptr 
-	public native long avcodec_find_decoder(int id);
-	/**
-	 * Original signature : <code>AVCodec* avcodec_find_encoder(AVCodecID)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1227</i>
-	 */
-	public Pointer<AVCodec > avcodec_find_encoder(IntValuedEnum<AvcodecLibrary.AVCodecID > id) {
-		return Pointer.pointerToAddress(avcodec_find_encoder((int)id.value()), AVCodec.class);
-	}
-	@Ptr 
-	public native long avcodec_find_encoder(int id);
-	/**
-	 * Original signature : <code>int avcodec_encode_video2(AVCodecContext*, AVPacket*, const AVFrame*, int*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1229</i>
-	 */
-	public int avcodec_encode_video2(Pointer<AVCodecContext > avctx, Pointer<AVPacket > avpkt, Pointer<AVFrame > frame, Pointer<Integer > got_packet_ptr) {
-		return avcodec_encode_video2(Pointer.getPeer(avctx), Pointer.getPeer(avpkt), Pointer.getPeer(frame), Pointer.getPeer(got_packet_ptr));
-	}
-	public native int avcodec_encode_video2(@Ptr long avctx, @Ptr long avpkt, @Ptr long frame, @Ptr long got_packet_ptr);
-	/**
-	 * Original signature : <code>int avpicture_fill(AVPicture*, const uint8_t*, AVPixelFormat, int, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1231</i>
-	 */
-	public int avpicture_fill(Pointer<AVPicture > picture, Pointer<Byte > ptr, IntValuedEnum<AVPixelFormat > pix_fmt, int width, int height) {
-		return avpicture_fill(Pointer.getPeer(picture), Pointer.getPeer(ptr), (int)pix_fmt.value(), width, height);
-	}
-	public native int avpicture_fill(@Ptr long picture, @Ptr long ptr, int pix_fmt, int width, int height);
-	/**
-	 * Original signature : <code>int avpicture_get_size(AVPixelFormat, int, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1233</i>
-	 */
-	public int avpicture_get_size(IntValuedEnum<AVPixelFormat> pix_fmt, int width, int height) {
-		return avpicture_get_size((int)pix_fmt.value(), width, height);
-	}
-	public native int avpicture_get_size(int pix_fmt, int width, int height);
-	/**
-	 * Original signature : <code>int av_image_alloc(uint8_t*[4], int[4], int, int, AVPixelFormat, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1235</i>
-	 */
-	public int av_image_alloc(Pointer<Pointer<Byte > > pointers, Pointer<Integer > linesizes, int w, int h, IntValuedEnum<AVPixelFormat > pix_fmt, int align) {
-		return av_image_alloc(Pointer.getPeer(pointers), Pointer.getPeer(linesizes), w, h, (int)pix_fmt.value(), align);
-	}
-	public native int av_image_alloc(@Ptr long pointers,@Ptr long linesize, int w, int h, int pxl_fmt, int align);
-	/** C type : const AVClass* */
-	public Pointer<AVClass > av_class() {
-		try {
-			return (Pointer<AVClass >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("av_class").as(DefaultParameterizedType.paramType(Pointer.class, AVClass.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : const AVClass* */
-	public AvcodecLibrary av_class(Pointer<AVClass > av_class) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("av_class").as(DefaultParameterizedType.paramType(Pointer.class, AVClass.class)).set(av_class);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int log_level_offset() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("log_level_offset").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary log_level_offset(int log_level_offset) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("log_level_offset").as(int.class).set(log_level_offset);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * see AVMEDIA_TYPE_xxx<br>
-	 * C type : AVMediaType
-	 */
-	public IntValuedEnum<AVMediaType > codec_type() {
-		try {
-			return (IntValuedEnum<AVMediaType >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_type").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVMediaType.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * see AVMEDIA_TYPE_xxx<br>
-	 * C type : AVMediaType
-	 */
-	public AvcodecLibrary codec_type(IntValuedEnum<AVMediaType > codec_type) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_type").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVMediaType.class)).set(codec_type);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVCodec* */
-	public Pointer<AVCodec > codec() {
-		try {
-			return (Pointer<AVCodec >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec").as(DefaultParameterizedType.paramType(Pointer.class, AVCodec.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVCodec* */
-	public AvcodecLibrary codec(Pointer<AVCodec > codec) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec").as(DefaultParameterizedType.paramType(Pointer.class, AVCodec.class)).set(codec);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char[32] */
-	@Array({32}) 
-	public Pointer<Byte > codec_name() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_name").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * see AV_CODEC_ID_xxx<br>
-	 * C type : AVCodecID
-	 */
-	public IntValuedEnum<AvcodecLibrary.AVCodecID > codec_id() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVCodecID >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_id").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVCodecID.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * see AV_CODEC_ID_xxx<br>
-	 * C type : AVCodecID
-	 */
-	public AvcodecLibrary codec_id(IntValuedEnum<AvcodecLibrary.AVCodecID > codec_id) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_id").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVCodecID.class)).set(codec_id);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int codec_tag() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_tag").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary codec_tag(int codec_tag) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_tag").as(int.class).set(codec_tag);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int stream_codec_tag() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("stream_codec_tag").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary stream_codec_tag(int stream_codec_tag) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("stream_codec_tag").as(int.class).set(stream_codec_tag);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public Pointer<? > priv_data() {
-		try {
-			return (Pointer<? >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("priv_data").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public AvcodecLibrary priv_data(Pointer<? > priv_data) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("priv_data").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(priv_data);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Conversion Error : AVCodecInternal* (failed to convert type to Java (undefined type)) */
-	/** C type : void* */
-	public Pointer<? > opaque() {
-		try {
-			return (Pointer<? >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("opaque").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public AvcodecLibrary opaque(Pointer<? > opaque) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("opaque").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(opaque);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int bit_rate() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("bit_rate").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary bit_rate(int bit_rate) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("bit_rate").as(int.class).set(bit_rate);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int bit_rate_tolerance() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("bit_rate_tolerance").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary bit_rate_tolerance(int bit_rate_tolerance) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("bit_rate_tolerance").as(int.class).set(bit_rate_tolerance);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int global_quality() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("global_quality").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary global_quality(int global_quality) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("global_quality").as(int.class).set(global_quality);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int compression_level() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("compression_level").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary compression_level(int compression_level) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("compression_level").as(int.class).set(compression_level);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int flags() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("flags").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary flags(int flags) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("flags").as(int.class).set(flags);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int flags2() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("flags2").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary flags2(int flags2) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("flags2").as(int.class).set(flags2);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint8_t* */
-	public Pointer<Byte > extradata() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("extradata").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint8_t* */
-	public AvcodecLibrary extradata(Pointer<Byte > extradata) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("extradata").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(extradata);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int extradata_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("extradata_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary extradata_size(int extradata_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("extradata_size").as(int.class).set(extradata_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AVRational time_base() {
-		try {
-			return (AVRational)BridJ.getNativeLibrary("avcodec").getSymbolPointer("time_base").as(AVRational.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AvcodecLibrary time_base(AVRational time_base) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("time_base").as(AVRational.class).set(time_base);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int ticks_per_frame() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("ticks_per_frame").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary ticks_per_frame(int ticks_per_frame) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("ticks_per_frame").as(int.class).set(ticks_per_frame);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int delay() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("delay").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary delay(int delay) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("delay").as(int.class).set(delay);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int width() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("width").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary width(int width) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("width").as(int.class).set(width);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int height() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("height").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary height(int height) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("height").as(int.class).set(height);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int coded_width() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_width").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary coded_width(int coded_width) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_width").as(int.class).set(coded_width);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int coded_height() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_height").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary coded_height(int coded_height) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_height").as(int.class).set(coded_height);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int gop_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("gop_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary gop_size(int gop_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("gop_size").as(int.class).set(gop_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVPixelFormat */
-	public IntValuedEnum<AVPixelFormat > pix_fmt() {
-		try {
-			return (IntValuedEnum<AVPixelFormat >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pix_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVPixelFormat.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVPixelFormat */
-	public AvcodecLibrary pix_fmt(IntValuedEnum<AVPixelFormat > pix_fmt) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pix_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVPixelFormat.class)).set(pix_fmt);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_method() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_method").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_method(int me_method) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_method").as(int.class).set(me_method);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int max_b_frames() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_b_frames").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary max_b_frames(int max_b_frames) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_b_frames").as(int.class).set(max_b_frames);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float b_quant_factor() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_quant_factor").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary b_quant_factor(float b_quant_factor) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_quant_factor").as(float.class).set(b_quant_factor);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_strategy() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_strategy").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_strategy(int rc_strategy) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_strategy").as(int.class).set(rc_strategy);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int b_frame_strategy() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_frame_strategy").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary b_frame_strategy(int b_frame_strategy) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_frame_strategy").as(int.class).set(b_frame_strategy);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float b_quant_offset() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_quant_offset").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary b_quant_offset(float b_quant_offset) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_quant_offset").as(float.class).set(b_quant_offset);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int has_b_frames() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("has_b_frames").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary has_b_frames(int has_b_frames) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("has_b_frames").as(int.class).set(has_b_frames);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mpeg_quant() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mpeg_quant").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mpeg_quant(int mpeg_quant) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mpeg_quant").as(int.class).set(mpeg_quant);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float i_quant_factor() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_quant_factor").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary i_quant_factor(float i_quant_factor) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_quant_factor").as(float.class).set(i_quant_factor);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float i_quant_offset() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_quant_offset").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary i_quant_offset(float i_quant_offset) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_quant_offset").as(float.class).set(i_quant_offset);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float lumi_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("lumi_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary lumi_masking(float lumi_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("lumi_masking").as(float.class).set(lumi_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float temporal_cplx_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("temporal_cplx_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary temporal_cplx_masking(float temporal_cplx_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("temporal_cplx_masking").as(float.class).set(temporal_cplx_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float spatial_cplx_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("spatial_cplx_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary spatial_cplx_masking(float spatial_cplx_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("spatial_cplx_masking").as(float.class).set(spatial_cplx_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float p_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary p_masking(float p_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_masking").as(float.class).set(p_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float dark_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("dark_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary dark_masking(float dark_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("dark_masking").as(float.class).set(dark_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int slice_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary slice_count(int slice_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_count").as(int.class).set(slice_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int prediction_method() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("prediction_method").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary prediction_method(int prediction_method) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("prediction_method").as(int.class).set(prediction_method);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : int* */
-	public Pointer<Integer > slice_offset() {
-		try {
-			return (Pointer<Integer >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_offset").as(DefaultParameterizedType.paramType(Pointer.class, Integer.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : int* */
-	public AvcodecLibrary slice_offset(Pointer<Integer > slice_offset) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_offset").as(DefaultParameterizedType.paramType(Pointer.class, Integer.class)).set(slice_offset);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AVRational sample_aspect_ratio() {
-		try {
-			return (AVRational)BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_aspect_ratio").as(AVRational.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AvcodecLibrary sample_aspect_ratio(AVRational sample_aspect_ratio) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_aspect_ratio").as(AVRational.class).set(sample_aspect_ratio);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_cmp(int me_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_cmp").as(int.class).set(me_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_sub_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_sub_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_sub_cmp(int me_sub_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_sub_cmp").as(int.class).set(me_sub_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mb_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mb_cmp(int mb_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_cmp").as(int.class).set(mb_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int ildct_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("ildct_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary ildct_cmp(int ildct_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("ildct_cmp").as(int.class).set(ildct_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int dia_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("dia_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary dia_size(int dia_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("dia_size").as(int.class).set(dia_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int last_predictor_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("last_predictor_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary last_predictor_count(int last_predictor_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("last_predictor_count").as(int.class).set(last_predictor_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int pre_me() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pre_me").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary pre_me(int pre_me) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pre_me").as(int.class).set(pre_me);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_pre_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_pre_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_pre_cmp(int me_pre_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_pre_cmp").as(int.class).set(me_pre_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int pre_dia_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pre_dia_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary pre_dia_size(int pre_dia_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pre_dia_size").as(int.class).set(pre_dia_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_subpel_quality() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_subpel_quality").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_subpel_quality(int me_subpel_quality) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_subpel_quality").as(int.class).set(me_subpel_quality);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int dtg_active_format() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("dtg_active_format").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary dtg_active_format(int dtg_active_format) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("dtg_active_format").as(int.class).set(dtg_active_format);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_range() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_range").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_range(int me_range) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_range").as(int.class).set(me_range);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int intra_quant_bias() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_quant_bias").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary intra_quant_bias(int intra_quant_bias) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_quant_bias").as(int.class).set(intra_quant_bias);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int inter_quant_bias() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("inter_quant_bias").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary inter_quant_bias(int inter_quant_bias) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("inter_quant_bias").as(int.class).set(inter_quant_bias);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int slice_flags() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_flags").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary slice_flags(int slice_flags) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("slice_flags").as(int.class).set(slice_flags);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int xvmc_acceleration() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("xvmc_acceleration").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary xvmc_acceleration(int xvmc_acceleration) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("xvmc_acceleration").as(int.class).set(xvmc_acceleration);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mb_decision() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_decision").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mb_decision(int mb_decision) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_decision").as(int.class).set(mb_decision);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint16_t* */
-	public Pointer<Short > intra_matrix() {
-		try {
-			return (Pointer<Short >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_matrix").as(DefaultParameterizedType.paramType(Pointer.class, Short.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint16_t* */
-	public AvcodecLibrary intra_matrix(Pointer<Short > intra_matrix) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_matrix").as(DefaultParameterizedType.paramType(Pointer.class, Short.class)).set(intra_matrix);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint16_t* */
-	public Pointer<Short > inter_matrix() {
-		try {
-			return (Pointer<Short >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("inter_matrix").as(DefaultParameterizedType.paramType(Pointer.class, Short.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint16_t* */
-	public AvcodecLibrary inter_matrix(Pointer<Short > inter_matrix) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("inter_matrix").as(DefaultParameterizedType.paramType(Pointer.class, Short.class)).set(inter_matrix);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int scenechange_threshold() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("scenechange_threshold").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary scenechange_threshold(int scenechange_threshold) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("scenechange_threshold").as(int.class).set(scenechange_threshold);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int noise_reduction() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("noise_reduction").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary noise_reduction(int noise_reduction) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("noise_reduction").as(int.class).set(noise_reduction);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_threshold() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_threshold").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_threshold(int me_threshold) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_threshold").as(int.class).set(me_threshold);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mb_threshold() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_threshold").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mb_threshold(int mb_threshold) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_threshold").as(int.class).set(mb_threshold);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int intra_dc_precision() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_dc_precision").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary intra_dc_precision(int intra_dc_precision) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("intra_dc_precision").as(int.class).set(intra_dc_precision);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int skip_top() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_top").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary skip_top(int skip_top) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_top").as(int.class).set(skip_top);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int skip_bottom() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_bottom").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary skip_bottom(int skip_bottom) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_bottom").as(int.class).set(skip_bottom);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float border_masking() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("border_masking").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary border_masking(float border_masking) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("border_masking").as(float.class).set(border_masking);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mb_lmin() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_lmin").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mb_lmin(int mb_lmin) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_lmin").as(int.class).set(mb_lmin);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mb_lmax() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_lmax").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mb_lmax(int mb_lmax) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mb_lmax").as(int.class).set(mb_lmax);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int me_penalty_compensation() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_penalty_compensation").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary me_penalty_compensation(int me_penalty_compensation) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("me_penalty_compensation").as(int.class).set(me_penalty_compensation);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int bidir_refine() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("bidir_refine").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary bidir_refine(int bidir_refine) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("bidir_refine").as(int.class).set(bidir_refine);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int brd_scale() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("brd_scale").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary brd_scale(int brd_scale) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("brd_scale").as(int.class).set(brd_scale);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int keyint_min() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("keyint_min").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary keyint_min(int keyint_min) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("keyint_min").as(int.class).set(keyint_min);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int refs() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("refs").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary refs(int refs) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("refs").as(int.class).set(refs);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int chromaoffset() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("chromaoffset").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary chromaoffset(int chromaoffset) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("chromaoffset").as(int.class).set(chromaoffset);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int scenechange_factor() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("scenechange_factor").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary scenechange_factor(int scenechange_factor) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("scenechange_factor").as(int.class).set(scenechange_factor);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mv0_threshold() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mv0_threshold").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mv0_threshold(int mv0_threshold) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mv0_threshold").as(int.class).set(mv0_threshold);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int b_sensitivity() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_sensitivity").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary b_sensitivity(int b_sensitivity) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("b_sensitivity").as(int.class).set(b_sensitivity);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorPrimaries */
-	public IntValuedEnum<AvcodecLibrary.AVColorPrimaries > color_primaries() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVColorPrimaries >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_primaries").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVColorPrimaries.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorPrimaries */
-	public AvcodecLibrary color_primaries(IntValuedEnum<AvcodecLibrary.AVColorPrimaries > color_primaries) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_primaries").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVColorPrimaries.class)).set(color_primaries);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorTransferCharacteristic */
-	public IntValuedEnum<AvcodecLibrary.AVColorTransferCharacteristic > color_trc() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVColorTransferCharacteristic >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_trc").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVColorTransferCharacteristic.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorTransferCharacteristic */
-	public AvcodecLibrary color_trc(IntValuedEnum<AvcodecLibrary.AVColorTransferCharacteristic > color_trc) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_trc").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVColorTransferCharacteristic.class)).set(color_trc);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorSpace */
-	public IntValuedEnum<AVColorSpace > colorspace() {
-		try {
-			return (IntValuedEnum<AVColorSpace >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("colorspace").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVColorSpace.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorSpace */
-	public AvcodecLibrary colorspace(IntValuedEnum<AVColorSpace > colorspace) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("colorspace").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVColorSpace.class)).set(colorspace);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorRange */
-	public IntValuedEnum<AVColorRange > color_range() {
-		try {
-			return (IntValuedEnum<AVColorRange >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_range").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVColorRange.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVColorRange */
-	public AvcodecLibrary color_range(IntValuedEnum<AVColorRange > color_range) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("color_range").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVColorRange.class)).set(color_range);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVChromaLocation */
-	public IntValuedEnum<AvcodecLibrary.AVChromaLocation > chroma_sample_location() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVChromaLocation >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("chroma_sample_location").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVChromaLocation.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVChromaLocation */
-	public AvcodecLibrary chroma_sample_location(IntValuedEnum<AvcodecLibrary.AVChromaLocation > chroma_sample_location) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("chroma_sample_location").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVChromaLocation.class)).set(chroma_sample_location);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int slices() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("slices").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary slices(int slices) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("slices").as(int.class).set(slices);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVFieldOrder */
-	public IntValuedEnum<AvcodecLibrary.AVFieldOrder > field_order() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVFieldOrder >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("field_order").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVFieldOrder.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVFieldOrder */
-	public AvcodecLibrary field_order(IntValuedEnum<AvcodecLibrary.AVFieldOrder > field_order) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("field_order").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVFieldOrder.class)).set(field_order);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < samples per second */
-	public int sample_rate() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_rate").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < samples per second */
-	public AvcodecLibrary sample_rate(int sample_rate) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_rate").as(int.class).set(sample_rate);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < number of audio channels */
-	public int channels() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("channels").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < number of audio channels */
-	public AvcodecLibrary channels(int channels) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("channels").as(int.class).set(channels);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * < sample format<br>
-	 * C type : AVSampleFormat
-	 */
-	public IntValuedEnum<AVSampleFormat > sample_fmt() {
-		try {
-			return (IntValuedEnum<AVSampleFormat >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVSampleFormat.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/**
-	 * < sample format<br>
-	 * C type : AVSampleFormat
-	 */
-	public AvcodecLibrary sample_fmt(IntValuedEnum<AVSampleFormat > sample_fmt) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("sample_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVSampleFormat.class)).set(sample_fmt);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_size(int frame_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_size").as(int.class).set(frame_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_number() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_number").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_number(int frame_number) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_number").as(int.class).set(frame_number);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int block_align() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("block_align").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary block_align(int block_align) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("block_align").as(int.class).set(block_align);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int cutoff() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("cutoff").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary cutoff(int cutoff) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("cutoff").as(int.class).set(cutoff);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int request_channels() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_channels").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary request_channels(int request_channels) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_channels").as(int.class).set(request_channels);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public long channel_layout() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("channel_layout").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary channel_layout(long channel_layout) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("channel_layout").as(long.class).set(channel_layout);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public long request_channel_layout() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_channel_layout").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary request_channel_layout(long request_channel_layout) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_channel_layout").as(long.class).set(request_channel_layout);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVAudioServiceType */
-	public IntValuedEnum<AvcodecLibrary.AVAudioServiceType > audio_service_type() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVAudioServiceType >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("audio_service_type").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVAudioServiceType.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVAudioServiceType */
-	public AvcodecLibrary audio_service_type(IntValuedEnum<AvcodecLibrary.AVAudioServiceType > audio_service_type) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("audio_service_type").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVAudioServiceType.class)).set(audio_service_type);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVSampleFormat */
-	public IntValuedEnum<AVSampleFormat > request_sample_fmt() {
-		try {
-			return (IntValuedEnum<AVSampleFormat >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_sample_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVSampleFormat.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVSampleFormat */
-	public AvcodecLibrary request_sample_fmt(IntValuedEnum<AVSampleFormat > request_sample_fmt) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("request_sample_fmt").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AVSampleFormat.class)).set(request_sample_fmt);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int refcounted_frames() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("refcounted_frames").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary refcounted_frames(int refcounted_frames) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("refcounted_frames").as(int.class).set(refcounted_frames);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < amount of qscale change between easy & hard scenes (0.0-1.0) */
-	public float qcompress() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("qcompress").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < amount of qscale change between easy & hard scenes (0.0-1.0) */
-	public AvcodecLibrary qcompress(float qcompress) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("qcompress").as(float.class).set(qcompress);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < amount of qscale smoothing over time (0.0-1.0) */
-	public float qblur() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("qblur").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** < amount of qscale smoothing over time (0.0-1.0) */
-	public AvcodecLibrary qblur(float qblur) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("qblur").as(float.class).set(qblur);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int qmin() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("qmin").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary qmin(int qmin) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("qmin").as(int.class).set(qmin);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int qmax() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("qmax").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary qmax(int qmax) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("qmax").as(int.class).set(qmax);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int max_qdiff() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_qdiff").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary max_qdiff(int max_qdiff) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_qdiff").as(int.class).set(max_qdiff);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_qsquish() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qsquish").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_qsquish(float rc_qsquish) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qsquish").as(float.class).set(rc_qsquish);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_qmod_amp() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qmod_amp").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_qmod_amp(float rc_qmod_amp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qmod_amp").as(float.class).set(rc_qmod_amp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_qmod_freq() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qmod_freq").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_qmod_freq(int rc_qmod_freq) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_qmod_freq").as(int.class).set(rc_qmod_freq);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_buffer_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_buffer_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_buffer_size(int rc_buffer_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_buffer_size").as(int.class).set(rc_buffer_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_override_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_override_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_override_count(int rc_override_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_override_count").as(int.class).set(rc_override_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Conversion Error : RcOverride* (failed to convert type to Java (undefined type)) */
-	/** C type : const char* */
-	public Pointer<Byte > rc_eq() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_eq").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : const char* */
-	public AvcodecLibrary rc_eq(Pointer<Byte > rc_eq) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_eq").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(rc_eq);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_max_rate() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_max_rate").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_max_rate(int rc_max_rate) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_max_rate").as(int.class).set(rc_max_rate);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_min_rate() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_min_rate").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_min_rate(int rc_min_rate) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_min_rate").as(int.class).set(rc_min_rate);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_buffer_aggressivity() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_buffer_aggressivity").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_buffer_aggressivity(float rc_buffer_aggressivity) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_buffer_aggressivity").as(float.class).set(rc_buffer_aggressivity);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_initial_cplx() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_initial_cplx").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_initial_cplx(float rc_initial_cplx) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_initial_cplx").as(float.class).set(rc_initial_cplx);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_max_available_vbv_use() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_max_available_vbv_use").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_max_available_vbv_use(float rc_max_available_vbv_use) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_max_available_vbv_use").as(float.class).set(rc_max_available_vbv_use);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public float rc_min_vbv_overflow_use() {
-		try {
-			return (float)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_min_vbv_overflow_use").as(float.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_min_vbv_overflow_use(float rc_min_vbv_overflow_use) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_min_vbv_overflow_use").as(float.class).set(rc_min_vbv_overflow_use);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int rc_initial_buffer_occupancy() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_initial_buffer_occupancy").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary rc_initial_buffer_occupancy(int rc_initial_buffer_occupancy) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rc_initial_buffer_occupancy").as(int.class).set(rc_initial_buffer_occupancy);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int coder_type() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("coder_type").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary coder_type(int coder_type) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("coder_type").as(int.class).set(coder_type);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int context_model() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("context_model").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary context_model(int context_model) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("context_model").as(int.class).set(context_model);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int lmin() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("lmin").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary lmin(int lmin) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("lmin").as(int.class).set(lmin);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int lmax() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("lmax").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary lmax(int lmax) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("lmax").as(int.class).set(lmax);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_skip_threshold() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_threshold").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_skip_threshold(int frame_skip_threshold) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_threshold").as(int.class).set(frame_skip_threshold);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_skip_factor() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_factor").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_skip_factor(int frame_skip_factor) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_factor").as(int.class).set(frame_skip_factor);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_skip_exp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_exp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_skip_exp(int frame_skip_exp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_exp").as(int.class).set(frame_skip_exp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_skip_cmp() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_cmp").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_skip_cmp(int frame_skip_cmp) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_skip_cmp").as(int.class).set(frame_skip_cmp);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int trellis() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("trellis").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary trellis(int trellis) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("trellis").as(int.class).set(trellis);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int min_prediction_order() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("min_prediction_order").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary min_prediction_order(int min_prediction_order) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("min_prediction_order").as(int.class).set(min_prediction_order);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int max_prediction_order() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_prediction_order").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary max_prediction_order(int max_prediction_order) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("max_prediction_order").as(int.class).set(max_prediction_order);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public long timecode_frame_start() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("timecode_frame_start").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary timecode_frame_start(long timecode_frame_start) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("timecode_frame_start").as(long.class).set(timecode_frame_start);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** The size of the RTP payload: the coder will */
-	public int rtp_payload_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("rtp_payload_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** The size of the RTP payload: the coder will */
-	public AvcodecLibrary rtp_payload_size(int rtp_payload_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("rtp_payload_size").as(int.class).set(rtp_payload_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int mv_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("mv_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary mv_bits(int mv_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("mv_bits").as(int.class).set(mv_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int header_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("header_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary header_bits(int header_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("header_bits").as(int.class).set(header_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int i_tex_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_tex_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary i_tex_bits(int i_tex_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_tex_bits").as(int.class).set(i_tex_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int p_tex_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_tex_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary p_tex_bits(int p_tex_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_tex_bits").as(int.class).set(p_tex_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int i_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary i_count(int i_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("i_count").as(int.class).set(i_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int p_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary p_count(int p_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("p_count").as(int.class).set(p_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int skip_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary skip_count(int skip_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_count").as(int.class).set(skip_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int misc_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("misc_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary misc_bits(int misc_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("misc_bits").as(int.class).set(misc_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int frame_bits() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_bits").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary frame_bits(int frame_bits) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("frame_bits").as(int.class).set(frame_bits);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public Pointer<Byte > stats_out() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("stats_out").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public AvcodecLibrary stats_out(Pointer<Byte > stats_out) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("stats_out").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(stats_out);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public Pointer<Byte > stats_in() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("stats_in").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public AvcodecLibrary stats_in(Pointer<Byte > stats_in) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("stats_in").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(stats_in);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int workaround_bugs() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("workaround_bugs").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary workaround_bugs(int workaround_bugs) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("workaround_bugs").as(int.class).set(workaround_bugs);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int strict_std_compliance() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("strict_std_compliance").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary strict_std_compliance(int strict_std_compliance) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("strict_std_compliance").as(int.class).set(strict_std_compliance);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int error_concealment() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("error_concealment").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary error_concealment(int error_concealment) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("error_concealment").as(int.class).set(error_concealment);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int debug() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("debug").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary debug(int debug) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("debug").as(int.class).set(debug);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int debug_mv() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("debug_mv").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary debug_mv(int debug_mv) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("debug_mv").as(int.class).set(debug_mv);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int err_recognition() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("err_recognition").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary err_recognition(int err_recognition) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("err_recognition").as(int.class).set(err_recognition);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public long reordered_opaque() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("reordered_opaque").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary reordered_opaque(long reordered_opaque) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("reordered_opaque").as(long.class).set(reordered_opaque);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Conversion Error : AVHWAccel* (failed to convert type to Java (undefined type)) */
-	/** C type : void* */
-	public Pointer<? > hwaccel_context() {
-		try {
-			return (Pointer<? >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("hwaccel_context").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public AvcodecLibrary hwaccel_context(Pointer<? > hwaccel_context) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("hwaccel_context").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(hwaccel_context);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint64_t[8] */
-	@Array({8}) 
-	public Pointer<Long > error() {
-		try {
-			return (Pointer<Long >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("error").as(DefaultParameterizedType.paramType(Pointer.class, Long.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int dct_algo() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("dct_algo").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary dct_algo(int dct_algo) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("dct_algo").as(int.class).set(dct_algo);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int idct_algo() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("idct_algo").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary idct_algo(int idct_algo) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("idct_algo").as(int.class).set(idct_algo);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int bits_per_coded_sample() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("bits_per_coded_sample").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary bits_per_coded_sample(int bits_per_coded_sample) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("bits_per_coded_sample").as(int.class).set(bits_per_coded_sample);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int bits_per_raw_sample() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("bits_per_raw_sample").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary bits_per_raw_sample(int bits_per_raw_sample) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("bits_per_raw_sample").as(int.class).set(bits_per_raw_sample);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVFrame* */
-	public Pointer<AVFrame > coded_frame() {
-		try {
-			return (Pointer<AVFrame >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_frame").as(DefaultParameterizedType.paramType(Pointer.class, AVFrame.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVFrame* */
-	public AvcodecLibrary coded_frame(Pointer<AVFrame > coded_frame) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("coded_frame").as(DefaultParameterizedType.paramType(Pointer.class, AVFrame.class)).set(coded_frame);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int thread_count() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_count").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary thread_count(int thread_count) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_count").as(int.class).set(thread_count);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int thread_type() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_type").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary thread_type(int thread_type) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_type").as(int.class).set(thread_type);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int active_thread_type() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("active_thread_type").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary active_thread_type(int active_thread_type) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("active_thread_type").as(int.class).set(active_thread_type);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int thread_safe_callbacks() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_safe_callbacks").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary thread_safe_callbacks(int thread_safe_callbacks) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_safe_callbacks").as(int.class).set(thread_safe_callbacks);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public Pointer<? > thread_opaque() {
-		try {
-			return (Pointer<? >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_opaque").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : void* */
-	public AvcodecLibrary thread_opaque(Pointer<? > thread_opaque) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("thread_opaque").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(thread_opaque);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int nsse_weight() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("nsse_weight").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary nsse_weight(int nsse_weight) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("nsse_weight").as(int.class).set(nsse_weight);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int profile() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("profile").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary profile(int profile) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("profile").as(int.class).set(profile);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int level() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("level").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary level(int level) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("level").as(int.class).set(level);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public IntValuedEnum<AvcodecLibrary.AVDiscard > skip_loop_filter() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVDiscard >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_loop_filter").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public AvcodecLibrary skip_loop_filter(IntValuedEnum<AvcodecLibrary.AVDiscard > skip_loop_filter) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_loop_filter").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).set(skip_loop_filter);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public IntValuedEnum<AvcodecLibrary.AVDiscard > skip_idct() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVDiscard >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_idct").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public AvcodecLibrary skip_idct(IntValuedEnum<AvcodecLibrary.AVDiscard > skip_idct) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_idct").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).set(skip_idct);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public IntValuedEnum<AvcodecLibrary.AVDiscard > skip_frame() {
-		try {
-			return (IntValuedEnum<AvcodecLibrary.AVDiscard >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_frame").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVDiscard */
-	public AvcodecLibrary skip_frame(IntValuedEnum<AvcodecLibrary.AVDiscard > skip_frame) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_frame").as(DefaultParameterizedType.paramType(IntValuedEnum.class, AvcodecLibrary.AVDiscard.class)).set(skip_frame);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint8_t* */
-	public Pointer<Byte > subtitle_header() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("subtitle_header").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : uint8_t* */
-	public AvcodecLibrary subtitle_header(Pointer<Byte > subtitle_header) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("subtitle_header").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(subtitle_header);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int subtitle_header_size() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("subtitle_header_size").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary subtitle_header_size(int subtitle_header_size) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("subtitle_header_size").as(int.class).set(subtitle_header_size);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int error_rate() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("error_rate").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary error_rate(int error_rate) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("error_rate").as(int.class).set(error_rate);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVPacket* */
-	public Pointer<AVPacket > pkt() {
-		try {
-			return (Pointer<AVPacket >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pkt").as(DefaultParameterizedType.paramType(Pointer.class, AVPacket.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVPacket* */
-	public AvcodecLibrary pkt(Pointer<AVPacket > pkt) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pkt").as(DefaultParameterizedType.paramType(Pointer.class, AVPacket.class)).set(pkt);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public long vbv_delay() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("vbv_delay").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary vbv_delay(long vbv_delay) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("vbv_delay").as(long.class).set(vbv_delay);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AVRational pkt_timebase() {
-		try {
-			return (AVRational)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pkt_timebase").as(AVRational.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : AVRational */
-	public AvcodecLibrary pkt_timebase(AVRational pkt_timebase) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pkt_timebase").as(AVRational.class).set(pkt_timebase);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : const AVCodecDescriptor* */
-	public Pointer<AVCodecDescriptor > codec_descriptor() {
-		try {
-			return (Pointer<AVCodecDescriptor >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_descriptor").as(DefaultParameterizedType.paramType(Pointer.class, AVCodecDescriptor.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : const AVCodecDescriptor* */
-	public AvcodecLibrary codec_descriptor(Pointer<AVCodecDescriptor > codec_descriptor) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("codec_descriptor").as(DefaultParameterizedType.paramType(Pointer.class, AVCodecDescriptor.class)).set(codec_descriptor);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int lowres() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("lowres").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary lowres(int lowres) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("lowres").as(int.class).set(lowres);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Number of incorrect PTS values so far */
-	public long pts_correction_num_faulty_pts() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_num_faulty_pts").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Number of incorrect PTS values so far */
-	public AvcodecLibrary pts_correction_num_faulty_pts(long pts_correction_num_faulty_pts) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_num_faulty_pts").as(long.class).set(pts_correction_num_faulty_pts);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Number of incorrect DTS values so far */
-	public long pts_correction_num_faulty_dts() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_num_faulty_dts").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Number of incorrect DTS values so far */
-	public AvcodecLibrary pts_correction_num_faulty_dts(long pts_correction_num_faulty_dts) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_num_faulty_dts").as(long.class).set(pts_correction_num_faulty_dts);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** PTS of the last frame */
-	public long pts_correction_last_pts() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_last_pts").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** PTS of the last frame */
-	public AvcodecLibrary pts_correction_last_pts(long pts_correction_last_pts) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_last_pts").as(long.class).set(pts_correction_last_pts);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** DTS of the last frame */
-	public long pts_correction_last_dts() {
-		try {
-			return (long)BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_last_dts").as(long.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** DTS of the last frame */
-	public AvcodecLibrary pts_correction_last_dts(long pts_correction_last_dts) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("pts_correction_last_dts").as(long.class).set(pts_correction_last_dts);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public Pointer<Byte > sub_charenc() {
-		try {
-			return (Pointer<Byte >)BridJ.getNativeLibrary("avcodec").getSymbolPointer("sub_charenc").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** C type : char* */
-	public AvcodecLibrary sub_charenc(Pointer<Byte > sub_charenc) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("sub_charenc").as(DefaultParameterizedType.paramType(Pointer.class, Byte.class)).set(sub_charenc);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int sub_charenc_mode() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("sub_charenc_mode").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary sub_charenc_mode(int sub_charenc_mode) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("sub_charenc_mode").as(int.class).set(sub_charenc_mode);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int skip_alpha() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_alpha").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary skip_alpha(int skip_alpha) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("skip_alpha").as(int.class).set(skip_alpha);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public int seek_preroll() {
-		try {
-			return (int)BridJ.getNativeLibrary("avcodec").getSymbolPointer("seek_preroll").as(int.class).get();
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	public AvcodecLibrary seek_preroll(int seek_preroll) {
-		try {
-			{
-				BridJ.getNativeLibrary("avcodec").getSymbolPointer("seek_preroll").as(int.class).set(seek_preroll);
-				return this;
-			}
-		}catch (Throwable $ex$) {
-			throw new RuntimeException($ex$);
-		}
-	}
-	/** Undefined type */
-	public static interface AVSubtitle {
-		
-	};
-	/** Undefined type */
-	public static interface AVCodecInternal {
-		
-	};
-	/** Undefined type */
-	public static interface AVCodecDefault {
-		
-	};
-	/** Undefined type */
-	public static interface AVHWAccel {
-		
-	};
-	/** Undefined type */
-	public static interface RcOverride {
-		
-	};
-}
diff -pruN src/org/ffmpeg/avcodec/AVCodecParserContext.java src.bak/org/ffmpeg/avcodec/AVCodecParserContext.java
--- src/org/ffmpeg/avcodec/AVCodecParserContext.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVCodecParserContext.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,324 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVFieldOrder;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVPictureStructure;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1210</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVCodecParserContext extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : void* */
-	@Field(0) 
-	public Pointer<? > priv_data() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : void* */
-	@Field(0) 
-	public AVCodecParserContext priv_data(Pointer<? > priv_data) {
-		this.io.setPointerField(this, 0, priv_data);
-		return this;
-	}
-	/** C type : AVCodecParser* */
-	@Field(1) 
-	public Pointer<AVCodecParser > parser() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : AVCodecParser* */
-	@Field(1) 
-	public AVCodecParserContext parser(Pointer<AVCodecParser > parser) {
-		this.io.setPointerField(this, 1, parser);
-		return this;
-	}
-	/** offset of the current frame */
-	@Field(2) 
-	public long frame_offset() {
-		return this.io.getLongField(this, 2);
-	}
-	/** offset of the current frame */
-	@Field(2) 
-	public AVCodecParserContext frame_offset(long frame_offset) {
-		this.io.setLongField(this, 2, frame_offset);
-		return this;
-	}
-	/**
-	 * current offset<br>
-	 * (incremented by each av_parser_parse())
-	 */
-	@Field(3) 
-	public long cur_offset() {
-		return this.io.getLongField(this, 3);
-	}
-	/**
-	 * current offset<br>
-	 * (incremented by each av_parser_parse())
-	 */
-	@Field(3) 
-	public AVCodecParserContext cur_offset(long cur_offset) {
-		this.io.setLongField(this, 3, cur_offset);
-		return this;
-	}
-	/** offset of the next frame */
-	@Field(4) 
-	public long next_frame_offset() {
-		return this.io.getLongField(this, 4);
-	}
-	/** offset of the next frame */
-	@Field(4) 
-	public AVCodecParserContext next_frame_offset(long next_frame_offset) {
-		this.io.setLongField(this, 4, next_frame_offset);
-		return this;
-	}
-	/** XXX: Put it back in AVCodecContext. */
-	@Field(5) 
-	public int pict_type() {
-		return this.io.getIntField(this, 5);
-	}
-	/** XXX: Put it back in AVCodecContext. */
-	@Field(5) 
-	public AVCodecParserContext pict_type(int pict_type) {
-		this.io.setIntField(this, 5, pict_type);
-		return this;
-	}
-	/** XXX: Put it back in AVCodecContext. */
-	@Field(6) 
-	public int repeat_pict() {
-		return this.io.getIntField(this, 6);
-	}
-	/** XXX: Put it back in AVCodecContext. */
-	@Field(6) 
-	public AVCodecParserContext repeat_pict(int repeat_pict) {
-		this.io.setIntField(this, 6, repeat_pict);
-		return this;
-	}
-	/** pts of the current frame */
-	@Field(7) 
-	public long pts() {
-		return this.io.getLongField(this, 7);
-	}
-	/** pts of the current frame */
-	@Field(7) 
-	public AVCodecParserContext pts(long pts) {
-		this.io.setLongField(this, 7, pts);
-		return this;
-	}
-	/** dts of the current frame */
-	@Field(8) 
-	public long dts() {
-		return this.io.getLongField(this, 8);
-	}
-	/** dts of the current frame */
-	@Field(8) 
-	public AVCodecParserContext dts(long dts) {
-		this.io.setLongField(this, 8, dts);
-		return this;
-	}
-	/** private data */
-	@Field(9) 
-	public long last_pts() {
-		return this.io.getLongField(this, 9);
-	}
-	/** private data */
-	@Field(9) 
-	public AVCodecParserContext last_pts(long last_pts) {
-		this.io.setLongField(this, 9, last_pts);
-		return this;
-	}
-	@Field(10) 
-	public long last_dts() {
-		return this.io.getLongField(this, 10);
-	}
-	@Field(10) 
-	public AVCodecParserContext last_dts(long last_dts) {
-		this.io.setLongField(this, 10, last_dts);
-		return this;
-	}
-	@Field(11) 
-	public int fetch_timestamp() {
-		return this.io.getIntField(this, 11);
-	}
-	@Field(11) 
-	public AVCodecParserContext fetch_timestamp(int fetch_timestamp) {
-		this.io.setIntField(this, 11, fetch_timestamp);
-		return this;
-	}
-	@Field(12) 
-	public int cur_frame_start_index() {
-		return this.io.getIntField(this, 12);
-	}
-	@Field(12) 
-	public AVCodecParserContext cur_frame_start_index(int cur_frame_start_index) {
-		this.io.setIntField(this, 12, cur_frame_start_index);
-		return this;
-	}
-	/** C type : int64_t[4] */
-	@Array({4}) 
-	@Field(13) 
-	public Pointer<Long > cur_frame_offset() {
-		return this.io.getPointerField(this, 13);
-	}
-	/** C type : int64_t[4] */
-	@Array({4}) 
-	@Field(14) 
-	public Pointer<Long > cur_frame_pts() {
-		return this.io.getPointerField(this, 14);
-	}
-	/** C type : int64_t[4] */
-	@Array({4}) 
-	@Field(15) 
-	public Pointer<Long > cur_frame_dts() {
-		return this.io.getPointerField(this, 15);
-	}
-	@Field(16) 
-	public int flags() {
-		return this.io.getIntField(this, 16);
-	}
-	@Field(16) 
-	public AVCodecParserContext flags(int flags) {
-		this.io.setIntField(this, 16, flags);
-		return this;
-	}
-	/** < byte offset from starting packet start */
-	@Field(17) 
-	public long offset() {
-		return this.io.getLongField(this, 17);
-	}
-	/** < byte offset from starting packet start */
-	@Field(17) 
-	public AVCodecParserContext offset(long offset) {
-		this.io.setLongField(this, 17, offset);
-		return this;
-	}
-	/** C type : int64_t[4] */
-	@Array({4}) 
-	@Field(18) 
-	public Pointer<Long > cur_frame_end() {
-		return this.io.getPointerField(this, 18);
-	}
-	@Field(19) 
-	public int key_frame() {
-		return this.io.getIntField(this, 19);
-	}
-	@Field(19) 
-	public AVCodecParserContext key_frame(int key_frame) {
-		this.io.setIntField(this, 19, key_frame);
-		return this;
-	}
-	@Field(20) 
-	public long convergence_duration() {
-		return this.io.getLongField(this, 20);
-	}
-	@Field(20) 
-	public AVCodecParserContext convergence_duration(long convergence_duration) {
-		this.io.setLongField(this, 20, convergence_duration);
-		return this;
-	}
-	@Field(21) 
-	public int dts_sync_point() {
-		return this.io.getIntField(this, 21);
-	}
-	@Field(21) 
-	public AVCodecParserContext dts_sync_point(int dts_sync_point) {
-		this.io.setIntField(this, 21, dts_sync_point);
-		return this;
-	}
-	@Field(22) 
-	public int dts_ref_dts_delta() {
-		return this.io.getIntField(this, 22);
-	}
-	@Field(22) 
-	public AVCodecParserContext dts_ref_dts_delta(int dts_ref_dts_delta) {
-		this.io.setIntField(this, 22, dts_ref_dts_delta);
-		return this;
-	}
-	@Field(23) 
-	public int pts_dts_delta() {
-		return this.io.getIntField(this, 23);
-	}
-	@Field(23) 
-	public AVCodecParserContext pts_dts_delta(int pts_dts_delta) {
-		this.io.setIntField(this, 23, pts_dts_delta);
-		return this;
-	}
-	/** C type : int64_t[4] */
-	@Array({4}) 
-	@Field(24) 
-	public Pointer<Long > cur_frame_pos() {
-		return this.io.getPointerField(this, 24);
-	}
-	@Field(25) 
-	public long pos() {
-		return this.io.getLongField(this, 25);
-	}
-	@Field(25) 
-	public AVCodecParserContext pos(long pos) {
-		this.io.setLongField(this, 25, pos);
-		return this;
-	}
-	@Field(26) 
-	public long last_pos() {
-		return this.io.getLongField(this, 26);
-	}
-	@Field(26) 
-	public AVCodecParserContext last_pos(long last_pos) {
-		this.io.setLongField(this, 26, last_pos);
-		return this;
-	}
-	@Field(27) 
-	public int duration() {
-		return this.io.getIntField(this, 27);
-	}
-	@Field(27) 
-	public AVCodecParserContext duration(int duration) {
-		this.io.setIntField(this, 27, duration);
-		return this;
-	}
-	/** C type : AVFieldOrder */
-	@Field(28) 
-	public IntValuedEnum<AVFieldOrder > field_order() {
-		return this.io.getEnumField(this, 28);
-	}
-	/** C type : AVFieldOrder */
-	@Field(28) 
-	public AVCodecParserContext field_order(IntValuedEnum<AVFieldOrder > field_order) {
-		this.io.setEnumField(this, 28, field_order);
-		return this;
-	}
-	/** C type : AVPictureStructure */
-	@Field(29) 
-	public IntValuedEnum<AVPictureStructure > picture_structure() {
-		return this.io.getEnumField(this, 29);
-	}
-	/** C type : AVPictureStructure */
-	@Field(29) 
-	public AVCodecParserContext picture_structure(IntValuedEnum<AVPictureStructure > picture_structure) {
-		this.io.setEnumField(this, 29, picture_structure);
-		return this;
-	}
-	@Field(30) 
-	public int output_picture_number() {
-		return this.io.getIntField(this, 30);
-	}
-	@Field(30) 
-	public AVCodecParserContext output_picture_number(int output_picture_number) {
-		this.io.setIntField(this, 30, output_picture_number);
-		return this;
-	}
-	public AVCodecParserContext() {
-		super();
-	}
-	public AVCodecParserContext(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avcodec/AVCodecParser.java src.bak/org/ffmpeg/avcodec/AVCodecParser.java
--- src/org/ffmpeg/avcodec/AVCodecParser.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVCodecParser.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,138 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.bridj.util.DefaultParameterizedType;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecContext;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1223</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVCodecParser extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/**
-	 * several codec IDs are permitted<br>
-	 * C type : int[5]
-	 */
-	@Array({5}) 
-	@Field(0) 
-	public Pointer<Integer > codec_ids() {
-		return this.io.getPointerField(this, 0);
-	}
-	@Field(1) 
-	public int priv_data_size() {
-		return this.io.getIntField(this, 1);
-	}
-	@Field(1) 
-	public AVCodecParser priv_data_size(int priv_data_size) {
-		this.io.setIntField(this, 1, priv_data_size);
-		return this;
-	}
-	/** C type : parser_init_callback* */
-	@Field(2) 
-	public Pointer<AVCodecParser.parser_init_callback > parser_init() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : parser_init_callback* */
-	@Field(2) 
-	public AVCodecParser parser_init(Pointer<AVCodecParser.parser_init_callback > parser_init) {
-		this.io.setPointerField(this, 2, parser_init);
-		return this;
-	}
-	/** C type : parser_parse_callback* */
-	@Field(3) 
-	public Pointer<AVCodecParser.parser_parse_callback > parser_parse() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : parser_parse_callback* */
-	@Field(3) 
-	public AVCodecParser parser_parse(Pointer<AVCodecParser.parser_parse_callback > parser_parse) {
-		this.io.setPointerField(this, 3, parser_parse);
-		return this;
-	}
-	/** C type : parser_close_callback* */
-	@Field(4) 
-	public Pointer<AVCodecParser.parser_close_callback > parser_close() {
-		return this.io.getPointerField(this, 4);
-	}
-	/** C type : parser_close_callback* */
-	@Field(4) 
-	public AVCodecParser parser_close(Pointer<AVCodecParser.parser_close_callback > parser_close) {
-		this.io.setPointerField(this, 4, parser_close);
-		return this;
-	}
-	/** C type : split_callback* */
-	@Field(5) 
-	public Pointer<AVCodecParser.split_callback > split() {
-		return this.io.getPointerField(this, 5);
-	}
-	/** C type : split_callback* */
-	@Field(5) 
-	public AVCodecParser split(Pointer<AVCodecParser.split_callback > split) {
-		this.io.setPointerField(this, 5, split);
-		return this;
-	}
-	/** C type : AVCodecParser* */
-	@Field(6) 
-	public Pointer<AVCodecParser > next() {
-		return this.io.getPointerField(this, 6);
-	}
-	/** C type : AVCodecParser* */
-	@Field(6) 
-	public AVCodecParser next(Pointer<AVCodecParser > next) {
-		this.io.setPointerField(this, 6, next);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1219</i> */
-	public static abstract class parser_init_callback extends Callback<parser_init_callback > {
-		public int apply(Pointer<AVCodecParserContext > s) {
-			return apply(Pointer.getPeer(s));
-		}
-		public int apply(@Ptr long s) {
-			return apply(Pointer.pointerToAddress(s, AVCodecParserContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1220</i> */
-	public static abstract class parser_parse_callback extends Callback<parser_parse_callback > {
-		public int apply(Pointer<AVCodecParserContext > s, Pointer<AVCodecContext > avctx, Pointer<Pointer<Byte > > poutbuf, Pointer<Integer > poutbuf_size, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(s), Pointer.getPeer(avctx), Pointer.getPeer(poutbuf), Pointer.getPeer(poutbuf_size), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long s, @Ptr long avctx, @Ptr long poutbuf, @Ptr long poutbuf_size, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(s, AVCodecParserContext.class), Pointer.pointerToAddress(avctx, AVCodecContext.class), Pointer.pointerToAddress(poutbuf, DefaultParameterizedType.paramType(Pointer.class, Byte.class)), Pointer.pointerToAddress(poutbuf_size, Integer.class), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1221</i> */
-	public static abstract class parser_close_callback extends Callback<parser_close_callback > {
-		public void apply(Pointer<AVCodecParserContext > s) {
-			apply(Pointer.getPeer(s));
-		}
-		public void apply(@Ptr long s) {
-			apply(Pointer.pointerToAddress(s, AVCodecParserContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1222</i> */
-	public static abstract class split_callback extends Callback<split_callback > {
-		public int apply(Pointer<AVCodecContext > avctx, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(avctx), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long avctx, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(avctx, AVCodecContext.class), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	public AVCodecParser() {
-		super();
-	}
-	public AVCodecParser(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avcodec/AVPacket.java src.bak/org/ffmpeg/avcodec/AVPacket.java
--- src/org/ffmpeg/avcodec/AVPacket.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVPacket.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,140 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:872</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVPacket extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : void* */
-	@Field(0) 
-	public Pointer<? > buf() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : void* */
-	@Field(0) 
-	public AVPacket buf(Pointer<? > buf) {
-		this.io.setPointerField(this, 0, buf);
-		return this;
-	}
-	@Field(1) 
-	public long pts() {
-		return this.io.getLongField(this, 1);
-	}
-	@Field(1) 
-	public AVPacket pts(long pts) {
-		this.io.setLongField(this, 1, pts);
-		return this;
-	}
-	@Field(2) 
-	public long dts() {
-		return this.io.getLongField(this, 2);
-	}
-	@Field(2) 
-	public AVPacket dts(long dts) {
-		this.io.setLongField(this, 2, dts);
-		return this;
-	}
-	/** C type : uint8_t* */
-	@Field(3) 
-	public Pointer<Byte > data() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : uint8_t* */
-	@Field(3) 
-	public AVPacket data(Pointer<Byte > data) {
-		this.io.setPointerField(this, 3, data);
-		return this;
-	}
-	@Field(4) 
-	public int size() {
-		return this.io.getIntField(this, 4);
-	}
-	@Field(4) 
-	public AVPacket size(int size) {
-		this.io.setIntField(this, 4, size);
-		return this;
-	}
-	@Field(5) 
-	public int stream_index() {
-		return this.io.getIntField(this, 5);
-	}
-	@Field(5) 
-	public AVPacket stream_index(int stream_index) {
-		this.io.setIntField(this, 5, stream_index);
-		return this;
-	}
-	@Field(6) 
-	public int flags() {
-		return this.io.getIntField(this, 6);
-	}
-	@Field(6) 
-	public AVPacket flags(int flags) {
-		this.io.setIntField(this, 6, flags);
-		return this;
-	}
-	/** C type : void* */
-	@Field(7) 
-	public Pointer<? > side_data() {
-		return this.io.getPointerField(this, 7);
-	}
-	/** C type : void* */
-	@Field(7) 
-	public AVPacket side_data(Pointer<? > side_data) {
-		this.io.setPointerField(this, 7, side_data);
-		return this;
-	}
-	@Field(8) 
-	public int side_data_elems() {
-		return this.io.getIntField(this, 8);
-	}
-	@Field(8) 
-	public AVPacket side_data_elems(int side_data_elems) {
-		this.io.setIntField(this, 8, side_data_elems);
-		return this;
-	}
-	@Field(9) 
-	public int duration() {
-		return this.io.getIntField(this, 9);
-	}
-	@Field(9) 
-	public AVPacket duration(int duration) {
-		this.io.setIntField(this, 9, duration);
-		return this;
-	}
-	/** < byte position in stream, -1 if unknown */
-	@Field(10) 
-	public long pos() {
-		return this.io.getLongField(this, 10);
-	}
-	/** < byte position in stream, -1 if unknown */
-	@Field(10) 
-	public AVPacket pos(long pos) {
-		this.io.setLongField(this, 10, pos);
-		return this;
-	}
-	@Field(11) 
-	public long convergence_duration() {
-		return this.io.getLongField(this, 11);
-	}
-	@Field(11) 
-	public AVPacket convergence_duration(long convergence_duration) {
-		this.io.setLongField(this, 11, convergence_duration);
-		return this;
-	}
-	public AVPacket() {
-		super();
-	}
-	public AVPacket(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avcodec/AVPicture.java src.bak/org/ffmpeg/avcodec/AVPicture.java
--- src/org/ffmpeg/avcodec/AVPicture.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVPicture.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:1140</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVPicture extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/**
-	 * < pointers to the image data planes<br>
-	 * C type : uint8_t*[8]
-	 */
-	@Array({8}) 
-	@Field(0) 
-	public Pointer<Pointer<Byte > > data() {
-		return this.io.getPointerField(this, 0);
-	}
-	/**
-	 * < number of bytes per line<br>
-	 * C type : int[8]
-	 */
-	@Array({8}) 
-	@Field(1) 
-	public Pointer<Integer > linesize() {
-		return this.io.getPointerField(this, 1);
-	}
-	public AVPicture() {
-		super();
-	}
-	public AVPicture(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avcodec/AVProfile.java src.bak/org/ffmpeg/avcodec/AVProfile.java
--- src/org/ffmpeg/avcodec/AVProfile.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avcodec/AVProfile.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,50 +0,0 @@
-package org.ffmpeg.avcodec;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/../libavcodec/avcodec.h:857</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avcodec") 
-public class AVProfile extends StructObject {
-	static {
-		BridJ.register();
-	}
-	@Field(0) 
-	public int profile() {
-		return this.io.getIntField(this, 0);
-	}
-	@Field(0) 
-	public AVProfile profile(int profile) {
-		this.io.setIntField(this, 0, profile);
-		return this;
-	}
-	/**
-	 * < short name for the profile<br>
-	 * C type : const char*
-	 */
-	@Field(1) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 1);
-	}
-	/**
-	 * < short name for the profile<br>
-	 * C type : const char*
-	 */
-	@Field(1) 
-	public AVProfile name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 1, name);
-		return this;
-	}
-	public AVProfile() {
-		super();
-	}
-	public AVProfile(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVFormatContext.java src.bak/org/ffmpeg/avformat/AVFormatContext.java
--- src/org/ffmpeg/avformat/AVFormatContext.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVFormatContext.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,599 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avcodec.AVCodec;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avformat.AvformatLibrary.AVDurationEstimationMethod;
-import org.ffmpeg.avutil.AVClass;
-import org.ffmpeg.avutil.AVDictionary;
-import org.ffmpeg.avutil.AVRational;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:240</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVFormatContext extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const AVClass* */
-	@Field(0) 
-	public Pointer<AVClass > av_class() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const AVClass* */
-	@Field(0) 
-	public AVFormatContext av_class(Pointer<AVClass > av_class) {
-		this.io.setPointerField(this, 0, av_class);
-		return this;
-	}
-	/** C type : AVInputFormat* */
-	@Field(1) 
-	public Pointer<AVInputFormat > iformat() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : AVInputFormat* */
-	@Field(1) 
-	public AVFormatContext iformat(Pointer<AVInputFormat > iformat) {
-		this.io.setPointerField(this, 1, iformat);
-		return this;
-	}
-	/** C type : AVOutputFormat* */
-	@Field(2) 
-	public Pointer<AVOutputFormat > oformat() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : AVOutputFormat* */
-	@Field(2) 
-	public AVFormatContext oformat(Pointer<AVOutputFormat > oformat) {
-		this.io.setPointerField(this, 2, oformat);
-		return this;
-	}
-	/** C type : void* */
-	@Field(3) 
-	public Pointer<? > priv_data() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : void* */
-	@Field(3) 
-	public AVFormatContext priv_data(Pointer<? > priv_data) {
-		this.io.setPointerField(this, 3, priv_data);
-		return this;
-	}
-	/** C type : AVIOContext* */
-	@Field(4) 
-	public Pointer<AVIOContext > pb() {
-		return this.io.getPointerField(this, 4);
-	}
-	/** C type : AVIOContext* */
-	@Field(4) 
-	public AVFormatContext pb(Pointer<AVIOContext > pb) {
-		this.io.setPointerField(this, 4, pb);
-		return this;
-	}
-	/** < Format-specific flags, see AVFMTCTX_xx */
-	@Field(5) 
-	public int ctx_flags() {
-		return this.io.getIntField(this, 5);
-	}
-	/** < Format-specific flags, see AVFMTCTX_xx */
-	@Field(5) 
-	public AVFormatContext ctx_flags(int ctx_flags) {
-		this.io.setIntField(this, 5, ctx_flags);
-		return this;
-	}
-	@Field(6) 
-	public int nb_streams() {
-		return this.io.getIntField(this, 6);
-	}
-	@Field(6) 
-	public AVFormatContext nb_streams(int nb_streams) {
-		this.io.setIntField(this, 6, nb_streams);
-		return this;
-	}
-	/** C type : AVStream** */
-	@Field(7) 
-	public Pointer<Pointer<AVStream > > streams() {
-		return this.io.getPointerField(this, 7);
-	}
-	/** C type : AVStream** */
-	@Field(7) 
-	public AVFormatContext streams(Pointer<Pointer<AVStream > > streams) {
-		this.io.setPointerField(this, 7, streams);
-		return this;
-	}
-	/**
-	 * < input or output filename<br>
-	 * C type : char[1024]
-	 */
-	@Array({1024}) 
-	@Field(8) 
-	public Pointer<Byte > filename() {
-		return this.io.getPointerField(this, 8);
-	}
-	@Field(9) 
-	public long start_time() {
-		return this.io.getLongField(this, 9);
-	}
-	@Field(9) 
-	public AVFormatContext start_time(long start_time) {
-		this.io.setLongField(this, 9, start_time);
-		return this;
-	}
-	@Field(10) 
-	public long duration() {
-		return this.io.getLongField(this, 10);
-	}
-	@Field(10) 
-	public AVFormatContext duration(long duration) {
-		this.io.setLongField(this, 10, duration);
-		return this;
-	}
-	@Field(11) 
-	public int bit_rate() {
-		return this.io.getIntField(this, 11);
-	}
-	@Field(11) 
-	public AVFormatContext bit_rate(int bit_rate) {
-		this.io.setIntField(this, 11, bit_rate);
-		return this;
-	}
-	@Field(12) 
-	public int packet_size() {
-		return this.io.getIntField(this, 12);
-	}
-	@Field(12) 
-	public AVFormatContext packet_size(int packet_size) {
-		this.io.setIntField(this, 12, packet_size);
-		return this;
-	}
-	@Field(13) 
-	public int max_delay() {
-		return this.io.getIntField(this, 13);
-	}
-	@Field(13) 
-	public AVFormatContext max_delay(int max_delay) {
-		this.io.setIntField(this, 13, max_delay);
-		return this;
-	}
-	@Field(14) 
-	public int flags() {
-		return this.io.getIntField(this, 14);
-	}
-	@Field(14) 
-	public AVFormatContext flags(int flags) {
-		this.io.setIntField(this, 14, flags);
-		return this;
-	}
-	@Field(15) 
-	public int probesize() {
-		return this.io.getIntField(this, 15);
-	}
-	@Field(15) 
-	public AVFormatContext probesize(int probesize) {
-		this.io.setIntField(this, 15, probesize);
-		return this;
-	}
-	@Field(16) 
-	public int max_analyze_duration() {
-		return this.io.getIntField(this, 16);
-	}
-	@Field(16) 
-	public AVFormatContext max_analyze_duration(int max_analyze_duration) {
-		this.io.setIntField(this, 16, max_analyze_duration);
-		return this;
-	}
-	/** C type : const uint8_t* */
-	@Field(17) 
-	public Pointer<Byte > key() {
-		return this.io.getPointerField(this, 17);
-	}
-	/** C type : const uint8_t* */
-	@Field(17) 
-	public AVFormatContext key(Pointer<Byte > key) {
-		this.io.setPointerField(this, 17, key);
-		return this;
-	}
-	@Field(18) 
-	public int keylen() {
-		return this.io.getIntField(this, 18);
-	}
-	@Field(18) 
-	public AVFormatContext keylen(int keylen) {
-		this.io.setIntField(this, 18, keylen);
-		return this;
-	}
-	@Field(19) 
-	public int nb_programs() {
-		return this.io.getIntField(this, 19);
-	}
-	@Field(19) 
-	public AVFormatContext nb_programs(int nb_programs) {
-		this.io.setIntField(this, 19, nb_programs);
-		return this;
-	}
-	/** Conversion Error : AVProgram** (failed to convert type to Java (undefined type)) */
-	/** C type : AVCodecID */
-	@Field(21) 
-	public IntValuedEnum<AVCodecID > video_codec_id() {
-		return this.io.getEnumField(this, 21);
-	}
-	/** C type : AVCodecID */
-	@Field(21) 
-	public AVFormatContext video_codec_id(IntValuedEnum<AVCodecID > video_codec_id) {
-		this.io.setEnumField(this, 21, video_codec_id);
-		return this;
-	}
-	/** C type : AVCodecID */
-	@Field(22) 
-	public IntValuedEnum<AVCodecID > audio_codec_id() {
-		return this.io.getEnumField(this, 22);
-	}
-	/** C type : AVCodecID */
-	@Field(22) 
-	public AVFormatContext audio_codec_id(IntValuedEnum<AVCodecID > audio_codec_id) {
-		this.io.setEnumField(this, 22, audio_codec_id);
-		return this;
-	}
-	/** C type : AVCodecID */
-	@Field(23) 
-	public IntValuedEnum<AVCodecID > subtitle_codec_id() {
-		return this.io.getEnumField(this, 23);
-	}
-	/** C type : AVCodecID */
-	@Field(23) 
-	public AVFormatContext subtitle_codec_id(IntValuedEnum<AVCodecID > subtitle_codec_id) {
-		this.io.setEnumField(this, 23, subtitle_codec_id);
-		return this;
-	}
-	@Field(24) 
-	public int max_index_size() {
-		return this.io.getIntField(this, 24);
-	}
-	@Field(24) 
-	public AVFormatContext max_index_size(int max_index_size) {
-		this.io.setIntField(this, 24, max_index_size);
-		return this;
-	}
-	@Field(25) 
-	public int max_picture_buffer() {
-		return this.io.getIntField(this, 25);
-	}
-	@Field(25) 
-	public AVFormatContext max_picture_buffer(int max_picture_buffer) {
-		this.io.setIntField(this, 25, max_picture_buffer);
-		return this;
-	}
-	@Field(26) 
-	public int nb_chapters() {
-		return this.io.getIntField(this, 26);
-	}
-	@Field(26) 
-	public AVFormatContext nb_chapters(int nb_chapters) {
-		this.io.setIntField(this, 26, nb_chapters);
-		return this;
-	}
-	/** Conversion Error : AVChapter** (failed to convert type to Java (undefined type)) */
-	/** C type : AVDictionary* */
-	@Field(28) 
-	public Pointer<AVDictionary > metadata() {
-		return this.io.getPointerField(this, 28);
-	}
-	/** C type : AVDictionary* */
-	@Field(28) 
-	public AVFormatContext metadata(Pointer<AVDictionary > metadata) {
-		this.io.setPointerField(this, 28, metadata);
-		return this;
-	}
-	@Field(29) 
-	public long start_time_realtime() {
-		return this.io.getLongField(this, 29);
-	}
-	@Field(29) 
-	public AVFormatContext start_time_realtime(long start_time_realtime) {
-		this.io.setLongField(this, 29, start_time_realtime);
-		return this;
-	}
-	@Field(30) 
-	public int fps_probe_size() {
-		return this.io.getIntField(this, 30);
-	}
-	@Field(30) 
-	public AVFormatContext fps_probe_size(int fps_probe_size) {
-		this.io.setIntField(this, 30, fps_probe_size);
-		return this;
-	}
-	@Field(31) 
-	public int error_recognition() {
-		return this.io.getIntField(this, 31);
-	}
-	@Field(31) 
-	public AVFormatContext error_recognition(int error_recognition) {
-		this.io.setIntField(this, 31, error_recognition);
-		return this;
-	}
-	/** Conversion Error : AVIOInterruptCB (failed to convert type to Java (undefined type)) */
-	@Field(33) 
-	public int debug() {
-		return this.io.getIntField(this, 33);
-	}
-	@Field(33) 
-	public AVFormatContext debug(int debug) {
-		this.io.setIntField(this, 33, debug);
-		return this;
-	}
-	@Field(34) 
-	public int ts_id() {
-		return this.io.getIntField(this, 34);
-	}
-	@Field(34) 
-	public AVFormatContext ts_id(int ts_id) {
-		this.io.setIntField(this, 34, ts_id);
-		return this;
-	}
-	@Field(35) 
-	public int audio_preload() {
-		return this.io.getIntField(this, 35);
-	}
-	@Field(35) 
-	public AVFormatContext audio_preload(int audio_preload) {
-		this.io.setIntField(this, 35, audio_preload);
-		return this;
-	}
-	@Field(36) 
-	public int max_chunk_duration() {
-		return this.io.getIntField(this, 36);
-	}
-	@Field(36) 
-	public AVFormatContext max_chunk_duration(int max_chunk_duration) {
-		this.io.setIntField(this, 36, max_chunk_duration);
-		return this;
-	}
-	@Field(37) 
-	public int max_chunk_size() {
-		return this.io.getIntField(this, 37);
-	}
-	@Field(37) 
-	public AVFormatContext max_chunk_size(int max_chunk_size) {
-		this.io.setIntField(this, 37, max_chunk_size);
-		return this;
-	}
-	@Field(38) 
-	public int use_wallclock_as_timestamps() {
-		return this.io.getIntField(this, 38);
-	}
-	@Field(38) 
-	public AVFormatContext use_wallclock_as_timestamps(int use_wallclock_as_timestamps) {
-		this.io.setIntField(this, 38, use_wallclock_as_timestamps);
-		return this;
-	}
-	@Field(39) 
-	public int avoid_negative_ts() {
-		return this.io.getIntField(this, 39);
-	}
-	@Field(39) 
-	public AVFormatContext avoid_negative_ts(int avoid_negative_ts) {
-		this.io.setIntField(this, 39, avoid_negative_ts);
-		return this;
-	}
-	@Field(40) 
-	public int avio_flags() {
-		return this.io.getIntField(this, 40);
-	}
-	@Field(40) 
-	public AVFormatContext avio_flags(int avio_flags) {
-		this.io.setIntField(this, 40, avio_flags);
-		return this;
-	}
-	/** C type : AVDurationEstimationMethod */
-	@Field(41) 
-	public IntValuedEnum<AVDurationEstimationMethod > duration_estimation_method() {
-		return this.io.getEnumField(this, 41);
-	}
-	/** C type : AVDurationEstimationMethod */
-	@Field(41) 
-	public AVFormatContext duration_estimation_method(IntValuedEnum<AVDurationEstimationMethod > duration_estimation_method) {
-		this.io.setEnumField(this, 41, duration_estimation_method);
-		return this;
-	}
-	@Field(42) 
-	public int skip_initial_bytes() {
-		return this.io.getIntField(this, 42);
-	}
-	@Field(42) 
-	public AVFormatContext skip_initial_bytes(int skip_initial_bytes) {
-		this.io.setIntField(this, 42, skip_initial_bytes);
-		return this;
-	}
-	@Field(43) 
-	public int correct_ts_overflow() {
-		return this.io.getIntField(this, 43);
-	}
-	@Field(43) 
-	public AVFormatContext correct_ts_overflow(int correct_ts_overflow) {
-		this.io.setIntField(this, 43, correct_ts_overflow);
-		return this;
-	}
-	@Field(44) 
-	public int seek2any() {
-		return this.io.getIntField(this, 44);
-	}
-	@Field(44) 
-	public AVFormatContext seek2any(int seek2any) {
-		this.io.setIntField(this, 44, seek2any);
-		return this;
-	}
-	@Field(45) 
-	public int flush_packets() {
-		return this.io.getIntField(this, 45);
-	}
-	@Field(45) 
-	public AVFormatContext flush_packets(int flush_packets) {
-		this.io.setIntField(this, 45, flush_packets);
-		return this;
-	}
-	@Field(46) 
-	public int probe_score() {
-		return this.io.getIntField(this, 46);
-	}
-	@Field(46) 
-	public AVFormatContext probe_score(int probe_score) {
-		this.io.setIntField(this, 46, probe_score);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(47) 
-	public Pointer<AVPacketList > packet_buffer() {
-		return this.io.getPointerField(this, 47);
-	}
-	/** C type : AVPacketList* */
-	@Field(47) 
-	public AVFormatContext packet_buffer(Pointer<AVPacketList > packet_buffer) {
-		this.io.setPointerField(this, 47, packet_buffer);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(48) 
-	public Pointer<AVPacketList > packet_buffer_end() {
-		return this.io.getPointerField(this, 48);
-	}
-	/** C type : AVPacketList* */
-	@Field(48) 
-	public AVFormatContext packet_buffer_end(Pointer<AVPacketList > packet_buffer_end) {
-		this.io.setPointerField(this, 48, packet_buffer_end);
-		return this;
-	}
-	/** < offset of the first packet */
-	@Field(49) 
-	public long data_offset() {
-		return this.io.getLongField(this, 49);
-	}
-	/** < offset of the first packet */
-	@Field(49) 
-	public AVFormatContext data_offset(long data_offset) {
-		this.io.setLongField(this, 49, data_offset);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(50) 
-	public Pointer<AVPacketList > raw_packet_buffer() {
-		return this.io.getPointerField(this, 50);
-	}
-	/** C type : AVPacketList* */
-	@Field(50) 
-	public AVFormatContext raw_packet_buffer(Pointer<AVPacketList > raw_packet_buffer) {
-		this.io.setPointerField(this, 50, raw_packet_buffer);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(51) 
-	public Pointer<AVPacketList > raw_packet_buffer_end() {
-		return this.io.getPointerField(this, 51);
-	}
-	/** C type : AVPacketList* */
-	@Field(51) 
-	public AVFormatContext raw_packet_buffer_end(Pointer<AVPacketList > raw_packet_buffer_end) {
-		this.io.setPointerField(this, 51, raw_packet_buffer_end);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(52) 
-	public Pointer<AVPacketList > parse_queue() {
-		return this.io.getPointerField(this, 52);
-	}
-	/** C type : AVPacketList* */
-	@Field(52) 
-	public AVFormatContext parse_queue(Pointer<AVPacketList > parse_queue) {
-		this.io.setPointerField(this, 52, parse_queue);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(53) 
-	public Pointer<AVPacketList > parse_queue_end() {
-		return this.io.getPointerField(this, 53);
-	}
-	/** C type : AVPacketList* */
-	@Field(53) 
-	public AVFormatContext parse_queue_end(Pointer<AVPacketList > parse_queue_end) {
-		this.io.setPointerField(this, 53, parse_queue_end);
-		return this;
-	}
-	@Field(54) 
-	public int raw_packet_buffer_remaining_size() {
-		return this.io.getIntField(this, 54);
-	}
-	@Field(54) 
-	public AVFormatContext raw_packet_buffer_remaining_size(int raw_packet_buffer_remaining_size) {
-		this.io.setIntField(this, 54, raw_packet_buffer_remaining_size);
-		return this;
-	}
-	@Field(55) 
-	public long offset() {
-		return this.io.getLongField(this, 55);
-	}
-	@Field(55) 
-	public AVFormatContext offset(long offset) {
-		this.io.setLongField(this, 55, offset);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(56) 
-	public AVRational offset_timebase() {
-		return this.io.getNativeObjectField(this, 56);
-	}
-	/** C type : AVRational */
-	@Field(56) 
-	public AVFormatContext offset_timebase(AVRational offset_timebase) {
-		this.io.setNativeObjectField(this, 56, offset_timebase);
-		return this;
-	}
-	@Field(57) 
-	public int io_repositioned() {
-		return this.io.getIntField(this, 57);
-	}
-	@Field(57) 
-	public AVFormatContext io_repositioned(int io_repositioned) {
-		this.io.setIntField(this, 57, io_repositioned);
-		return this;
-	}
-	/** C type : AVCodec* */
-	@Field(58) 
-	public Pointer<AVCodec > video_codec() {
-		return this.io.getPointerField(this, 58);
-	}
-	/** C type : AVCodec* */
-	@Field(58) 
-	public AVFormatContext video_codec(Pointer<AVCodec > video_codec) {
-		this.io.setPointerField(this, 58, video_codec);
-		return this;
-	}
-	/** C type : AVCodec* */
-	@Field(59) 
-	public Pointer<AVCodec > audio_codec() {
-		return this.io.getPointerField(this, 59);
-	}
-	/** C type : AVCodec* */
-	@Field(59) 
-	public AVFormatContext audio_codec(Pointer<AVCodec > audio_codec) {
-		this.io.setPointerField(this, 59, audio_codec);
-		return this;
-	}
-	/** C type : AVCodec* */
-	@Field(60) 
-	public Pointer<AVCodec > subtitle_codec() {
-		return this.io.getPointerField(this, 60);
-	}
-	/** C type : AVCodec* */
-	@Field(60) 
-	public AVFormatContext subtitle_codec(Pointer<AVCodec > subtitle_codec) {
-		this.io.setPointerField(this, 60, subtitle_codec);
-		return this;
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AvformatLibrary.java src.bak/org/ffmpeg/avformat/AvformatLibrary.java
--- src/org/ffmpeg/avformat/AvformatLibrary.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AvformatLibrary.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,421 +0,0 @@
-package org.ffmpeg.avformat;
-import java.util.Collections;
-import java.util.Iterator;
-import org.bridj.BridJ;
-import org.bridj.CRuntime;
-import org.bridj.Callback;
-import org.bridj.FlagSet;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.bridj.ann.Runtime;
-import org.ffmpeg.avcodec.AVCodec;
-import org.ffmpeg.avcodec.AVPacket;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avutil.AVDictionary;
-import org.ffmpeg.avutil.AvutilLibrary.AVMediaType;
-/**
- * Wrapper for library <b>avformat</b><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-@Runtime(CRuntime.class) 
-public class AvformatLibrary {
-	static {
-		BridJ.register();
-	}
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:86</i>
-	 */
-	public enum AVStreamParseType implements IntValuedEnum<AVStreamParseType > {
-		AVSTREAM_PARSE_NONE(0),
-		/** < full parsing and repack */
-		AVSTREAM_PARSE_FULL(1),
-		/** < Only parse headers, do not repack. */
-		AVSTREAM_PARSE_HEADERS(2),
-		/** < full parsing and interpolation of timestamps for frames not starting on a packet boundary */
-		AVSTREAM_PARSE_TIMESTAMPS(3),
-		/** < full parsing and repack of the first frame only, only implemented for H.264 currently */
-		AVSTREAM_PARSE_FULL_ONCE(4),
-		/**
-		 * < full parsing and repack with timestamp and position generation by parser for raw<br>
-		 * this assumes that each packet in the file contains no demuxer level headers and<br>
-		 * just codec level data, otherwise position generation would fail
-		 */
-		AVSTREAM_PARSE_FULL_RAW(((0) | (('R') << 8) | (('A') << 16) | ('W' << 24)));
-		AVStreamParseType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVStreamParseType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVStreamParseType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:169</i>
-	 */
-	public enum AVDurationEstimationMethod implements IntValuedEnum<AVDurationEstimationMethod > {
-		/** < Duration accurately estimated from PTSes */
-		AVFMT_DURATION_FROM_PTS(0),
-		/** < Duration estimated from a stream with a known duration */
-		AVFMT_DURATION_FROM_STREAM(1),
-		/** < Duration estimated from bitrate (less accurate) */
-		AVFMT_DURATION_FROM_BITRATE(2);
-		AVDurationEstimationMethod(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVDurationEstimationMethod > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVDurationEstimationMethod > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_NOBUFFER = (int)0x0040;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h</i> */
-	public static final int AVIO_FLAG_DIRECT = (int)0x8000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_MP4A_LATM = (int)0x8000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_DISCARD_CORRUPT = (int)0x0100;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/version.h</i> */
-	public static final int LIBAVFORMAT_VERSION_MICRO = (int)104;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h</i> */
-	public static final int AVIO_FLAG_READ = (int)1;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_NOPARSE = (int)0x0020;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_PRIV_OPT = (int)0x20000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_NOFILLIN = (int)0x0010;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int FF_FDEBUG_TS = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h</i> */
-	public static final int AVIO_FLAG_READ_WRITE = (int)(1 | 2);
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_GENPTS = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVSEEK_FLAG_FRAME = (int)8;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_FLUSH_PACKETS = (int)0x0200;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h</i> */
-	public static final int AVIO_FLAG_WRITE = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/version.h</i> */
-	public static final int LIBAVFORMAT_VERSION_MINOR = (int)19;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVSEEK_FLAG_ANY = (int)4;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int RAW_PACKET_BUFFER_SIZE = (int)2500000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int MAX_STD_TIMEBASES = (int)(60 * 12 + 6);
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_IGNIDX = (int)0x0002;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h</i> */
-	public static final int AVIO_FLAG_NONBLOCK = (int)8;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_SORT_DTS = (int)0x10000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/version.h</i> */
-	public static final int LIBAVFORMAT_VERSION_MAJOR = (int)55;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVSEEK_FLAG_BYTE = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_CUSTOM_IO = (int)0x0080;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVSEEK_FLAG_BACKWARD = (int)1;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_IGNDTS = (int)0x0008;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int MAX_PROBE_PACKETS = (int)2500;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_NONBLOCK = (int)0x0004;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVFMT_FLAG_KEEP_SIDE_DATA = (int)0x40000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int AVINDEX_KEYFRAME = (int)0x0001;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h</i> */
-	public static final int MAX_REORDER_DELAY = (int)16;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:48</i> */
-	public static abstract class avio_alloc_context_read_packet_callback extends Callback<avio_alloc_context_read_packet_callback > {
-		public int apply(Pointer<? > opaque, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(opaque), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long opaque, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(opaque), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:49</i> */
-	public static abstract class avio_alloc_context_write_packet_callback extends Callback<avio_alloc_context_write_packet_callback > {
-		public int apply(Pointer<? > opaque, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(opaque), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long opaque, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(opaque), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:50</i> */
-	public static abstract class avio_alloc_context_seek_callback extends Callback<avio_alloc_context_seek_callback > {
-		public long apply(Pointer<? > opaque, long offset, int whence) {
-			return apply(Pointer.getPeer(opaque), offset, whence);
-		}
-		public long apply(@Ptr long opaque, long offset, int whence) {
-			return apply(Pointer.pointerToAddress(opaque), offset, whence);
-		}
-	};
-	/**
-	 * Original signature : <code>AVIOContext* avio_alloc_context(unsigned char*, int, int, void*, avio_alloc_context_read_packet_callback*, avio_alloc_context_write_packet_callback*, avio_alloc_context_seek_callback*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:39</i>
-	 */
-	public Pointer<AVIOContext > avio_alloc_context(Pointer<Byte > buffer, int buffer_size, int write_flag, Pointer<? > opaque, Pointer<AvformatLibrary.avio_alloc_context_read_packet_callback > read_packet, Pointer<AvformatLibrary.avio_alloc_context_write_packet_callback > write_packet, Pointer<AvformatLibrary.avio_alloc_context_seek_callback > seek) {
-		return Pointer.pointerToAddress(avio_alloc_context(Pointer.getPeer(buffer), buffer_size, write_flag, Pointer.getPeer(opaque), Pointer.getPeer(read_packet), Pointer.getPeer(write_packet), Pointer.getPeer(seek)), AVIOContext.class);
-	}
-	@Ptr 
-	public native long avio_alloc_context(@Ptr long buffer, int buffer_size, int write_flag, @Ptr long opaque, @Ptr long read_packet, @Ptr long write_packet, @Ptr long seek);
-	/**
-	 * Original signature : <code>void avio_flush(AVIOContext*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:41</i>
-	 */
-	public void avio_flush(Pointer<AVIOContext > s) {
-		avio_flush(Pointer.getPeer(s));
-	}
-	public native void avio_flush(@Ptr long s);
-	/**
-	 * Original signature : <code>int avio_open(AVIOContext**, const char*, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:43</i>
-	 */
-	public int avio_open(Pointer<Pointer<AVIOContext > > s, Pointer<Byte > url, int flags) {
-		return avio_open(Pointer.getPeer(s), Pointer.getPeer(url), flags);
-	}
-	public native int avio_open(@Ptr long s, @Ptr long url, int flags);
-	/**
-	 * Original signature : <code>int avio_open2(AVIOContext**, const char*, int, const AVIOInterruptCB*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:45</i>
-	 */
-	public int avio_open2(Pointer<Pointer<AVIOContext > > s, Pointer<Byte > url, int flags, Pointer<AvformatLibrary.AVIOInterruptCB > int_cb, Pointer<Pointer<AVDictionary > > options) {
-		return avio_open2(Pointer.getPeer(s), Pointer.getPeer(url), flags, Pointer.getPeer(int_cb), Pointer.getPeer(options));
-	}
-	public native int avio_open2(@Ptr long s, @Ptr long url, int flags, @Ptr long int_cb, @Ptr long options);
-	/**
-	 * Original signature : <code>int avio_close(AVIOContext*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:47</i>
-	 */
-	public int avio_close(Pointer<AVIOContext > s) {
-		return avio_close(Pointer.getPeer(s));
-	}
-	public native int avio_close(@Ptr long s);
-	int avio_close(@Ptr long s);
-	/**
-	 * Original signature : <code>void av_register_all()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:246</i>
-	 */
-	public native void av_register_all();
-	/**
-	 * Original signature : <code>void av_register_all()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:246</i>
-	 */
-	void av_register_all();
-	/**
-	 * Original signature : <code>int avformat_version()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:248</i>
-	 */
-	public native int avformat_version();
-	/**
-	 * Original signature : <code>int avformat_version()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:248</i>
-	 */
-	int avformat_version();
-	/**
-	 * Original signature : <code>AVFormatContext* avformat_alloc_context()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:250</i>
-	 */
-	public Pointer<AVFormatContext > alloc_context() {
-		return Pointer.pointerToAddress(avformat_alloc_context(), AVFormatContext.class);
-	}
-	@Ptr 
-	public native long avformat_alloc_context();
-	/**
-	 * Original signature : <code>void avformat_free_context(AVFormatContext*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:252</i>
-	 */
-	public void avformat_free_context(Pointer<AVFormatContext > s) {
-		avformat_free_context(Pointer.getPeer(s));
-	}
-	public native void avformat_free_context(@Ptr long s);
-	/**
-	 * Original signature : <code>AVStream* avformat_new_stream(AVFormatContext*, const AVCodec*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:254</i>
-	 */
-	public Pointer<AVStream > avformat_new_stream(Pointer<AVFormatContext > s, Pointer<AVCodec > c) {
-		return Pointer.pointerToAddress(avformat_new_stream(Pointer.getPeer(s), Pointer.getPeer(c)), AVStream.class);
-	}
-	@Ptr 
-	public native long avformat_new_stream(@Ptr long s, @Ptr long c);
-	/**
-	 * Original signature : <code>int avformat_alloc_output_context2(AVFormatContext**, AVOutputFormat*, const char*, const char*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:256</i>
-	 */
-	public int avformat_alloc_output_context2(Pointer<Pointer<AVFormatContext > > ctx, Pointer<AVOutputFormat > oformat, Pointer<Byte > format_name, Pointer<Byte > filename) {
-		return avformat_alloc_output_context2(Pointer.getPeer(ctx), Pointer.getPeer(oformat), Pointer.getPeer(format_name), Pointer.getPeer(filename));
-	}
-	public native int avformat_alloc_output_context2(@Ptr long ctx, @Ptr long oformat, @Ptr long format_name, @Ptr long filename);
-	/**
-	 * Original signature : <code>int avformat_open_input(AVFormatContext**, const char*, AVInputFormat*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:258</i>
-	 */
-	public int avformat_open_input(Pointer<Pointer<AVFormatContext > > ps, Pointer<Byte > filename, Pointer<AVInputFormat > fmt, Pointer<Pointer<AVDictionary > > options) {
-		return avformat_open_input(Pointer.getPeer(ps), Pointer.getPeer(filename), Pointer.getPeer(fmt), Pointer.getPeer(options));
-	}
-	public native int avformat_open_input(@Ptr long ps, @Ptr long filename, @Ptr long fmt, @Ptr long options);
-	/**
-	 * Original signature : <code>int av_read_frame(AVFormatContext*, AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:260</i>
-	 */
-	public int av_read_frame(Pointer<AVFormatContext > s, Pointer<AVPacket > pkt) {
-		return av_read_frame(Pointer.getPeer(s), Pointer.getPeer(pkt));
-	}
-	public native int av_read_frame(@Ptr long s, @Ptr long pkt);
-	/**
-	 * Original signature : <code>int av_seek_frame(AVFormatContext*, int, int64_t, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:262</i>
-	 */
-	public int av_seek_frame(Pointer<AVFormatContext > s, int stream_index, long timestamp, int flags) {
-		return av_seek_frame(Pointer.getPeer(s), stream_index, timestamp, flags);
-	}
-	public native int av_seek_frame(@Ptr long s, int stream_index, long timestamp, int flags);
-	/**
-	 * Original signature : <code>int avformat_seek_file(AVFormatContext*, int, int64_t, int64_t, int64_t, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:264</i>
-	 */
-	public int avformat_seek_file(Pointer<AVFormatContext > s, int stream_index, long min_ts, long ts, long max_ts, int flags) {
-		return avformat_seek_file(Pointer.getPeer(s), stream_index, min_ts, ts, max_ts, flags);
-	}
-	public native int avformat_seek_file(@Ptr long s, int stream_index, long min_ts, long ts, long max_ts, int flags);
-	/**
-	 * Original signature : <code>void avformat_close_input(AVFormatContext**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:266</i>
-	 */
-	public void avformat_close_input(Pointer<Pointer<AVFormatContext > > s) {
-		avformat_close_input(Pointer.getPeer(s));
-	}
-	public native void avformat_close_input(@Ptr long s);
-	/**
-	 * Original signature : <code>int avformat_write_header(AVFormatContext*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:268</i>
-	 */
-	public int avformat_write_header(Pointer<AVFormatContext > s, Pointer<Pointer<AVDictionary > > options) {
-		return avformat_write_header(Pointer.getPeer(s), Pointer.getPeer(options));
-	}
-	public native int avformat_write_header(@Ptr long s, @Ptr long options);
-	int avformat_write_header(@Ptr long s, @Ptr long options);
-	/**
-	 * Original signature : <code>int av_write_frame(AVFormatContext*, AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:270</i>
-	 */
-	public int av_write_frame(Pointer<AVFormatContext > s, Pointer<AVPacket > pkt) {
-		return av_write_frame(Pointer.getPeer(s), Pointer.getPeer(pkt));
-	}
-	public native int av_write_frame(@Ptr long s, @Ptr long pkt);
-	/**
-	 * Original signature : <code>int av_interleaved_write_frame(AVFormatContext*, AVPacket*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:272</i>
-	 */
-	public int av_interleaved_write_frame(Pointer<AVFormatContext > s, Pointer<AVPacket > pkt) {
-		return av_interleaved_write_frame(Pointer.getPeer(s), Pointer.getPeer(pkt));
-	}
-	public native int av_interleaved_write_frame(@Ptr long s, @Ptr long pkt);
-	/**
-	 * Original signature : <code>int av_write_trailer(AVFormatContext*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:274</i>
-	 */
-	public int av_write_trailer(Pointer<AVFormatContext > s) {
-		return av_write_trailer(Pointer.getPeer(s));
-	}
-	public native int av_write_trailer(@Ptr long s);
-	/**
-	 * Original signature : <code>AVOutputFormat* av_guess_format(const char*, const char*, const char*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:276</i>
-	 */
-	public Pointer<AVOutputFormat > av_guess_format(Pointer<Byte > short_name, Pointer<Byte > filename, Pointer<Byte > mime_type) {
-		return Pointer.pointerToAddress(av_guess_format(Pointer.getPeer(short_name), Pointer.getPeer(filename), Pointer.getPeer(mime_type)), AVOutputFormat.class);
-	}
-	@Ptr 
-	public native long av_guess_format(@Ptr long short_name, @Ptr long filename, @Ptr long mime_type);
-	/**
-	 * Original signature : <code>AVCodecID av_guess_codec(AVOutputFormat*, const char*, const char*, const char*, AVMediaType)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:278</i>
-	 */
-	public IntValuedEnum<AVCodecID > av_guess_codec(Pointer<AVOutputFormat > fmt, Pointer<Byte > short_name, Pointer<Byte > filename, Pointer<Byte > mime_type, IntValuedEnum<AVMediaType > type) {
-		return FlagSet.fromValue(av_guess_codec(Pointer.getPeer(fmt), Pointer.getPeer(short_name), Pointer.getPeer(filename), Pointer.getPeer(mime_type), (int)type.value()), AVCodecID.class);
-	}
-	public native int av_guess_codec(@Ptr long fmt, @Ptr long short_name, @Ptr long filename, @Ptr long mime_type, int type);
-	int av_guess_codec(@Ptr long fmt, @Ptr long short_name, @Ptr long filename, @Ptr long mime_type, int type);
-	/**
-	 * Original signature : <code>int av_find_best_stream(AVFormatContext*, AVMediaType, int, int, AVCodec**, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:280</i>
-	 */
-	public int av_find_best_stream(Pointer<AVFormatContext > ic, IntValuedEnum<AVMediaType > type, int wanted_stream_nb, int related_stream, Pointer<Pointer<AVCodec > > decoder_ret, int flags) {
-		return av_find_best_stream(Pointer.getPeer(ic), (int)type.value(), wanted_stream_nb, related_stream, Pointer.getPeer(decoder_ret), flags);
-	}
-	public native int av_find_best_stream(@Ptr long ic, int type, int wanted_stream_nb, int related_stream, @Ptr long decoder_ret, int flags);
-	int av_find_best_stream(@Ptr long ic, int type, int wanted_stream_nb, int related_stream, @Ptr long decoder_ret, int flags);
-	/**
-	 * Original signature : <code>char* av_get_media_type_string(AVMediaType)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:282</i>
-	 */
-	public Pointer<Byte > av_get_media_type_string(IntValuedEnum<AVMediaType > media_type) {
-		return Pointer.pointerToAddress(av_get_media_type_string((int)media_type.value()), Byte.class);
-	}
-	@Ptr 
-	public native long av_get_media_type_string(int media_type);
-	@Ptr 
-	long av_get_media_type_string(int media_type);
-	/**
-	 * Original signature : <code>int avformat_find_stream_info(AVFormatContext*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:284</i>
-	 */
-	public int avformat_find_stream_info(Pointer<AVFormatContext > ic, Pointer<Pointer<AVDictionary > > options) {
-		return avformat_find_stream_info(Pointer.getPeer(ic), Pointer.getPeer(options));
-	}
-	public native int avformat_find_stream_info(@Ptr long ic, @Ptr long options);
-	int avformat_find_stream_info(@Ptr long ic, @Ptr long options);
-	/**
-	 * Original signature : <code>void av_dump_format(AVFormatContext*, int, const char*, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:286</i>
-	 */
-	public void av_dump_format(Pointer<AVFormatContext > ic, int index, Pointer<Byte > url, int is_output) {
-		av_dump_format(Pointer.getPeer(ic), index, Pointer.getPeer(url), is_output);
-	}
-	public native void av_dump_format(@Ptr long ic, int index, @Ptr long url, int is_output);
-	void av_dump_format(@Ptr long ic, int index, @Ptr long url, int is_output);
-	/** Undefined type */
-	public static interface AVProgram {
-		
-	};
-	/** Undefined type */
-	public static interface AVCodecTag {
-		
-	};
-	/** Undefined type */
-	public static interface AVChapter {
-		
-	};
-	/** Undefined type */
-	public static interface AVIOInterruptCB {
-		
-	};
-}
diff -pruN src/org/ffmpeg/avformat/AVFrac.java src.bak/org/ffmpeg/avformat/AVFrac.java
--- src/org/ffmpeg/avformat/AVFrac.java	2014-03-11 16:48:18.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVFrac.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,51 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:5</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVFrac extends StructObject {
-	static {
-		BridJ.register();
-	}
-	@Field(0) 
-	public long val() {
-		return this.io.getLongField(this, 0);
-	}
-	@Field(0) 
-	public AVFrac val(long val) {
-		this.io.setLongField(this, 0, val);
-		return this;
-	}
-	@Field(1) 
-	public long num() {
-		return this.io.getLongField(this, 1);
-	}
-	@Field(1) 
-	public AVFrac num(long num) {
-		this.io.setLongField(this, 1, num);
-		return this;
-	}
-	@Field(2) 
-	public long den() {
-		return this.io.getLongField(this, 2);
-	}
-	@Field(2) 
-	public AVFrac den(long den) {
-		this.io.setLongField(this, 2, den);
-		return this;
-	}
-	public AVFrac() {
-		super();
-	}
-	public AVFrac(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVIndexEntry.java src.bak/org/ffmpeg/avformat/AVIndexEntry.java
--- src/org/ffmpeg/avformat/AVIndexEntry.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVIndexEntry.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,78 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Bits;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:94</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVIndexEntry extends StructObject {
-	static {
-		BridJ.register();
-	}
-	@Field(0) 
-	public long pos() {
-		return this.io.getLongField(this, 0);
-	}
-	@Field(0) 
-	public AVIndexEntry pos(long pos) {
-		this.io.setLongField(this, 0, pos);
-		return this;
-	}
-	@Field(1) 
-	public long timestamp() {
-		return this.io.getLongField(this, 1);
-	}
-	@Field(1) 
-	public AVIndexEntry timestamp(long timestamp) {
-		this.io.setLongField(this, 1, timestamp);
-		return this;
-	}
-	@Field(2) 
-	@Bits(2) 
-	public int flags() {
-		return this.io.getIntField(this, 2);
-	}
-	@Field(2) 
-	@Bits(2) 
-	public AVIndexEntry flags(int flags) {
-		this.io.setIntField(this, 2, flags);
-		return this;
-	}
-	/** Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment). */
-	@Field(3) 
-	@Bits(30) 
-	public int size() {
-		return this.io.getIntField(this, 3);
-	}
-	/** Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment). */
-	@Field(3) 
-	@Bits(30) 
-	public AVIndexEntry size(int size) {
-		this.io.setIntField(this, 3, size);
-		return this;
-	}
-	/** < Minimum distance between this and the previous keyframe, used to avoid unneeded searching. */
-	@Field(4) 
-	public int min_distance() {
-		return this.io.getIntField(this, 4);
-	}
-	/** < Minimum distance between this and the previous keyframe, used to avoid unneeded searching. */
-	@Field(4) 
-	public AVIndexEntry min_distance(int min_distance) {
-		this.io.setIntField(this, 4, min_distance);
-		return this;
-	}
-	public AVIndexEntry() {
-		super();
-	}
-	public AVIndexEntry(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVInputFormat.java src.bak/org/ffmpeg/avformat/AVInputFormat.java
--- src/org/ffmpeg/avformat/AVInputFormat.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVInputFormat.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,291 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avcodec.AVPacket;
-import org.ffmpeg.avutil.AVClass;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:76</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public abstract class AVInputFormat extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVInputFormat name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 0, name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public Pointer<Byte > long_name() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public AVInputFormat long_name(Pointer<Byte > long_name) {
-		this.io.setPointerField(this, 1, long_name);
-		return this;
-	}
-	@Field(2) 
-	public int flags() {
-		return this.io.getIntField(this, 2);
-	}
-	@Field(2) 
-	public AVInputFormat flags(int flags) {
-		this.io.setIntField(this, 2, flags);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(3) 
-	public Pointer<Byte > extensions() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : const char* */
-	@Field(3) 
-	public AVInputFormat extensions(Pointer<Byte > extensions) {
-		this.io.setPointerField(this, 3, extensions);
-		return this;
-	}
-	/** Conversion Error : AVCodecTag** (failed to convert type to Java (undefined type)) */
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(5) 
-	public Pointer<AVClass > priv_class() {
-		return this.io.getPointerField(this, 5);
-	}
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(5) 
-	public AVInputFormat priv_class(Pointer<AVClass > priv_class) {
-		this.io.setPointerField(this, 5, priv_class);
-		return this;
-	}
-	/** C type : AVInputFormat* */
-	@Field(6) 
-	public Pointer<AVInputFormat > next() {
-		return this.io.getPointerField(this, 6);
-	}
-	/** C type : AVInputFormat* */
-	@Field(6) 
-	public AVInputFormat next(Pointer<AVInputFormat > next) {
-		this.io.setPointerField(this, 6, next);
-		return this;
-	}
-	@Field(7) 
-	public int raw_codec_id() {
-		return this.io.getIntField(this, 7);
-	}
-	@Field(7) 
-	public AVInputFormat raw_codec_id(int raw_codec_id) {
-		this.io.setIntField(this, 7, raw_codec_id);
-		return this;
-	}
-	@Field(8) 
-	public int priv_data_size() {
-		return this.io.getIntField(this, 8);
-	}
-	@Field(8) 
-	public AVInputFormat priv_data_size(int priv_data_size) {
-		this.io.setIntField(this, 8, priv_data_size);
-		return this;
-	}
-	/** C type : read_probe_callback* */
-	@Field(9) 
-	public Pointer<AVInputFormat.read_probe_callback > read_probe() {
-		return this.io.getPointerField(this, 9);
-	}
-	/** C type : read_probe_callback* */
-	@Field(9) 
-	public AVInputFormat read_probe(Pointer<AVInputFormat.read_probe_callback > read_probe) {
-		this.io.setPointerField(this, 9, read_probe);
-		return this;
-	}
-	/** C type : read_header_callback* */
-	@Field(10) 
-	public Pointer<AVInputFormat.read_header_callback > read_header() {
-		return this.io.getPointerField(this, 10);
-	}
-	/** C type : read_header_callback* */
-	@Field(10) 
-	public AVInputFormat read_header(Pointer<AVInputFormat.read_header_callback > read_header) {
-		this.io.setPointerField(this, 10, read_header);
-		return this;
-	}
-	/** C type : read_packet_callback* */
-	@Field(11) 
-	public Pointer<AVInputFormat.read_packet_callback > read_packet() {
-		return this.io.getPointerField(this, 11);
-	}
-	/** C type : read_packet_callback* */
-	@Field(11) 
-	public AVInputFormat read_packet(Pointer<AVInputFormat.read_packet_callback > read_packet) {
-		this.io.setPointerField(this, 11, read_packet);
-		return this;
-	}
-	/** C type : read_close_callback* */
-	@Field(12) 
-	public Pointer<AVInputFormat.read_close_callback > read_close() {
-		return this.io.getPointerField(this, 12);
-	}
-	/** C type : read_close_callback* */
-	@Field(12) 
-	public AVInputFormat read_close(Pointer<AVInputFormat.read_close_callback > read_close) {
-		this.io.setPointerField(this, 12, read_close);
-		return this;
-	}
-	/** C type : read_seek_callback* */
-	@Field(13) 
-	public Pointer<AVInputFormat.read_seek_callback > read_seek() {
-		return this.io.getPointerField(this, 13);
-	}
-	/** C type : read_seek_callback* */
-	@Field(13) 
-	public AVInputFormat read_seek(Pointer<AVInputFormat.read_seek_callback > read_seek) {
-		this.io.setPointerField(this, 13, read_seek);
-		return this;
-	}
-	/** C type : read_timestamp_callback* */
-	@Field(14) 
-	public Pointer<AVInputFormat.read_timestamp_callback > read_timestamp() {
-		return this.io.getPointerField(this, 14);
-	}
-	/** C type : read_timestamp_callback* */
-	@Field(14) 
-	public AVInputFormat read_timestamp(Pointer<AVInputFormat.read_timestamp_callback > read_timestamp) {
-		this.io.setPointerField(this, 14, read_timestamp);
-		return this;
-	}
-	/** C type : read_play_callback* */
-	@Field(15) 
-	public Pointer<AVInputFormat.read_play_callback > read_play() {
-		return this.io.getPointerField(this, 15);
-	}
-	/** C type : read_play_callback* */
-	@Field(15) 
-	public AVInputFormat read_play(Pointer<AVInputFormat.read_play_callback > read_play) {
-		this.io.setPointerField(this, 15, read_play);
-		return this;
-	}
-	/** C type : read_pause_callback* */
-	@Field(16) 
-	public Pointer<AVInputFormat.read_pause_callback > read_pause() {
-		return this.io.getPointerField(this, 16);
-	}
-	/** C type : read_pause_callback* */
-	@Field(16) 
-	public AVInputFormat read_pause(Pointer<AVInputFormat.read_pause_callback > read_pause) {
-		this.io.setPointerField(this, 16, read_pause);
-		return this;
-	}
-	/** C type : read_seek2_callback* */
-	@Field(17) 
-	public Pointer<AVInputFormat.read_seek2_callback > read_seek2() {
-		return this.io.getPointerField(this, 17);
-	}
-	/** C type : read_seek2_callback* */
-	@Field(17) 
-	public AVInputFormat read_seek2(Pointer<AVInputFormat.read_seek2_callback > read_seek2) {
-		this.io.setPointerField(this, 17, read_seek2);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:67</i> */
-	public static abstract class read_probe_callback extends Callback<read_probe_callback > {
-		public int apply(Pointer<AVProbeData > AVProbeDataPtr1) {
-			return apply(Pointer.getPeer(AVProbeDataPtr1));
-		}
-		public int apply(@Ptr long AVProbeDataPtr1) {
-			return apply(Pointer.pointerToAddress(AVProbeDataPtr1, AVProbeData.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:68</i> */
-	public static abstract class read_header_callback extends Callback<read_header_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:69</i> */
-	public static abstract class read_packet_callback extends Callback<read_packet_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, Pointer<AVPacket > pkt) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1), Pointer.getPeer(pkt));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1, @Ptr long pkt) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), Pointer.pointerToAddress(pkt, AVPacket.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:70</i> */
-	public static abstract class read_close_callback extends Callback<read_close_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:71</i> */
-	public static abstract class read_seek_callback extends Callback<read_seek_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, int stream_index, long timestamp, int flags) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1), stream_index, timestamp, flags);
-		}
-		public int apply(@Ptr long AVFormatContextPtr1, int stream_index, long timestamp, int flags) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), stream_index, timestamp, flags);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:72</i> */
-	public static abstract class read_timestamp_callback extends Callback<read_timestamp_callback > {
-		public long apply(Pointer<AVFormatContext > s, int stream_index, Pointer<Long > pos, long pos_limit) {
-			return apply(Pointer.getPeer(s), stream_index, Pointer.getPeer(pos), pos_limit);
-		}
-		public long apply(@Ptr long s, int stream_index, @Ptr long pos, long pos_limit) {
-			return apply(Pointer.pointerToAddress(s, AVFormatContext.class), stream_index, Pointer.pointerToAddress(pos, Long.class), pos_limit);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:73</i> */
-	public static abstract class read_play_callback extends Callback<read_play_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:74</i> */
-	public static abstract class read_pause_callback extends Callback<read_pause_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:75</i> */
-	public static abstract class read_seek2_callback extends Callback<read_seek2_callback > {
-		public int apply(Pointer<AVFormatContext > s, int stream_index, long min_ts, long ts, long max_ts, int flags) {
-			return apply(Pointer.getPeer(s), stream_index, min_ts, ts, max_ts, flags);
-		}
-		public int apply(@Ptr long s, int stream_index, long min_ts, long ts, long max_ts, int flags) {
-			return apply(Pointer.pointerToAddress(s, AVFormatContext.class), stream_index, min_ts, ts, max_ts, flags);
-		}
-	};
-}
diff -pruN src/org/ffmpeg/avformat/AVIOContext.java src.bak/org/ffmpeg/avformat/AVIOContext.java
--- src/org/ffmpeg/avformat/AVIOContext.java	2014-03-09 09:36:02.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVIOContext.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,388 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.CLong;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avutil.AVClass;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:37</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVIOContext extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const AVClass* */
-	@Field(0) 
-	public Pointer<AVClass > av_class() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const AVClass* */
-	@Field(0) 
-	public AVIOContext av_class(Pointer<AVClass > av_class) {
-		this.io.setPointerField(this, 0, av_class);
-		return this;
-	}
-	/**
-	 * < Start of the buffer.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(1) 
-	public Pointer<Byte > buffer() {
-		return this.io.getPointerField(this, 1);
-	}
-	/**
-	 * < Start of the buffer.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(1) 
-	public AVIOContext buffer(Pointer<Byte > buffer) {
-		this.io.setPointerField(this, 1, buffer);
-		return this;
-	}
-	/** < Maximum buffer size */
-	@Field(2) 
-	public int buffer_size() {
-		return this.io.getIntField(this, 2);
-	}
-	/** < Maximum buffer size */
-	@Field(2) 
-	public AVIOContext buffer_size(int buffer_size) {
-		this.io.setIntField(this, 2, buffer_size);
-		return this;
-	}
-	/**
-	 * < Current position in the buffer<br>
-	 * C type : unsigned char*
-	 */
-	@Field(3) 
-	public Pointer<Byte > buf_ptr() {
-		return this.io.getPointerField(this, 3);
-	}
-	/**
-	 * < Current position in the buffer<br>
-	 * C type : unsigned char*
-	 */
-	@Field(3) 
-	public AVIOContext buf_ptr(Pointer<Byte > buf_ptr) {
-		this.io.setPointerField(this, 3, buf_ptr);
-		return this;
-	}
-	/**
-	 * < End of the data, may be less than<br>
-	 * buffer+buffer_size if the read function returned<br>
-	 * less data than requested, e.g. for streams where<br>
-	 * no more data has been received yet.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(4) 
-	public Pointer<Byte > buf_end() {
-		return this.io.getPointerField(this, 4);
-	}
-	/**
-	 * < End of the data, may be less than<br>
-	 * buffer+buffer_size if the read function returned<br>
-	 * less data than requested, e.g. for streams where<br>
-	 * no more data has been received yet.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(4) 
-	public AVIOContext buf_end(Pointer<Byte > buf_end) {
-		this.io.setPointerField(this, 4, buf_end);
-		return this;
-	}
-	/**
-	 * < A private pointer, passed to the read/write/seek/...<br>
-	 * functions.<br>
-	 * C type : void*
-	 */
-	@Field(5) 
-	public Pointer<? > opaque() {
-		return this.io.getPointerField(this, 5);
-	}
-	/**
-	 * < A private pointer, passed to the read/write/seek/...<br>
-	 * functions.<br>
-	 * C type : void*
-	 */
-	@Field(5) 
-	public AVIOContext opaque(Pointer<? > opaque) {
-		this.io.setPointerField(this, 5, opaque);
-		return this;
-	}
-	/** C type : read_packet_callback* */
-	@Field(6) 
-	public Pointer<org.ffmpeg.avformat.AVInputFormat.read_packet_callback > read_packet() {
-		return this.io.getPointerField(this, 6);
-	}
-	/** C type : read_packet_callback* */
-	@Field(6) 
-	public AVIOContext read_packet(Pointer<org.ffmpeg.avformat.AVInputFormat.read_packet_callback > read_packet) {
-		this.io.setPointerField(this, 6, read_packet);
-		return this;
-	}
-	/** C type : write_packet_callback* */
-	@Field(7) 
-	public Pointer<org.ffmpeg.avformat.AVOutputFormat.write_packet_callback > write_packet() {
-		return this.io.getPointerField(this, 7);
-	}
-	/** C type : write_packet_callback* */
-	@Field(7) 
-	public AVIOContext write_packet(Pointer<org.ffmpeg.avformat.AVOutputFormat.write_packet_callback > write_packet) {
-		this.io.setPointerField(this, 7, write_packet);
-		return this;
-	}
-	/** C type : seek_callback* */
-	@Field(8) 
-	public Pointer<AVIOContext.seek_callback > seek() {
-		return this.io.getPointerField(this, 8);
-	}
-	/** C type : seek_callback* */
-	@Field(8) 
-	public AVIOContext seek(Pointer<AVIOContext.seek_callback > seek) {
-		this.io.setPointerField(this, 8, seek);
-		return this;
-	}
-	/** < position in the file of the current buffer */
-	@Field(9) 
-	public long pos() {
-		return this.io.getLongField(this, 9);
-	}
-	/** < position in the file of the current buffer */
-	@Field(9) 
-	public AVIOContext pos(long pos) {
-		this.io.setLongField(this, 9, pos);
-		return this;
-	}
-	/** < true if the next seek should flush */
-	@Field(10) 
-	public int must_flush() {
-		return this.io.getIntField(this, 10);
-	}
-	/** < true if the next seek should flush */
-	@Field(10) 
-	public AVIOContext must_flush(int must_flush) {
-		this.io.setIntField(this, 10, must_flush);
-		return this;
-	}
-	/** < true if eof reached */
-	@Field(11) 
-	public int eof_reached() {
-		return this.io.getIntField(this, 11);
-	}
-	/** < true if eof reached */
-	@Field(11) 
-	public AVIOContext eof_reached(int eof_reached) {
-		this.io.setIntField(this, 11, eof_reached);
-		return this;
-	}
-	/** < true if open for writing */
-	@Field(12) 
-	public int write_flag() {
-		return this.io.getIntField(this, 12);
-	}
-	/** < true if open for writing */
-	@Field(12) 
-	public AVIOContext write_flag(int write_flag) {
-		this.io.setIntField(this, 12, write_flag);
-		return this;
-	}
-	@Field(13) 
-	public int max_packet_size() {
-		return this.io.getIntField(this, 13);
-	}
-	@Field(13) 
-	public AVIOContext max_packet_size(int max_packet_size) {
-		this.io.setIntField(this, 13, max_packet_size);
-		return this;
-	}
-	@CLong 
-	@Field(14) 
-	public long checksum() {
-		return this.io.getCLongField(this, 14);
-	}
-	@CLong 
-	@Field(14) 
-	public AVIOContext checksum(long checksum) {
-		this.io.setCLongField(this, 14, checksum);
-		return this;
-	}
-	/** C type : unsigned char* */
-	@Field(15) 
-	public Pointer<Byte > checksum_ptr() {
-		return this.io.getPointerField(this, 15);
-	}
-	/** C type : unsigned char* */
-	@Field(15) 
-	public AVIOContext checksum_ptr(Pointer<Byte > checksum_ptr) {
-		this.io.setPointerField(this, 15, checksum_ptr);
-		return this;
-	}
-	/** C type : update_checksum_callback* */
-	@Field(16) 
-	public Pointer<AVIOContext.update_checksum_callback > update_checksum() {
-		return this.io.getPointerField(this, 16);
-	}
-	/** C type : update_checksum_callback* */
-	@Field(16) 
-	public AVIOContext update_checksum(Pointer<AVIOContext.update_checksum_callback > update_checksum) {
-		this.io.setPointerField(this, 16, update_checksum);
-		return this;
-	}
-	/** < contains the error code or 0 if no error happened */
-	@Field(17) 
-	public int error() {
-		return this.io.getIntField(this, 17);
-	}
-	/** < contains the error code or 0 if no error happened */
-	@Field(17) 
-	public AVIOContext error(int error) {
-		this.io.setIntField(this, 17, error);
-		return this;
-	}
-	/** C type : read_pause_callback* */
-	@Field(18) 
-	public Pointer<org.ffmpeg.avformat.AVInputFormat.read_pause_callback > read_pause() {
-		return this.io.getPointerField(this, 18);
-	}
-	/** C type : read_pause_callback* */
-	@Field(18) 
-	public AVIOContext read_pause(Pointer<org.ffmpeg.avformat.AVInputFormat.read_pause_callback > read_pause) {
-		this.io.setPointerField(this, 18, read_pause);
-		return this;
-	}
-	/** C type : read_seek_callback* */
-	@Field(19) 
-	public Pointer<org.ffmpeg.avformat.AVInputFormat.read_seek_callback > read_seek() {
-		return this.io.getPointerField(this, 19);
-	}
-	/** C type : read_seek_callback* */
-	@Field(19) 
-	public AVIOContext read_seek(Pointer<org.ffmpeg.avformat.AVInputFormat.read_seek_callback > read_seek) {
-		this.io.setPointerField(this, 19, read_seek);
-		return this;
-	}
-	@Field(20) 
-	public int seekable() {
-		return this.io.getIntField(this, 20);
-	}
-	@Field(20) 
-	public AVIOContext seekable(int seekable) {
-		this.io.setIntField(this, 20, seekable);
-		return this;
-	}
-	@Field(21) 
-	public long maxsize() {
-		return this.io.getLongField(this, 21);
-	}
-	@Field(21) 
-	public AVIOContext maxsize(long maxsize) {
-		this.io.setLongField(this, 21, maxsize);
-		return this;
-	}
-	@Field(22) 
-	public int direct() {
-		return this.io.getIntField(this, 22);
-	}
-	@Field(22) 
-	public AVIOContext direct(int direct) {
-		this.io.setIntField(this, 22, direct);
-		return this;
-	}
-	@Field(23) 
-	public long bytes_read() {
-		return this.io.getLongField(this, 23);
-	}
-	@Field(23) 
-	public AVIOContext bytes_read(long bytes_read) {
-		this.io.setLongField(this, 23, bytes_read);
-		return this;
-	}
-	@Field(24) 
-	public int seek_count() {
-		return this.io.getIntField(this, 24);
-	}
-	@Field(24) 
-	public AVIOContext seek_count(int seek_count) {
-		this.io.setIntField(this, 24, seek_count);
-		return this;
-	}
-	@Field(25) 
-	public int writeout_count() {
-		return this.io.getIntField(this, 25);
-	}
-	@Field(25) 
-	public AVIOContext writeout_count(int writeout_count) {
-		this.io.setIntField(this, 25, writeout_count);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:31</i> */
-	public static abstract class read_packet_callback extends Callback<read_packet_callback > {
-		public int apply(Pointer<? > opaque, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(opaque), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long opaque, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(opaque), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:32</i> */
-	public static abstract class write_packet_callback extends Callback<write_packet_callback > {
-		public int apply(Pointer<? > opaque, Pointer<Byte > buf, int buf_size) {
-			return apply(Pointer.getPeer(opaque), Pointer.getPeer(buf), buf_size);
-		}
-		public int apply(@Ptr long opaque, @Ptr long buf, int buf_size) {
-			return apply(Pointer.pointerToAddress(opaque), Pointer.pointerToAddress(buf, Byte.class), buf_size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:33</i> */
-	public static abstract class seek_callback extends Callback<seek_callback > {
-		public long apply(Pointer<? > opaque, long offset, int whence) {
-			return apply(Pointer.getPeer(opaque), offset, whence);
-		}
-		public long apply(@Ptr long opaque, long offset, int whence) {
-			return apply(Pointer.pointerToAddress(opaque), offset, whence);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:34</i> */
-	public static abstract class update_checksum_callback extends Callback<update_checksum_callback > {
-		@CLong 
-		public long apply(@CLong long checksum, Pointer<Byte > buf, int size) {
-			return apply(checksum, Pointer.getPeer(buf), size);
-		}
-		@CLong 
-		public long apply(@CLong long checksum, @Ptr long buf, int size) {
-			return apply(checksum, Pointer.pointerToAddress(buf, Byte.class), size);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:35</i> */
-	public static abstract class read_pause_callback extends Callback<read_pause_callback > {
-		public int apply(Pointer<? > opaque, int pause) {
-			return apply(Pointer.getPeer(opaque), pause);
-		}
-		public int apply(@Ptr long opaque, int pause) {
-			return apply(Pointer.pointerToAddress(opaque), pause);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avio.h:36</i> */
-	public static abstract class read_seek_callback extends Callback<read_seek_callback > {
-		public long apply(Pointer<? > opaque, int stream_index, long timestamp, int flags) {
-			return apply(Pointer.getPeer(opaque), stream_index, timestamp, flags);
-		}
-		public long apply(@Ptr long opaque, int stream_index, long timestamp, int flags) {
-			return apply(Pointer.pointerToAddress(opaque), stream_index, timestamp, flags);
-		}
-	};
-	public AVIOContext() {
-		super();
-	}
-	public AVIOContext(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVOutputFormat.java src.bak/org/ffmpeg/avformat/AVOutputFormat.java
--- src/org/ffmpeg/avformat/AVOutputFormat.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVOutputFormat.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,295 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.FlagSet;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avcodec.AVPacket;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVCodecID;
-import org.ffmpeg.avutil.AVClass;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:46</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public abstract class AVOutputFormat extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVOutputFormat name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 0, name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public Pointer<Byte > long_name() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public AVOutputFormat long_name(Pointer<Byte > long_name) {
-		this.io.setPointerField(this, 1, long_name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(2) 
-	public Pointer<Byte > mime_type() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : const char* */
-	@Field(2) 
-	public AVOutputFormat mime_type(Pointer<Byte > mime_type) {
-		this.io.setPointerField(this, 2, mime_type);
-		return this;
-	}
-	/**
-	 * < comma-separated filename extensions<br>
-	 * C type : const char*
-	 */
-	@Field(3) 
-	public Pointer<Byte > extensions() {
-		return this.io.getPointerField(this, 3);
-	}
-	/**
-	 * < comma-separated filename extensions<br>
-	 * C type : const char*
-	 */
-	@Field(3) 
-	public AVOutputFormat extensions(Pointer<Byte > extensions) {
-		this.io.setPointerField(this, 3, extensions);
-		return this;
-	}
-	/**
-	 * output support<br>
-	 * < default audio codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(4) 
-	public IntValuedEnum<AVCodecID > audio_codec() {
-		return this.io.getEnumField(this, 4);
-	}
-	/**
-	 * output support<br>
-	 * < default audio codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(4) 
-	public AVOutputFormat audio_codec(IntValuedEnum<AVCodecID > audio_codec) {
-		this.io.setEnumField(this, 4, audio_codec);
-		return this;
-	}
-	/**
-	 * < default video codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(5) 
-	public IntValuedEnum<AVCodecID > video_codec() {
-		return this.io.getEnumField(this, 5);
-	}
-	/**
-	 * < default video codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(5) 
-	public AVOutputFormat video_codec(IntValuedEnum<AVCodecID > video_codec) {
-		this.io.setEnumField(this, 5, video_codec);
-		return this;
-	}
-	/**
-	 * < default subtitle codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(6) 
-	public IntValuedEnum<AVCodecID > subtitle_codec() {
-		return this.io.getEnumField(this, 6);
-	}
-	/**
-	 * < default subtitle codec<br>
-	 * C type : AVCodecID
-	 */
-	@Field(6) 
-	public AVOutputFormat subtitle_codec(IntValuedEnum<AVCodecID > subtitle_codec) {
-		this.io.setEnumField(this, 6, subtitle_codec);
-		return this;
-	}
-	@Field(7) 
-	public int flags() {
-		return this.io.getIntField(this, 7);
-	}
-	@Field(7) 
-	public AVOutputFormat flags(int flags) {
-		this.io.setIntField(this, 7, flags);
-		return this;
-	}
-	/** Conversion Error : AVCodecTag** (failed to convert type to Java (undefined type)) */
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(9) 
-	public Pointer<AVClass > priv_class() {
-		return this.io.getPointerField(this, 9);
-	}
-	/**
-	 * < AVClass for the private context<br>
-	 * C type : const AVClass*
-	 */
-	@Field(9) 
-	public AVOutputFormat priv_class(Pointer<AVClass > priv_class) {
-		this.io.setPointerField(this, 9, priv_class);
-		return this;
-	}
-	/** C type : AVOutputFormat* */
-	@Field(10) 
-	public Pointer<AVOutputFormat > next() {
-		return this.io.getPointerField(this, 10);
-	}
-	/** C type : AVOutputFormat* */
-	@Field(10) 
-	public AVOutputFormat next(Pointer<AVOutputFormat > next) {
-		this.io.setPointerField(this, 10, next);
-		return this;
-	}
-	@Field(11) 
-	public int priv_data_size() {
-		return this.io.getIntField(this, 11);
-	}
-	@Field(11) 
-	public AVOutputFormat priv_data_size(int priv_data_size) {
-		this.io.setIntField(this, 11, priv_data_size);
-		return this;
-	}
-	/** C type : write_header_callback* */
-	@Field(12) 
-	public Pointer<AVOutputFormat.write_header_callback > write_header() {
-		return this.io.getPointerField(this, 12);
-	}
-	/** C type : write_header_callback* */
-	@Field(12) 
-	public AVOutputFormat write_header(Pointer<AVOutputFormat.write_header_callback > write_header) {
-		this.io.setPointerField(this, 12, write_header);
-		return this;
-	}
-	/** C type : write_packet_callback* */
-	@Field(13) 
-	public Pointer<AVOutputFormat.write_packet_callback > write_packet() {
-		return this.io.getPointerField(this, 13);
-	}
-	/** C type : write_packet_callback* */
-	@Field(13) 
-	public AVOutputFormat write_packet(Pointer<AVOutputFormat.write_packet_callback > write_packet) {
-		this.io.setPointerField(this, 13, write_packet);
-		return this;
-	}
-	/** C type : write_trailer_callback* */
-	@Field(14) 
-	public Pointer<AVOutputFormat.write_trailer_callback > write_trailer() {
-		return this.io.getPointerField(this, 14);
-	}
-	/** C type : write_trailer_callback* */
-	@Field(14) 
-	public AVOutputFormat write_trailer(Pointer<AVOutputFormat.write_trailer_callback > write_trailer) {
-		this.io.setPointerField(this, 14, write_trailer);
-		return this;
-	}
-	/** C type : interleave_packet_callback* */
-	@Field(15) 
-	public Pointer<AVOutputFormat.interleave_packet_callback > interleave_packet() {
-		return this.io.getPointerField(this, 15);
-	}
-	/** C type : interleave_packet_callback* */
-	@Field(15) 
-	public AVOutputFormat interleave_packet(Pointer<AVOutputFormat.interleave_packet_callback > interleave_packet) {
-		this.io.setPointerField(this, 15, interleave_packet);
-		return this;
-	}
-	/** C type : query_codec_callback* */
-	@Field(16) 
-	public Pointer<AVOutputFormat.query_codec_callback > query_codec() {
-		return this.io.getPointerField(this, 16);
-	}
-	/** C type : query_codec_callback* */
-	@Field(16) 
-	public AVOutputFormat query_codec(Pointer<AVOutputFormat.query_codec_callback > query_codec) {
-		this.io.setPointerField(this, 16, query_codec);
-		return this;
-	}
-	/** C type : get_output_timestamp_callback* */
-	@Field(17) 
-	public Pointer<AVOutputFormat.get_output_timestamp_callback > get_output_timestamp() {
-		return this.io.getPointerField(this, 17);
-	}
-	/** C type : get_output_timestamp_callback* */
-	@Field(17) 
-	public AVOutputFormat get_output_timestamp(Pointer<AVOutputFormat.get_output_timestamp_callback > get_output_timestamp) {
-		this.io.setPointerField(this, 17, get_output_timestamp);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:38</i> */
-	public static abstract class write_header_callback extends Callback<write_header_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:39</i> */
-	public static abstract class write_packet_callback extends Callback<write_packet_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, Pointer<AVPacket > pkt) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1), Pointer.getPeer(pkt));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1, @Ptr long pkt) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), Pointer.pointerToAddress(pkt, AVPacket.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:40</i> */
-	public static abstract class write_trailer_callback extends Callback<write_trailer_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1));
-		}
-		public int apply(@Ptr long AVFormatContextPtr1) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:41</i> */
-	public static abstract class interleave_packet_callback extends Callback<interleave_packet_callback > {
-		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, Pointer<AVPacket > out, Pointer<AVPacket > in, int flush) {
-			return apply(Pointer.getPeer(AVFormatContextPtr1), Pointer.getPeer(out), Pointer.getPeer(in), flush);
-		}
-		public int apply(@Ptr long AVFormatContextPtr1, @Ptr long out, @Ptr long in, int flush) {
-			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), Pointer.pointerToAddress(out, AVPacket.class), Pointer.pointerToAddress(in, AVPacket.class), flush);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:44</i> */
-	public static abstract class query_codec_callback extends Callback<query_codec_callback > {
-		public int apply(IntValuedEnum<AVCodecID > id, int std_compliance) {
-			return apply((int)id.value(), std_compliance);
-		}
-		public int apply(int id, int std_compliance) {
-			return apply(FlagSet.fromValue(id, AVCodecID.class), std_compliance);
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:45</i> */
-	public static abstract class get_output_timestamp_callback extends Callback<get_output_timestamp_callback > {
-		public void apply(Pointer<AVFormatContext > s, int stream, Pointer<Long > dts, Pointer<Long > wall) {
-			apply(Pointer.getPeer(s), stream, Pointer.getPeer(dts), Pointer.getPeer(wall));
-		}
-		public void apply(@Ptr long s, int stream, @Ptr long dts, @Ptr long wall) {
-			apply(Pointer.pointerToAddress(s, AVFormatContext.class), stream, Pointer.pointerToAddress(dts, Long.class), Pointer.pointerToAddress(wall, Long.class));
-		}
-	};
-}
diff -pruN src/org/ffmpeg/avformat/AVPacketList.java src.bak/org/ffmpeg/avformat/AVPacketList.java
--- src/org/ffmpeg/avformat/AVPacketList.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVPacketList.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avcodec.AVPacket;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:244</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVPacketList extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : AVPacket */
-	@Field(0) 
-	public AVPacket pkt() {
-		return this.io.getNativeObjectField(this, 0);
-	}
-	/** C type : AVPacket */
-	@Field(0) 
-	public AVPacketList pkt(AVPacket pkt) {
-		this.io.setNativeObjectField(this, 0, pkt);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(1) 
-	public Pointer<AVPacketList > next() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : AVPacketList* */
-	@Field(1) 
-	public AVPacketList next(Pointer<AVPacketList > next) {
-		this.io.setPointerField(this, 1, next);
-		return this;
-	}
-	public AVPacketList() {
-		super();
-	}
-	public AVPacketList(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVProbeData.java src.bak/org/ffmpeg/avformat/AVProbeData.java
--- src/org/ffmpeg/avformat/AVProbeData.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVProbeData.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,63 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:10</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avformat") 
-public class AVProbeData extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > filename() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVProbeData filename(Pointer<Byte > filename) {
-		this.io.setPointerField(this, 0, filename);
-		return this;
-	}
-	/**
-	 * < Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(1) 
-	public Pointer<Byte > buf() {
-		return this.io.getPointerField(this, 1);
-	}
-	/**
-	 * < Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero.<br>
-	 * C type : unsigned char*
-	 */
-	@Field(1) 
-	public AVProbeData buf(Pointer<Byte > buf) {
-		this.io.setPointerField(this, 1, buf);
-		return this;
-	}
-	/** < Size of buf except extra allocated bytes */
-	@Field(2) 
-	public int buf_size() {
-		return this.io.getIntField(this, 2);
-	}
-	/** < Size of buf except extra allocated bytes */
-	@Field(2) 
-	public AVProbeData buf_size(int buf_size) {
-		this.io.setIntField(this, 2, buf_size);
-		return this;
-	}
-	public AVProbeData() {
-		super();
-	}
-	public AVProbeData(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avformat/AVStream.java src.bak/org/ffmpeg/avformat/AVStream.java
--- src/org/ffmpeg/avformat/AVStream.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/avformat/AVStream.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,587 +0,0 @@
-package org.ffmpeg.avformat;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avcodec.AVCodecParserContext;
-import org.ffmpeg.avcodec.AVPacket;
-import org.ffmpeg.avcodec.AVCodecContext;
-import org.ffmpeg.avcodec.AvcodecLibrary.AVDiscard;
-import org.ffmpeg.avformat.AvformatLibrary.AVStreamParseType;
-import org.ffmpeg.avutil.AVDictionary;
-import org.ffmpeg.avutil.AVRational;
-/**
- * Manuell korrigierte Bibliothek.
- */
-@Library("avformat") 
-public abstract class AVStream extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** < stream index in AVFormatContext */
-	@Field(0) 
-	public int index() {
-		return this.io.getIntField(this, 0);
-	}
-	/** < stream index in AVFormatContext */
-	@Field(0) 
-	public AVStream index(int index) {
-		this.io.setIntField(this, 0, index);
-		return this;
-	}
-	@Field(1) 
-	public int id() {
-		return this.io.getIntField(this, 1);
-	}
-	@Field(1) 
-	public AVStream id(int id) {
-		this.io.setIntField(this, 1, id);
-		return this;
-	}
-	/** C type : AVCodecContext* */
-	@Field(2)
-	public Pointer<AVCodecContext> codec() {
-		return this.io.getPointerField(this, 2);
-	}
-	
-	@Field(2)
-	public AVStream codec(Pointer<AVCodecContext> codec) {
-		this.io.setPointerField(this, 2, codec);
-		return this;
-	}
-	
-	/** C type : void* */
-	@Field(3) 
-	public Pointer<? > priv_data() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : void* */
-	@Field(3) 
-	public AVStream priv_data(Pointer<? > priv_data) {
-		this.io.setPointerField(this, 3, priv_data);
-		return this;
-	}
-	/** C type : AVFrac */
-	@Field(4) 
-	public AVFrac pts() {
-		return this.io.getNativeObjectField(this, 4);
-	}
-	/** C type : AVFrac */
-	@Field(4) 
-	public AVStream pts(AVFrac pts) {
-		this.io.setNativeObjectField(this, 4, pts);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(5) 
-	public AVRational time_base() {
-		return this.io.getNativeObjectField(this, 5);
-	}
-	/** C type : AVRational */
-	@Field(5) 
-	public AVStream time_base(AVRational time_base) {
-		this.io.setNativeObjectField(this, 5, time_base);
-		return this;
-	}
-	@Field(6) 
-	public long start_time() {
-		return this.io.getLongField(this, 6);
-	}
-	@Field(6) 
-	public AVStream start_time(long start_time) {
-		this.io.setLongField(this, 6, start_time);
-		return this;
-	}
-	@Field(7) 
-	public long duration() {
-		return this.io.getLongField(this, 7);
-	}
-	@Field(7) 
-	public AVStream duration(long duration) {
-		this.io.setLongField(this, 7, duration);
-		return this;
-	}
-	/** < number of frames in this stream if known or 0 */
-	@Field(8) 
-	public long nb_frames() {
-		return this.io.getLongField(this, 8);
-	}
-	/** < number of frames in this stream if known or 0 */
-	@Field(8) 
-	public AVStream nb_frames(long nb_frames) {
-		this.io.setLongField(this, 8, nb_frames);
-		return this;
-	}
-	/** < AV_DISPOSITION_* bit field */
-	@Field(9) 
-	public int disposition() {
-		return this.io.getIntField(this, 9);
-	}
-	/** < AV_DISPOSITION_* bit field */
-	@Field(9) 
-	public AVStream disposition(int disposition) {
-		this.io.setIntField(this, 9, disposition);
-		return this;
-	}
-	/**
-	 * < Selects which packets can be discarded at will and do not need to be demuxed.<br>
-	 * C type : AVDiscard
-	 */
-	@Field(10) 
-	public IntValuedEnum<AVDiscard > discard() {
-		return this.io.getEnumField(this, 10);
-	}
-	/**
-	 * < Selects which packets can be discarded at will and do not need to be demuxed.<br>
-	 * C type : AVDiscard
-	 */
-	@Field(10) 
-	public AVStream discard(IntValuedEnum<AVDiscard > discard) {
-		this.io.setEnumField(this, 10, discard);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(11) 
-	public AVRational sample_aspect_ratio() {
-		return this.io.getNativeObjectField(this, 11);
-	}
-	/** C type : AVRational */
-	@Field(11) 
-	public AVStream sample_aspect_ratio(AVRational sample_aspect_ratio) {
-		this.io.setNativeObjectField(this, 11, sample_aspect_ratio);
-		return this;
-	}
-	/** C type : AVDictionary* */
-	@Field(12) 
-	public Pointer<AVDictionary > metadata() {
-		return this.io.getPointerField(this, 12);
-	}
-	/** C type : AVDictionary* */
-	@Field(12) 
-	public AVStream metadata(Pointer<AVDictionary > metadata) {
-		this.io.setPointerField(this, 12, metadata);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(13) 
-	public AVRational avg_frame_rate() {
-		return this.io.getNativeObjectField(this, 13);
-	}
-	/** C type : AVRational */
-	@Field(13) 
-	public AVStream avg_frame_rate(AVRational avg_frame_rate) {
-		this.io.setNativeObjectField(this, 13, avg_frame_rate);
-		return this;
-	}
-	/** C type : AVPacket */
-	@Field(14) 
-	public AVPacket attached_pic() {
-		return this.io.getNativeObjectField(this, 14);
-	}
-	/** C type : AVPacket */
-	@Field(14) 
-	public AVStream attached_pic(AVPacket attached_pic) {
-		this.io.setNativeObjectField(this, 14, attached_pic);
-		return this;
-	}
-	/** C type : info_struct* */
-	@Field(15) 
-	public Pointer<AVStream.info_struct > info() {
-		return this.io.getPointerField(this, 15);
-	}
-	/** C type : info_struct* */
-	@Field(15) 
-	public AVStream info(Pointer<AVStream.info_struct > info) {
-		this.io.setPointerField(this, 15, info);
-		return this;
-	}
-	/** < number of bits in pts (used for wrapping control) */
-	@Field(16) 
-	public int pts_wrap_bits() {
-		return this.io.getIntField(this, 16);
-	}
-	/** < number of bits in pts (used for wrapping control) */
-	@Field(16) 
-	public AVStream pts_wrap_bits(int pts_wrap_bits) {
-		this.io.setIntField(this, 16, pts_wrap_bits);
-		return this;
-	}
-	@Field(17) 
-	public long reference_dts() {
-		return this.io.getLongField(this, 17);
-	}
-	@Field(17) 
-	public AVStream reference_dts(long reference_dts) {
-		this.io.setLongField(this, 17, reference_dts);
-		return this;
-	}
-	@Field(18) 
-	public long first_dts() {
-		return this.io.getLongField(this, 18);
-	}
-	@Field(18) 
-	public AVStream first_dts(long first_dts) {
-		this.io.setLongField(this, 18, first_dts);
-		return this;
-	}
-	@Field(19) 
-	public long cur_dts() {
-		return this.io.getLongField(this, 19);
-	}
-	@Field(19) 
-	public AVStream cur_dts(long cur_dts) {
-		this.io.setLongField(this, 19, cur_dts);
-		return this;
-	}
-	@Field(20) 
-	public long last_IP_pts() {
-		return this.io.getLongField(this, 20);
-	}
-	@Field(20) 
-	public AVStream last_IP_pts(long last_IP_pts) {
-		this.io.setLongField(this, 20, last_IP_pts);
-		return this;
-	}
-	@Field(21) 
-	public int last_IP_duration() {
-		return this.io.getIntField(this, 21);
-	}
-	@Field(21) 
-	public AVStream last_IP_duration(int last_IP_duration) {
-		this.io.setIntField(this, 21, last_IP_duration);
-		return this;
-	}
-	@Field(22) 
-	public int probe_packets() {
-		return this.io.getIntField(this, 22);
-	}
-	@Field(22) 
-	public AVStream probe_packets(int probe_packets) {
-		this.io.setIntField(this, 22, probe_packets);
-		return this;
-	}
-	@Field(23) 
-	public int codec_info_nb_frames() {
-		return this.io.getIntField(this, 23);
-	}
-	@Field(23) 
-	public AVStream codec_info_nb_frames(int codec_info_nb_frames) {
-		this.io.setIntField(this, 23, codec_info_nb_frames);
-		return this;
-	}
-	/** C type : AVStreamParseType */
-	@Field(24) 
-	public IntValuedEnum<AVStreamParseType > need_parsing() {
-		return this.io.getEnumField(this, 24);
-	}
-	/** C type : AVStreamParseType */
-	@Field(24) 
-	public AVStream need_parsing(IntValuedEnum<AVStreamParseType > need_parsing) {
-		this.io.setEnumField(this, 24, need_parsing);
-		return this;
-	}
-	/** C type : AVCodecParserContext* */
-	@Field(25) 
-	public Pointer<AVCodecParserContext > parser() {
-		return this.io.getPointerField(this, 25);
-	}
-	/** C type : AVCodecParserContext* */
-	@Field(25) 
-	public AVStream parser(Pointer<AVCodecParserContext > parser) {
-		this.io.setPointerField(this, 25, parser);
-		return this;
-	}
-	/** C type : AVPacketList* */
-	@Field(26) 
-	public Pointer<AVPacketList > last_in_packet_buffer() {
-		return this.io.getPointerField(this, 26);
-	}
-	/** C type : AVPacketList* */
-	@Field(26) 
-	public AVStream last_in_packet_buffer(Pointer<AVPacketList > last_in_packet_buffer) {
-		this.io.setPointerField(this, 26, last_in_packet_buffer);
-		return this;
-	}
-	/** C type : AVProbeData */
-	@Field(27) 
-	public AVProbeData probe_data() {
-		return this.io.getNativeObjectField(this, 27);
-	}
-	/** C type : AVProbeData */
-	@Field(27) 
-	public AVStream probe_data(AVProbeData probe_data) {
-		this.io.setNativeObjectField(this, 27, probe_data);
-		return this;
-	}
-	/** C type : int64_t[16 + 1] */
-	@Array({16 + 1}) 
-	@Field(28) 
-	public Pointer<Long > pts_buffer() {
-		return this.io.getPointerField(this, 28);
-	}
-	/**
-	 * < Only used if the format does not<br>
-	 * support seeking natively.<br>
-	 * C type : AVIndexEntry*
-	 */
-	@Field(29) 
-	public Pointer<AVIndexEntry > index_entries() {
-		return this.io.getPointerField(this, 29);
-	}
-	/**
-	 * < Only used if the format does not<br>
-	 * support seeking natively.<br>
-	 * C type : AVIndexEntry*
-	 */
-	@Field(29) 
-	public AVStream index_entries(Pointer<AVIndexEntry > index_entries) {
-		this.io.setPointerField(this, 29, index_entries);
-		return this;
-	}
-	@Field(30) 
-	public int nb_index_entries() {
-		return this.io.getIntField(this, 30);
-	}
-	@Field(30) 
-	public AVStream nb_index_entries(int nb_index_entries) {
-		this.io.setIntField(this, 30, nb_index_entries);
-		return this;
-	}
-	@Field(31) 
-	public int index_entries_allocated_size() {
-		return this.io.getIntField(this, 31);
-	}
-	@Field(31) 
-	public AVStream index_entries_allocated_size(int index_entries_allocated_size) {
-		this.io.setIntField(this, 31, index_entries_allocated_size);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(32) 
-	public AVRational r_frame_rate() {
-		return this.io.getNativeObjectField(this, 32);
-	}
-	/** C type : AVRational */
-	@Field(32) 
-	public AVStream r_frame_rate(AVRational r_frame_rate) {
-		this.io.setNativeObjectField(this, 32, r_frame_rate);
-		return this;
-	}
-	@Field(33) 
-	public int stream_identifier() {
-		return this.io.getIntField(this, 33);
-	}
-	@Field(33) 
-	public AVStream stream_identifier(int stream_identifier) {
-		this.io.setIntField(this, 33, stream_identifier);
-		return this;
-	}
-	@Field(34) 
-	public long interleaver_chunk_size() {
-		return this.io.getLongField(this, 34);
-	}
-	@Field(34) 
-	public AVStream interleaver_chunk_size(long interleaver_chunk_size) {
-		this.io.setLongField(this, 34, interleaver_chunk_size);
-		return this;
-	}
-	@Field(35) 
-	public long interleaver_chunk_duration() {
-		return this.io.getLongField(this, 35);
-	}
-	@Field(35) 
-	public AVStream interleaver_chunk_duration(long interleaver_chunk_duration) {
-		this.io.setLongField(this, 35, interleaver_chunk_duration);
-		return this;
-	}
-	@Field(36) 
-	public int request_probe() {
-		return this.io.getIntField(this, 36);
-	}
-	@Field(36) 
-	public AVStream request_probe(int request_probe) {
-		this.io.setIntField(this, 36, request_probe);
-		return this;
-	}
-	@Field(37) 
-	public int skip_to_keyframe() {
-		return this.io.getIntField(this, 37);
-	}
-	@Field(37) 
-	public AVStream skip_to_keyframe(int skip_to_keyframe) {
-		this.io.setIntField(this, 37, skip_to_keyframe);
-		return this;
-	}
-	@Field(38) 
-	public int skip_samples() {
-		return this.io.getIntField(this, 38);
-	}
-	@Field(38) 
-	public AVStream skip_samples(int skip_samples) {
-		this.io.setIntField(this, 38, skip_samples);
-		return this;
-	}
-	@Field(39) 
-	public int nb_decoded_frames() {
-		return this.io.getIntField(this, 39);
-	}
-	@Field(39) 
-	public AVStream nb_decoded_frames(int nb_decoded_frames) {
-		this.io.setIntField(this, 39, nb_decoded_frames);
-		return this;
-	}
-	@Field(40) 
-	public long mux_ts_offset() {
-		return this.io.getLongField(this, 40);
-	}
-	@Field(40) 
-	public AVStream mux_ts_offset(long mux_ts_offset) {
-		this.io.setLongField(this, 40, mux_ts_offset);
-		return this;
-	}
-	@Field(41) 
-	public long pts_wrap_reference() {
-		return this.io.getLongField(this, 41);
-	}
-	@Field(41) 
-	public AVStream pts_wrap_reference(long pts_wrap_reference) {
-		this.io.setLongField(this, 41, pts_wrap_reference);
-		return this;
-	}
-	@Field(42) 
-	public int pts_wrap_behavior() {
-		return this.io.getIntField(this, 42);
-	}
-	@Field(42) 
-	public AVStream pts_wrap_behavior(int pts_wrap_behavior) {
-		this.io.setIntField(this, 42, pts_wrap_behavior);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:158</i> */
-	public static class info_struct extends StructObject {
-		static {
-			BridJ.register();
-		}
-		@Field(0) 
-		public long last_dts() {
-			return this.io.getLongField(this, 0);
-		}
-		@Field(0) 
-		public info_struct last_dts(long last_dts) {
-			this.io.setLongField(this, 0, last_dts);
-			return this;
-		}
-		@Field(1) 
-		public long duration_gcd() {
-			return this.io.getLongField(this, 1);
-		}
-		@Field(1) 
-		public info_struct duration_gcd(long duration_gcd) {
-			this.io.setLongField(this, 1, duration_gcd);
-			return this;
-		}
-		@Field(2) 
-		public int duration_count() {
-			return this.io.getIntField(this, 2);
-		}
-		@Field(2) 
-		public info_struct duration_count(int duration_count) {
-			this.io.setIntField(this, 2, duration_count);
-			return this;
-		}
-		/** C type : double[2][(60 * 12 + 6)]* */
-		@Field(3) 
-		public Pointer<Pointer<Double > > duration_error() {
-			return this.io.getPointerField(this, 3);
-		}
-		/** C type : double[2][(60 * 12 + 6)]* */
-		@Field(3) 
-		public info_struct duration_error(Pointer<Pointer<Double > > duration_error) {
-			this.io.setPointerField(this, 3, duration_error);
-			return this;
-		}
-		@Field(4) 
-		public long codec_info_duration() {
-			return this.io.getLongField(this, 4);
-		}
-		@Field(4) 
-		public info_struct codec_info_duration(long codec_info_duration) {
-			this.io.setLongField(this, 4, codec_info_duration);
-			return this;
-		}
-		@Field(5) 
-		public long codec_info_duration_fields() {
-			return this.io.getLongField(this, 5);
-		}
-		@Field(5) 
-		public info_struct codec_info_duration_fields(long codec_info_duration_fields) {
-			this.io.setLongField(this, 5, codec_info_duration_fields);
-			return this;
-		}
-		@Field(6) 
-		public int found_decoder() {
-			return this.io.getIntField(this, 6);
-		}
-		@Field(6) 
-		public info_struct found_decoder(int found_decoder) {
-			this.io.setIntField(this, 6, found_decoder);
-			return this;
-		}
-		@Field(7) 
-		public long last_duration() {
-			return this.io.getLongField(this, 7);
-		}
-		@Field(7) 
-		public info_struct last_duration(long last_duration) {
-			this.io.setLongField(this, 7, last_duration);
-			return this;
-		}
-		/** Those are used for average framerate estimation. */
-		@Field(8) 
-		public long fps_first_dts() {
-			return this.io.getLongField(this, 8);
-		}
-		/** Those are used for average framerate estimation. */
-		@Field(8) 
-		public info_struct fps_first_dts(long fps_first_dts) {
-			this.io.setLongField(this, 8, fps_first_dts);
-			return this;
-		}
-		@Field(9) 
-		public int fps_first_dts_idx() {
-			return this.io.getIntField(this, 9);
-		}
-		@Field(9) 
-		public info_struct fps_first_dts_idx(int fps_first_dts_idx) {
-			this.io.setIntField(this, 9, fps_first_dts_idx);
-			return this;
-		}
-		@Field(10) 
-		public long fps_last_dts() {
-			return this.io.getLongField(this, 10);
-		}
-		@Field(10) 
-		public info_struct fps_last_dts(long fps_last_dts) {
-			this.io.setLongField(this, 10, fps_last_dts);
-			return this;
-		}
-		@Field(11) 
-		public int fps_last_dts_idx() {
-			return this.io.getIntField(this, 11);
-		}
-		@Field(11) 
-		public info_struct fps_last_dts_idx(int fps_last_dts_idx) {
-			this.io.setIntField(this, 11, fps_last_dts_idx);
-			return this;
-		}
-		public info_struct() {
-			super();
-		}
-		public info_struct(Pointer pointer) {
-			super(pointer);
-		}
-	};
-}
diff -pruN src/org/ffmpeg/avutil/AVClass.java src.bak/org/ffmpeg/avutil/AVClass.java
--- src/org/ffmpeg/avutil/AVClass.java	2014-03-09 09:36:01.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVClass.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,192 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Callback;
-import org.bridj.FlagSet;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.ffmpeg.avutil.AvutilLibrary.AVClassCategory;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:31</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVClass extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > class_name() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVClass class_name(Pointer<Byte > class_name) {
-		this.io.setPointerField(this, 0, class_name);
-		return this;
-	}
-	/** C type : item_name_callback* */
-	@Field(1) 
-	public Pointer<AVClass.item_name_callback > item_name() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : item_name_callback* */
-	@Field(1) 
-	public AVClass item_name(Pointer<AVClass.item_name_callback > item_name) {
-		this.io.setPointerField(this, 1, item_name);
-		return this;
-	}
-	/** C type : const void* */
-	@Field(2) 
-	public Pointer<? > option() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : const void* */
-	@Field(2) 
-	public AVClass option(Pointer<? > option) {
-		this.io.setPointerField(this, 2, option);
-		return this;
-	}
-	@Field(3) 
-	public int version() {
-		return this.io.getIntField(this, 3);
-	}
-	@Field(3) 
-	public AVClass version(int version) {
-		this.io.setIntField(this, 3, version);
-		return this;
-	}
-	@Field(4) 
-	public int log_level_offset_offset() {
-		return this.io.getIntField(this, 4);
-	}
-	@Field(4) 
-	public AVClass log_level_offset_offset(int log_level_offset_offset) {
-		this.io.setIntField(this, 4, log_level_offset_offset);
-		return this;
-	}
-	@Field(5) 
-	public int parent_log_context_offset() {
-		return this.io.getIntField(this, 5);
-	}
-	@Field(5) 
-	public AVClass parent_log_context_offset(int parent_log_context_offset) {
-		this.io.setIntField(this, 5, parent_log_context_offset);
-		return this;
-	}
-	/** C type : child_next_callback* */
-	@Field(6) 
-	public Pointer<AVClass.child_next_callback > child_next() {
-		return this.io.getPointerField(this, 6);
-	}
-	/** C type : child_next_callback* */
-	@Field(6) 
-	public AVClass child_next(Pointer<AVClass.child_next_callback > child_next) {
-		this.io.setPointerField(this, 6, child_next);
-		return this;
-	}
-	/** C type : child_class_next_callback* */
-	@Field(7) 
-	public Pointer<AVClass.child_class_next_callback > child_class_next() {
-		return this.io.getPointerField(this, 7);
-	}
-	/** C type : child_class_next_callback* */
-	@Field(7) 
-	public AVClass child_class_next(Pointer<AVClass.child_class_next_callback > child_class_next) {
-		this.io.setPointerField(this, 7, child_class_next);
-		return this;
-	}
-	/** C type : AVClassCategory */
-	@Field(8) 
-	public IntValuedEnum<AVClassCategory > category() {
-		return this.io.getEnumField(this, 8);
-	}
-	/** C type : AVClassCategory */
-	@Field(8) 
-	public AVClass category(IntValuedEnum<AVClassCategory > category) {
-		this.io.setEnumField(this, 8, category);
-		return this;
-	}
-	/** C type : get_category_callback* */
-	@Field(9) 
-	public Pointer<AVClass.get_category_callback > get_category() {
-		return this.io.getPointerField(this, 9);
-	}
-	/** C type : get_category_callback* */
-	@Field(9) 
-	public AVClass get_category(Pointer<AVClass.get_category_callback > get_category) {
-		this.io.setPointerField(this, 9, get_category);
-		return this;
-	}
-	/** C type : query_ranges_callback* */
-	@Field(10) 
-	public Pointer<AVClass.query_ranges_callback > query_ranges() {
-		return this.io.getPointerField(this, 10);
-	}
-	/** C type : query_ranges_callback* */
-	@Field(10) 
-	public AVClass query_ranges(Pointer<AVClass.query_ranges_callback > query_ranges) {
-		this.io.setPointerField(this, 10, query_ranges);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:26</i> */
-	public static abstract class item_name_callback extends Callback<item_name_callback > {
-		public Pointer<Byte > apply(Pointer<? > ctx) {
-			return Pointer.pointerToAddress(apply(Pointer.getPeer(ctx)), Byte.class);
-		}
-		@Ptr 
-		public long apply(@Ptr long ctx) {
-			return Pointer.getPeer(apply(Pointer.pointerToAddress(ctx)));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:27</i> */
-	public static abstract class child_next_callback extends Callback<child_next_callback > {
-		public Pointer<? > apply(Pointer<? > obj, Pointer<? > prev) {
-			return Pointer.pointerToAddress(apply(Pointer.getPeer(obj), Pointer.getPeer(prev)));
-		}
-		@Ptr 
-		public long apply(@Ptr long obj, @Ptr long prev) {
-			return Pointer.getPeer(apply(Pointer.pointerToAddress(obj), Pointer.pointerToAddress(prev)));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:28</i> */
-	public static abstract class child_class_next_callback extends Callback<child_class_next_callback > {
-		public Pointer<AVClass > apply(Pointer<AVClass > prev) {
-			return Pointer.pointerToAddress(apply(Pointer.getPeer(prev)), AVClass.class);
-		}
-		@Ptr 
-		public long apply(@Ptr long prev) {
-			return Pointer.getPeer(apply(Pointer.pointerToAddress(prev, AVClass.class)));
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:29</i> */
-	public static abstract class get_category_callback extends Callback<get_category_callback > {
-		public IntValuedEnum<AVClassCategory > apply(Pointer<? > ctx) {
-			return FlagSet.fromValue(apply(Pointer.getPeer(ctx)), AVClassCategory.class);
-		}
-		public int apply(@Ptr long ctx) {
-			return (int)apply(Pointer.pointerToAddress(ctx)).value();
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:30</i> */
-	public static abstract class query_ranges_callback extends Callback<query_ranges_callback > {
-		public int apply(Pointer<? > avor, Pointer<? > obj, Pointer<Byte > key, int flags) {
-			return apply(Pointer.getPeer(avor), Pointer.getPeer(obj), Pointer.getPeer(key), flags);
-		}
-		public int apply(@Ptr long avor, @Ptr long obj, @Ptr long key, int flags) {
-			return apply(Pointer.pointerToAddress(avor), Pointer.pointerToAddress(obj), Pointer.pointerToAddress(key, Byte.class), flags);
-		}
-	};
-	public AVClass() {
-		super();
-	}
-	public AVClass(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVDictionaryEntry.java src.bak/org/ffmpeg/avutil/AVDictionaryEntry.java
--- src/org/ffmpeg/avutil/AVDictionaryEntry.java	2014-03-09 09:36:00.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVDictionaryEntry.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h:3</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVDictionaryEntry extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : char* */
-	@Field(0) 
-	public Pointer<Byte > key() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : char* */
-	@Field(0) 
-	public AVDictionaryEntry key(Pointer<Byte > key) {
-		this.io.setPointerField(this, 0, key);
-		return this;
-	}
-	/** C type : char* */
-	@Field(1) 
-	public Pointer<Byte > value() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : char* */
-	@Field(1) 
-	public AVDictionaryEntry value(Pointer<Byte > value) {
-		this.io.setPointerField(this, 1, value);
-		return this;
-	}
-	public AVDictionaryEntry() {
-		super();
-	}
-	public AVDictionaryEntry(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVDictionary.java src.bak/org/ffmpeg/avutil/AVDictionary.java
--- src/org/ffmpeg/avutil/AVDictionary.java	2014-03-09 09:36:00.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVDictionary.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h:6</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVDictionary extends StructObject {
-	static {
-		BridJ.register();
-	}
-	@Field(0) 
-	public int dummy() {
-		return this.io.getIntField(this, 0);
-	}
-	@Field(0) 
-	public AVDictionary dummy(int dummy) {
-		this.io.setIntField(this, 0, dummy);
-		return this;
-	}
-	public AVDictionary() {
-		super();
-	}
-	public AVDictionary(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVFrame.java src.bak/org/ffmpeg/avutil/AVFrame.java
--- src/org/ffmpeg/avutil/AVFrame.java	2014-03-11 17:56:59.747148364 +0100
+++ src.bak/org/ffmpeg/avutil/AVFrame.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,401 +0,0 @@
-package org.ffmpeg.avutil;
-
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Array;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avutil.AVRational;
-import org.ffmpeg.avutil.AVDictionary;
-import org.ffmpeg.avutil.AvutilLibrary.AVColorRange;
-import org.ffmpeg.avutil.AvutilLibrary.AVColorSpace;
-import org.ffmpeg.avutil.AvutilLibrary.AVPictureType;
-
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h:84</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVFrame extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : uint8_t*[8] */
-	@Array({8}) 
-	@Field(0) 
-	public Pointer<Pointer<Byte > > data() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : int[8] */
-	@Array({8}) 
-	@Field(1) 
-	public Pointer<Integer > linesize() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : uint8_t** */
-	@Field(2) 
-	public Pointer<Pointer<Byte > > extended_data() {
-		return this.io.getPointerField(this, 2);
-	}
-	/** C type : uint8_t** */
-	@Field(2) 
-	public AVFrame extended_data(Pointer<Pointer<Byte > > extended_data) {
-		this.io.setPointerField(this, 2, extended_data);
-		return this;
-	}
-	@Field(3) 
-	public int width() {
-		return this.io.getIntField(this, 3);
-	}
-	@Field(3) 
-	public AVFrame width(int width) {
-		this.io.setIntField(this, 3, width);
-		return this;
-	}
-	@Field(4) 
-	public int height() {
-		return this.io.getIntField(this, 4);
-	}
-	@Field(4) 
-	public AVFrame height(int height) {
-		this.io.setIntField(this, 4, height);
-		return this;
-	}
-	@Field(5) 
-	public int nb_samples() {
-		return this.io.getIntField(this, 5);
-	}
-	@Field(5) 
-	public AVFrame nb_samples(int nb_samples) {
-		this.io.setIntField(this, 5, nb_samples);
-		return this;
-	}
-	@Field(6) 
-	public int format() {
-		return this.io.getIntField(this, 6);
-	}
-	@Field(6) 
-	public AVFrame format(int format) {
-		this.io.setIntField(this, 6, format);
-		return this;
-	}
-	@Field(7) 
-	public int key_frame() {
-		return this.io.getIntField(this, 7);
-	}
-	@Field(7) 
-	public AVFrame key_frame(int key_frame) {
-		this.io.setIntField(this, 7, key_frame);
-		return this;
-	}
-	/** C type : AVPictureType */
-	@Field(8) 
-	public IntValuedEnum<AVPictureType > pict_type() {
-		return this.io.getEnumField(this, 8);
-	}
-	/** C type : AVPictureType */
-	@Field(8) 
-	public AVFrame pict_type(IntValuedEnum<AVPictureType > pict_type) {
-		this.io.setEnumField(this, 8, pict_type);
-		return this;
-	}
-	/** C type : AVRational */
-	@Field(9) 
-	public AVRational sample_aspect_ratio() {
-		return this.io.getNativeObjectField(this, 9);
-	}
-	/** C type : AVRational */
-	@Field(9) 
-	public AVFrame sample_aspect_ratio(AVRational sample_aspect_ratio) {
-		this.io.setNativeObjectField(this, 9, sample_aspect_ratio);
-		return this;
-	}
-	@Field(10) 
-	public long pts() {
-		return this.io.getLongField(this, 10);
-	}
-	@Field(10) 
-	public AVFrame pts(long pts) {
-		this.io.setLongField(this, 10, pts);
-		return this;
-	}
-	@Field(11) 
-	public long pkt_pts() {
-		return this.io.getLongField(this, 11);
-	}
-	@Field(11) 
-	public AVFrame pkt_pts(long pkt_pts) {
-		this.io.setLongField(this, 11, pkt_pts);
-		return this;
-	}
-	@Field(12) 
-	public long pkt_dts() {
-		return this.io.getLongField(this, 12);
-	}
-	@Field(12) 
-	public AVFrame pkt_dts(long pkt_dts) {
-		this.io.setLongField(this, 12, pkt_dts);
-		return this;
-	}
-	@Field(13) 
-	public int coded_picture_number() {
-		return this.io.getIntField(this, 13);
-	}
-	@Field(13) 
-	public AVFrame coded_picture_number(int coded_picture_number) {
-		this.io.setIntField(this, 13, coded_picture_number);
-		return this;
-	}
-	@Field(14) 
-	public int display_picture_number() {
-		return this.io.getIntField(this, 14);
-	}
-	@Field(14) 
-	public AVFrame display_picture_number(int display_picture_number) {
-		this.io.setIntField(this, 14, display_picture_number);
-		return this;
-	}
-	@Field(15) 
-	public int quality() {
-		return this.io.getIntField(this, 15);
-	}
-	@Field(15) 
-	public AVFrame quality(int quality) {
-		this.io.setIntField(this, 15, quality);
-		return this;
-	}
-	/** C type : void* */
-	@Field(16) 
-	public Pointer<? > opaque() {
-		return this.io.getPointerField(this, 16);
-	}
-	/** C type : void* */
-	@Field(16) 
-	public AVFrame opaque(Pointer<? > opaque) {
-		this.io.setPointerField(this, 16, opaque);
-		return this;
-	}
-	/** C type : uint64_t[8] */
-	@Array({8}) 
-	@Field(17) 
-	public Pointer<Long > error() {
-		return this.io.getPointerField(this, 17);
-	}
-	@Field(18) 
-	public int repeat_pict() {
-		return this.io.getIntField(this, 18);
-	}
-	@Field(18) 
-	public AVFrame repeat_pict(int repeat_pict) {
-		this.io.setIntField(this, 18, repeat_pict);
-		return this;
-	}
-	@Field(19) 
-	public int interlaced_frame() {
-		return this.io.getIntField(this, 19);
-	}
-	@Field(19) 
-	public AVFrame interlaced_frame(int interlaced_frame) {
-		this.io.setIntField(this, 19, interlaced_frame);
-		return this;
-	}
-	@Field(20) 
-	public int top_field_first() {
-		return this.io.getIntField(this, 20);
-	}
-	@Field(20) 
-	public AVFrame top_field_first(int top_field_first) {
-		this.io.setIntField(this, 20, top_field_first);
-		return this;
-	}
-	@Field(21) 
-	public int palette_has_changed() {
-		return this.io.getIntField(this, 21);
-	}
-	@Field(21) 
-	public AVFrame palette_has_changed(int palette_has_changed) {
-		this.io.setIntField(this, 21, palette_has_changed);
-		return this;
-	}
-	@Field(22) 
-	public long reordered_opaque() {
-		return this.io.getLongField(this, 22);
-	}
-	@Field(22) 
-	public AVFrame reordered_opaque(long reordered_opaque) {
-		this.io.setLongField(this, 22, reordered_opaque);
-		return this;
-	}
-	@Field(23) 
-	public int sample_rate() {
-		return this.io.getIntField(this, 23);
-	}
-	@Field(23) 
-	public AVFrame sample_rate(int sample_rate) {
-		this.io.setIntField(this, 23, sample_rate);
-		return this;
-	}
-	@Field(24) 
-	public long channel_layout() {
-		return this.io.getLongField(this, 24);
-	}
-	@Field(24) 
-	public AVFrame channel_layout(long channel_layout) {
-		this.io.setLongField(this, 24, channel_layout);
-		return this;
-	}
-	/** C type : void*[8] */
-	@Array({8}) 
-	@Field(25) 
-	public Pointer<Pointer<? > > buf() {
-		return this.io.getPointerField(this, 25);
-	}
-	/** C type : void** */
-	@Field(26) 
-	public Pointer<Pointer<? > > extended_buf() {
-		return this.io.getPointerField(this, 26);
-	}
-	/** C type : void** */
-	@Field(26) 
-	public AVFrame extended_buf(Pointer<Pointer<? > > extended_buf) {
-		this.io.setPointerField(this, 26, extended_buf);
-		return this;
-	}
-	@Field(27) 
-	public int nb_extended_buf() {
-		return this.io.getIntField(this, 27);
-	}
-	@Field(27) 
-	public AVFrame nb_extended_buf(int nb_extended_buf) {
-		this.io.setIntField(this, 27, nb_extended_buf);
-		return this;
-	}
-	/** C type : AVFrameSideData** */
-	@Field(28) 
-	public Pointer<Pointer<AVFrameSideData > > side_data() {
-		return this.io.getPointerField(this, 28);
-	}
-	/** C type : AVFrameSideData** */
-	@Field(28) 
-	public AVFrame side_data(Pointer<Pointer<AVFrameSideData > > side_data) {
-		this.io.setPointerField(this, 28, side_data);
-		return this;
-	}
-	@Field(29) 
-	public int nb_side_data() {
-		return this.io.getIntField(this, 29);
-	}
-	@Field(29) 
-	public AVFrame nb_side_data(int nb_side_data) {
-		this.io.setIntField(this, 29, nb_side_data);
-		return this;
-	}
-	@Field(30) 
-	public long best_effort_timestamp() {
-		return this.io.getLongField(this, 30);
-	}
-	@Field(30) 
-	public AVFrame best_effort_timestamp(long best_effort_timestamp) {
-		this.io.setLongField(this, 30, best_effort_timestamp);
-		return this;
-	}
-	@Field(31) 
-	public long pkt_pos() {
-		return this.io.getLongField(this, 31);
-	}
-	@Field(31) 
-	public AVFrame pkt_pos(long pkt_pos) {
-		this.io.setLongField(this, 31, pkt_pos);
-		return this;
-	}
-	@Field(32) 
-	public long pkt_duration() {
-		return this.io.getLongField(this, 32);
-	}
-	@Field(32) 
-	public AVFrame pkt_duration(long pkt_duration) {
-		this.io.setLongField(this, 32, pkt_duration);
-		return this;
-	}
-	/** C type : AVDictionary* */
-	@Field(33) 
-	public Pointer<AVDictionary > metadata() {
-		return this.io.getPointerField(this, 33);
-	}
-	/** C type : AVDictionary* */
-	@Field(33) 
-	public AVFrame metadata(Pointer<AVDictionary > metadata) {
-		this.io.setPointerField(this, 33, metadata);
-		return this;
-	}
-	@Field(34) 
-	public int decode_error_flags() {
-		return this.io.getIntField(this, 34);
-	}
-	@Field(34) 
-	public AVFrame decode_error_flags(int decode_error_flags) {
-		this.io.setIntField(this, 34, decode_error_flags);
-		return this;
-	}
-	@Field(35) 
-	public int channels() {
-		return this.io.getIntField(this, 35);
-	}
-	@Field(35) 
-	public AVFrame channels(int channels) {
-		this.io.setIntField(this, 35, channels);
-		return this;
-	}
-	@Field(36) 
-	public int pkt_size() {
-		return this.io.getIntField(this, 36);
-	}
-	@Field(36) 
-	public AVFrame pkt_size(int pkt_size) {
-		this.io.setIntField(this, 36, pkt_size);
-		return this;
-	}
-	/** C type : AVColorSpace */
-	@Field(37) 
-	public IntValuedEnum<AVColorSpace > colorspace() {
-		return this.io.getEnumField(this, 37);
-	}
-	/** C type : AVColorSpace */
-	@Field(37) 
-	public AVFrame colorspace(IntValuedEnum<AVColorSpace > colorspace) {
-		this.io.setEnumField(this, 37, colorspace);
-		return this;
-	}
-	/** C type : AVColorRange */
-	@Field(38) 
-	public IntValuedEnum<AVColorRange > color_range() {
-		return this.io.getEnumField(this, 38);
-	}
-	/** C type : AVColorRange */
-	@Field(38) 
-	public AVFrame color_range(IntValuedEnum<AVColorRange > color_range) {
-		this.io.setEnumField(this, 38, color_range);
-		return this;
-	}
-	/** C type : void* */
-	@Field(39) 
-	public Pointer<? > qp_table_buf() {
-		return this.io.getPointerField(this, 39);
-	}
-	/** C type : void* */
-	@Field(39) 
-	public AVFrame qp_table_buf(Pointer<? > qp_table_buf) {
-		this.io.setPointerField(this, 39, qp_table_buf);
-		return this;
-	}
-	public AVFrame() {
-		super();
-	}
-	public AVFrame(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVFrameSideData.java src.bak/org/ffmpeg/avutil/AVFrameSideData.java
--- src/org/ffmpeg/avutil/AVFrameSideData.java	2014-03-09 09:36:00.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVFrameSideData.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,68 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.ffmpeg.avutil.AvutilLibrary.AVFrameSideDataType;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h:36</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVFrameSideData extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : AVFrameSideDataType */
-	@Field(0) 
-	public IntValuedEnum<AVFrameSideDataType > type() {
-		return this.io.getEnumField(this, 0);
-	}
-	/** C type : AVFrameSideDataType */
-	@Field(0) 
-	public AVFrameSideData type(IntValuedEnum<AVFrameSideDataType > type) {
-		this.io.setEnumField(this, 0, type);
-		return this;
-	}
-	/** C type : uint8_t* */
-	@Field(1) 
-	public Pointer<Byte > data() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : uint8_t* */
-	@Field(1) 
-	public AVFrameSideData data(Pointer<Byte > data) {
-		this.io.setPointerField(this, 1, data);
-		return this;
-	}
-	@Field(2) 
-	public int size() {
-		return this.io.getIntField(this, 2);
-	}
-	@Field(2) 
-	public AVFrameSideData size(int size) {
-		this.io.setIntField(this, 2, size);
-		return this;
-	}
-	/** C type : AVDictionary* */
-	@Field(3) 
-	public Pointer<AVDictionary > metadata() {
-		return this.io.getPointerField(this, 3);
-	}
-	/** C type : AVDictionary* */
-	@Field(3) 
-	public AVFrameSideData metadata(Pointer<AVDictionary > metadata) {
-		this.io.setPointerField(this, 3, metadata);
-		return this;
-	}
-	public AVFrameSideData() {
-		super();
-	}
-	public AVFrameSideData(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVOption.java src.bak/org/ffmpeg/avutil/AVOption.java
--- src/org/ffmpeg/avutil/AVOption.java	2014-03-09 09:36:01.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVOption.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,181 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-import org.bridj.ann.Union;
-import org.ffmpeg.avutil.AvutilLibrary.AVOptionType;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:42</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVOption extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > name() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVOption name(Pointer<Byte > name) {
-		this.io.setPointerField(this, 0, name);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public Pointer<Byte > help() {
-		return this.io.getPointerField(this, 1);
-	}
-	/** C type : const char* */
-	@Field(1) 
-	public AVOption help(Pointer<Byte > help) {
-		this.io.setPointerField(this, 1, help);
-		return this;
-	}
-	@Field(2) 
-	public int offset() {
-		return this.io.getIntField(this, 2);
-	}
-	@Field(2) 
-	public AVOption offset(int offset) {
-		this.io.setIntField(this, 2, offset);
-		return this;
-	}
-	/** C type : AVOptionType */
-	@Field(3) 
-	public IntValuedEnum<AVOptionType > type() {
-		return this.io.getEnumField(this, 3);
-	}
-	/** C type : AVOptionType */
-	@Field(3) 
-	public AVOption type(IntValuedEnum<AVOptionType > type) {
-		this.io.setEnumField(this, 3, type);
-		return this;
-	}
-	/** C type : default_val_union */
-	@Field(4) 
-	public AVOption.default_val_union default_val() {
-		return this.io.getNativeObjectField(this, 4);
-	}
-	/** C type : default_val_union */
-	@Field(4) 
-	public AVOption default_val(AVOption.default_val_union default_val) {
-		this.io.setNativeObjectField(this, 4, default_val);
-		return this;
-	}
-	/** < minimum valid value for the option */
-	@Field(5) 
-	public double min() {
-		return this.io.getDoubleField(this, 5);
-	}
-	/** < minimum valid value for the option */
-	@Field(5) 
-	public AVOption min(double min) {
-		this.io.setDoubleField(this, 5, min);
-		return this;
-	}
-	/** < maximum valid value for the option */
-	@Field(6) 
-	public double max() {
-		return this.io.getDoubleField(this, 6);
-	}
-	/** < maximum valid value for the option */
-	@Field(6) 
-	public AVOption max(double max) {
-		this.io.setDoubleField(this, 6, max);
-		return this;
-	}
-	@Field(7) 
-	public int flags() {
-		return this.io.getIntField(this, 7);
-	}
-	@Field(7) 
-	public AVOption flags(int flags) {
-		this.io.setIntField(this, 7, flags);
-		return this;
-	}
-	/** C type : const char* */
-	@Field(8) 
-	public Pointer<Byte > unit() {
-		return this.io.getPointerField(this, 8);
-	}
-	/** C type : const char* */
-	@Field(8) 
-	public AVOption unit(Pointer<Byte > unit) {
-		this.io.setPointerField(this, 8, unit);
-		return this;
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:41</i> */
-	@Union 
-	public static class default_val_union extends StructObject {
-		static {
-			BridJ.register();
-		}
-		@Field(0) 
-		public long i64() {
-			return this.io.getLongField(this, 0);
-		}
-		@Field(0) 
-		public default_val_union i64(long i64) {
-			this.io.setLongField(this, 0, i64);
-			return this;
-		}
-		@Field(1) 
-		public double dbl() {
-			return this.io.getDoubleField(this, 1);
-		}
-		@Field(1) 
-		public default_val_union dbl(double dbl) {
-			this.io.setDoubleField(this, 1, dbl);
-			return this;
-		}
-		/** C type : const char* */
-		@Field(2) 
-		public Pointer<Byte > str() {
-			return this.io.getPointerField(this, 2);
-		}
-		/** C type : const char* */
-		@Field(2) 
-		public default_val_union str(Pointer<Byte > str) {
-			this.io.setPointerField(this, 2, str);
-			return this;
-		}
-		/**
-		 * TODO those are unused now<br>
-		 * C type : AVRational
-		 */
-		@Field(3) 
-		public AVRational q() {
-			return this.io.getNativeObjectField(this, 3);
-		}
-		/**
-		 * TODO those are unused now<br>
-		 * C type : AVRational
-		 */
-		@Field(3) 
-		public default_val_union q(AVRational q) {
-			this.io.setNativeObjectField(this, 3, q);
-			return this;
-		}
-		public default_val_union() {
-			super();
-		}
-		public default_val_union(Pointer pointer) {
-			super(pointer);
-		}
-	};
-	public AVOption() {
-		super();
-	}
-	public AVOption(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVOptionRange.java src.bak/org/ffmpeg/avutil/AVOptionRange.java
--- src/org/ffmpeg/avutil/AVOptionRange.java	2014-03-09 09:36:01.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVOptionRange.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,90 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:55</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVOptionRange extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public Pointer<Byte > str() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : const char* */
-	@Field(0) 
-	public AVOptionRange str(Pointer<Byte > str) {
-		this.io.setPointerField(this, 0, str);
-		return this;
-	}
-	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
-	@Field(1) 
-	public double value_min() {
-		return this.io.getDoubleField(this, 1);
-	}
-	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
-	@Field(1) 
-	public AVOptionRange value_min(double value_min) {
-		this.io.setDoubleField(this, 1, value_min);
-		return this;
-	}
-	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
-	@Field(2) 
-	public double value_max() {
-		return this.io.getDoubleField(this, 2);
-	}
-	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
-	@Field(2) 
-	public AVOptionRange value_max(double value_max) {
-		this.io.setDoubleField(this, 2, value_max);
-		return this;
-	}
-	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
-	@Field(3) 
-	public double component_min() {
-		return this.io.getDoubleField(this, 3);
-	}
-	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
-	@Field(3) 
-	public AVOptionRange component_min(double component_min) {
-		this.io.setDoubleField(this, 3, component_min);
-		return this;
-	}
-	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
-	@Field(4) 
-	public double component_max() {
-		return this.io.getDoubleField(this, 4);
-	}
-	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
-	@Field(4) 
-	public AVOptionRange component_max(double component_max) {
-		this.io.setDoubleField(this, 4, component_max);
-		return this;
-	}
-	/** < if set to 1 the struct encodes a range, if set to 0 a single value */
-	@Field(5) 
-	public int is_range() {
-		return this.io.getIntField(this, 5);
-	}
-	/** < if set to 1 the struct encodes a range, if set to 0 a single value */
-	@Field(5) 
-	public AVOptionRange is_range(int is_range) {
-		this.io.setIntField(this, 5, is_range);
-		return this;
-	}
-	public AVOptionRange() {
-		super();
-	}
-	public AVOptionRange(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVOptionRanges.java src.bak/org/ffmpeg/avutil/AVOptionRanges.java
--- src/org/ffmpeg/avutil/AVOptionRanges.java	2014-03-09 09:36:01.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVOptionRanges.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,44 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:59</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVOptionRanges extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** C type : AVOptionRange** */
-	@Field(0) 
-	public Pointer<Pointer<AVOptionRange > > range() {
-		return this.io.getPointerField(this, 0);
-	}
-	/** C type : AVOptionRange** */
-	@Field(0) 
-	public AVOptionRanges range(Pointer<Pointer<AVOptionRange > > range) {
-		this.io.setPointerField(this, 0, range);
-		return this;
-	}
-	@Field(1) 
-	public int nb_ranges() {
-		return this.io.getIntField(this, 1);
-	}
-	@Field(1) 
-	public AVOptionRanges nb_ranges(int nb_ranges) {
-		this.io.setIntField(this, 1, nb_ranges);
-		return this;
-	}
-	public AVOptionRanges() {
-		super();
-	}
-	public AVOptionRanges(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AVRational.java src.bak/org/ffmpeg/avutil/AVRational.java
--- src/org/ffmpeg/avutil/AVRational.java	2014-03-09 09:36:00.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AVRational.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-package org.ffmpeg.avutil;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/rational.h:5</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-public class AVRational extends StructObject {
-	static {
-		BridJ.register();
-	}
-	/** < numerator */
-	@Field(0) 
-	public int num() {
-		return this.io.getIntField(this, 0);
-	}
-	/** < numerator */
-	@Field(0) 
-	public AVRational num(int num) {
-		this.io.setIntField(this, 0, num);
-		return this;
-	}
-	/** < denominator */
-	@Field(1) 
-	public int den() {
-		return this.io.getIntField(this, 1);
-	}
-	/** < denominator */
-	@Field(1) 
-	public AVRational den(int den) {
-		this.io.setIntField(this, 1, den);
-		return this;
-	}
-	public AVRational() {
-		super();
-	}
-	public AVRational(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/org/ffmpeg/avutil/AvutilLibrary.java src.bak/org/ffmpeg/avutil/AvutilLibrary.java
--- src/org/ffmpeg/avutil/AvutilLibrary.java	2014-03-11 18:01:20.000000000 +0100
+++ src.bak/org/ffmpeg/avutil/AvutilLibrary.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,771 +0,0 @@
-package org.ffmpeg.avutil;
-import java.util.Collections;
-import java.util.Iterator;
-import org.bridj.BridJ;
-import org.bridj.CRuntime;
-import org.bridj.FlagSet;
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.bridj.ann.Runtime;
-/**
- * Wrapper for library <b>avutil</b><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("avutil") 
-@Runtime(CRuntime.class) 
-public class AvutilLibrary {
-	static {
-		BridJ.register();
-	}
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/avutil.h:11</i>
-	 */
-	public enum AVMediaType implements IntValuedEnum<AVMediaType > {
-		/** < Usually treated as AVMEDIA_TYPE_DATA */
-		AVMEDIA_TYPE_UNKNOWN(-1),
-		AVMEDIA_TYPE_VIDEO(0),
-		AVMEDIA_TYPE_AUDIO(1),
-		/** < Opaque data information usually continuous */
-		AVMEDIA_TYPE_DATA(2),
-		AVMEDIA_TYPE_SUBTITLE(3),
-		/** < Opaque data information usually sparse */
-		AVMEDIA_TYPE_ATTACHMENT(4),
-		AVMEDIA_TYPE_NB(5);
-		AVMediaType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVMediaType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVMediaType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/avutil.h:29</i>
-	 */
-	public enum AVPictureType implements IntValuedEnum<AVPictureType > {
-		/** < Undefined */
-		AV_PICTURE_TYPE_NONE(0),
-		/** < Intra */
-		AV_PICTURE_TYPE_I(1),
-		/** < Predicted */
-		AV_PICTURE_TYPE_P(2),
-		/** < Bi-dir predicted */
-		AV_PICTURE_TYPE_B(3),
-		/** < S(GMC)-VOP MPEG4 */
-		AV_PICTURE_TYPE_S(4),
-		/** < Switching Intra */
-		AV_PICTURE_TYPE_SI(5),
-		/** < Switching Predicted */
-		AV_PICTURE_TYPE_SP(6),
-		/** < BI type */
-		AV_PICTURE_TYPE_BI(7);
-		AVPictureType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVPictureType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVPictureType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h:15</i>
-	 */
-	public enum AVColorSpace implements IntValuedEnum<AVColorSpace > {
-		AVCOL_SPC_RGB(0),
-		/** < also ITU-R BT1361 / IEC 61966-2-4 xvYCC709 / SMPTE RP177 Annex B */
-		AVCOL_SPC_BT709(1),
-		AVCOL_SPC_UNSPECIFIED(2),
-		AVCOL_SPC_FCC(4),
-		/** < also ITU-R BT601-6 625 / ITU-R BT1358 625 / ITU-R BT1700 625 PAL & SECAM / IEC 61966-2-4 xvYCC601 */
-		AVCOL_SPC_BT470BG(5),
-		/** < also ITU-R BT601-6 525 / ITU-R BT1358 525 / ITU-R BT1700 NTSC / functionally identical to above */
-		AVCOL_SPC_SMPTE170M(6),
-		AVCOL_SPC_SMPTE240M(7),
-		/** < Used by Dirac / VC-2 and H.264 FRext, see ITU-T SG16 */
-		AVCOL_SPC_YCOCG(8),
-		/** < Not part of ABI */
-		AVCOL_SPC_NB(9);
-		AVColorSpace(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVColorSpace > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVColorSpace > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h:24</i>
-	 */
-	public enum AVColorRange implements IntValuedEnum<AVColorRange > {
-		AVCOL_RANGE_UNSPECIFIED(0),
-		/** < the normal 219*2^(n-8) "MPEG" YUV ranges */
-		AVCOL_RANGE_MPEG(1),
-		/** < the normal     2^n-1   "JPEG" YUV ranges */
-		AVCOL_RANGE_JPEG(2),
-		/** < Not part of ABI */
-		AVCOL_RANGE_NB(3);
-		AVColorRange(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVColorRange > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVColorRange > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h:28</i>
-	 */
-	public enum AVFrameSideDataType implements IntValuedEnum<AVFrameSideDataType > {
-		/** The data is the AVPanScan struct defined in libavcodec. */
-		AV_FRAME_DATA_PANSCAN(0);
-		AVFrameSideDataType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVFrameSideDataType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVFrameSideDataType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:20</i>
-	 */
-	public enum AVOptionType implements IntValuedEnum<AVOptionType > {
-		AV_OPT_TYPE_FLAGS(0),
-		AV_OPT_TYPE_INT(1),
-		AV_OPT_TYPE_INT64(2),
-		AV_OPT_TYPE_DOUBLE(3),
-		AV_OPT_TYPE_FLOAT(4),
-		AV_OPT_TYPE_STRING(5),
-		AV_OPT_TYPE_RATIONAL(6),
-		/** < offset must point to a pointer immediately followed by an int for the length */
-		AV_OPT_TYPE_BINARY(7),
-		AV_OPT_TYPE_CONST(128),
-		/** < offset must point to two consecutive integers */
-		AV_OPT_TYPE_IMAGE_SIZE((('E') | (('Z') << 8) | (('I') << 16) | ('S' << 24))),
-		AV_OPT_TYPE_PIXEL_FMT((('T') | (('M') << 8) | (('F') << 16) | ('P' << 24))),
-		AV_OPT_TYPE_SAMPLE_FMT((('T') | (('M') << 8) | (('F') << 16) | ('S' << 24))),
-		/** < offset must point to AVRational */
-		AV_OPT_TYPE_VIDEO_RATE((('T') | (('A') << 8) | (('R') << 16) | ('V' << 24))),
-		AV_OPT_TYPE_DURATION(((' ') | (('R') << 8) | (('U') << 16) | ('D' << 24))),
-		AV_OPT_TYPE_COLOR((('R') | (('L') << 8) | (('O') << 16) | ('C' << 24))),
-		AV_OPT_TYPE_CHANNEL_LAYOUT((('A') | (('L') << 8) | (('H') << 16) | ('C' << 24)));
-		AVOptionType(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVOptionType > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVOptionType > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/log.h:13</i>
-	 */
-	public enum AVClassCategory implements IntValuedEnum<AVClassCategory > {
-		AV_CLASS_CATEGORY_NA(0),
-		AV_CLASS_CATEGORY_INPUT(1),
-		AV_CLASS_CATEGORY_OUTPUT(2),
-		AV_CLASS_CATEGORY_MUXER(3),
-		AV_CLASS_CATEGORY_DEMUXER(4),
-		AV_CLASS_CATEGORY_ENCODER(5),
-		AV_CLASS_CATEGORY_DECODER(6),
-		AV_CLASS_CATEGORY_FILTER(7),
-		AV_CLASS_CATEGORY_BITSTREAM_FILTER(8),
-		AV_CLASS_CATEGORY_SWSCALER(9),
-		AV_CLASS_CATEGORY_SWRESAMPLER(10),
-		AV_CLASS_CATEGORY_NB(11);
-		AVClassCategory(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVClassCategory > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVClassCategory > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/pixfmt.h:315</i>
-	 */
-	public enum AVPixelFormat implements IntValuedEnum<AVPixelFormat > {
-		AV_PIX_FMT_NONE(-1),
-		/** < planar YUV 4:2:0, 12bpp, (1 Cr & Cb sample per 2x2 Y samples) */
-		AV_PIX_FMT_YUV420P(0),
-		/** < packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr */
-		AV_PIX_FMT_YUYV422(1),
-		/** < packed RGB 8:8:8, 24bpp, RGBRGB... */
-		AV_PIX_FMT_RGB24(2),
-		/** < packed RGB 8:8:8, 24bpp, BGRBGR... */
-		AV_PIX_FMT_BGR24(3),
-		/** < planar YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples) */
-		AV_PIX_FMT_YUV422P(4),
-		/** < planar YUV 4:4:4, 24bpp, (1 Cr & Cb sample per 1x1 Y samples) */
-		AV_PIX_FMT_YUV444P(5),
-		/** < planar YUV 4:1:0,  9bpp, (1 Cr & Cb sample per 4x4 Y samples) */
-		AV_PIX_FMT_YUV410P(6),
-		/** < planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples) */
-		AV_PIX_FMT_YUV411P(7),
-		/** <        Y        ,  8bpp */
-		AV_PIX_FMT_GRAY8(8),
-		/** <        Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb */
-		AV_PIX_FMT_MONOWHITE(9),
-		/** <        Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb */
-		AV_PIX_FMT_MONOBLACK(10),
-		/** < 8 bit with PIX_FMT_RGB32 palette */
-		AV_PIX_FMT_PAL8(11),
-		/** < planar YUV 4:2:0, 12bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV420P and setting color_range */
-		AV_PIX_FMT_YUVJ420P(12),
-		/** < planar YUV 4:2:2, 16bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV422P and setting color_range */
-		AV_PIX_FMT_YUVJ422P(13),
-		/** < planar YUV 4:4:4, 24bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV444P and setting color_range */
-		AV_PIX_FMT_YUVJ444P(14),
-		/** < XVideo Motion Acceleration via common packet passing */
-		AV_PIX_FMT_XVMC_MPEG2_MC(15),
-		AV_PIX_FMT_XVMC_MPEG2_IDCT(16),
-		/** < packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1 */
-		AV_PIX_FMT_UYVY422(17),
-		/** < packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3 */
-		AV_PIX_FMT_UYYVYY411(18),
-		/** < packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb) */
-		AV_PIX_FMT_BGR8(19),
-		/** < packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits */
-		AV_PIX_FMT_BGR4(20),
-		/** < packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb) */
-		AV_PIX_FMT_BGR4_BYTE(21),
-		/** < packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb) */
-		AV_PIX_FMT_RGB8(22),
-		/** < packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits */
-		AV_PIX_FMT_RGB4(23),
-		/** < packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb) */
-		AV_PIX_FMT_RGB4_BYTE(24),
-		/** < planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved (first byte U and the following byte V) */
-		AV_PIX_FMT_NV12(25),
-		/** < as above, but U and V bytes are swapped */
-		AV_PIX_FMT_NV21(26),
-		/** < packed ARGB 8:8:8:8, 32bpp, ARGBARGB... */
-		AV_PIX_FMT_ARGB(27),
-		/** < packed RGBA 8:8:8:8, 32bpp, RGBARGBA... */
-		AV_PIX_FMT_RGBA(28),
-		/** < packed ABGR 8:8:8:8, 32bpp, ABGRABGR... */
-		AV_PIX_FMT_ABGR(29),
-		/** < packed BGRA 8:8:8:8, 32bpp, BGRABGRA... */
-		AV_PIX_FMT_BGRA(30),
-		/** <        Y        , 16bpp, big-endian */
-		AV_PIX_FMT_GRAY16BE(31),
-		/** <        Y        , 16bpp, little-endian */
-		AV_PIX_FMT_GRAY16LE(32),
-		/** < planar YUV 4:4:0 (1 Cr & Cb sample per 1x2 Y samples) */
-		AV_PIX_FMT_YUV440P(33),
-		/** < planar YUV 4:4:0 full scale (JPEG), deprecated in favor of PIX_FMT_YUV440P and setting color_range */
-		AV_PIX_FMT_YUVJ440P(34),
-		/** < planar YUV 4:2:0, 20bpp, (1 Cr & Cb sample per 2x2 Y & A samples) */
-		AV_PIX_FMT_YUVA420P(35),
-		/** < packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R/G/B component is stored as big-endian */
-		AV_PIX_FMT_RGB48BE(36),
-		/** < packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R/G/B component is stored as little-endian */
-		AV_PIX_FMT_RGB48LE(37),
-		/** < packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian */
-		AV_PIX_FMT_RGB565BE(38),
-		/** < packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian */
-		AV_PIX_FMT_RGB565LE(39),
-		/** < packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), big-endian, most significant bit to 0 */
-		AV_PIX_FMT_RGB555BE(40),
-		/** < packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), little-endian, most significant bit to 0 */
-		AV_PIX_FMT_RGB555LE(41),
-		/** < packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian */
-		AV_PIX_FMT_BGR565BE(42),
-		/** < packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian */
-		AV_PIX_FMT_BGR565LE(43),
-		/** < packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), big-endian, most significant bit to 1 */
-		AV_PIX_FMT_BGR555BE(44),
-		/** < packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), little-endian, most significant bit to 1 */
-		AV_PIX_FMT_BGR555LE(45),
-		/** < HW acceleration through VA API at motion compensation entry-point, Picture.data[3] contains a vaapi_render_state struct which contains macroblocks as well as various fields extracted from headers */
-		AV_PIX_FMT_VAAPI_MOCO(46),
-		/** < HW acceleration through VA API at IDCT entry-point, Picture.data[3] contains a vaapi_render_state struct which contains fields extracted from headers */
-		AV_PIX_FMT_VAAPI_IDCT(47),
-		/** < HW decoding through VA API, Picture.data[3] contains a vaapi_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers */
-		AV_PIX_FMT_VAAPI_VLD(48),
-		/** < planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian */
-		AV_PIX_FMT_YUV420P16LE(49),
-		/** < planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian */
-		AV_PIX_FMT_YUV420P16BE(50),
-		/** < planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV422P16LE(51),
-		/** < planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV422P16BE(52),
-		/** < planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV444P16LE(53),
-		/** < planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV444P16BE(54),
-		/** < HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer */
-		AV_PIX_FMT_DXVA2_VLD(55),
-		/** < packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), little-endian, most significant bits to 0 */
-		AV_PIX_FMT_RGB444LE(56),
-		/** < packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), big-endian, most significant bits to 0 */
-		AV_PIX_FMT_RGB444BE(57),
-		/** < packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), little-endian, most significant bits to 1 */
-		AV_PIX_FMT_BGR444LE(58),
-		/** < packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), big-endian, most significant bits to 1 */
-		AV_PIX_FMT_BGR444BE(59),
-		/** < 8bit gray, 8bit alpha */
-		AV_PIX_FMT_GRAY8A(60),
-		/** < packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R/G/B component is stored as big-endian */
-		AV_PIX_FMT_BGR48BE(61),
-		/** < packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R/G/B component is stored as little-endian */
-		AV_PIX_FMT_BGR48LE(62),
-		/**
-		 * The following 12 formats have the disadvantage of needing 1 format for each bit depth.<br>
-		 * Notice that each 9/10 bits sample is stored in 16 bits with extra padding.<br>
-		 * If you want to support multiple bit depths, then using AV_PIX_FMT_YUV420P16* with the bpp stored separately is better.<br>
-		 * < planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian
-		 */
-		AV_PIX_FMT_YUV420P9BE(63),
-		/** < planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian */
-		AV_PIX_FMT_YUV420P9LE(64),
-		/** < planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian */
-		AV_PIX_FMT_YUV420P10BE(65),
-		/** < planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian */
-		AV_PIX_FMT_YUV420P10LE(66),
-		/** < planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV422P10BE(67),
-		/** < planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV422P10LE(68),
-		/** < planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV444P9BE(69),
-		/** < planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV444P9LE(70),
-		/** < planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV444P10BE(71),
-		/** < planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV444P10LE(72),
-		/** < planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV422P9BE(73),
-		/** < planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV422P9LE(74),
-		/** < hardware decoding through VDA */
-		AV_PIX_FMT_VDA_VLD(75),
-		/** < planar GBR 4:4:4 24bpp */
-		AV_PIX_FMT_GBRP(76),
-		/** < planar GBR 4:4:4 27bpp, big-endian */
-		AV_PIX_FMT_GBRP9BE(77),
-		/** < planar GBR 4:4:4 27bpp, little-endian */
-		AV_PIX_FMT_GBRP9LE(78),
-		/** < planar GBR 4:4:4 30bpp, big-endian */
-		AV_PIX_FMT_GBRP10BE(79),
-		/** < planar GBR 4:4:4 30bpp, little-endian */
-		AV_PIX_FMT_GBRP10LE(80),
-		/** < planar GBR 4:4:4 48bpp, big-endian */
-		AV_PIX_FMT_GBRP16BE(81),
-		/** < planar GBR 4:4:4 48bpp, little-endian */
-		AV_PIX_FMT_GBRP16LE(82),
-		/**
-		 * duplicated pixel formats for compatibility with libav.<br>
-		 * FFmpeg supports these formats since May 8 2012 and Jan 28 2012 (commits f9ca1ac7 and 143a5c55)<br>
-		 * Libav added them Oct 12 2012 with incompatible values (commit 6d5600e85)<br>
-		 * < planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)
-		 */
-		AV_PIX_FMT_YUVA422P_LIBAV(83),
-		/** < planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples) */
-		AV_PIX_FMT_YUVA444P_LIBAV(84),
-		/** < planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), big-endian */
-		AV_PIX_FMT_YUVA420P9BE(85),
-		/** < planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), little-endian */
-		AV_PIX_FMT_YUVA420P9LE(86),
-		/** < planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), big-endian */
-		AV_PIX_FMT_YUVA422P9BE(87),
-		/** < planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), little-endian */
-		AV_PIX_FMT_YUVA422P9LE(88),
-		/** < planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), big-endian */
-		AV_PIX_FMT_YUVA444P9BE(89),
-		/** < planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), little-endian */
-		AV_PIX_FMT_YUVA444P9LE(90),
-		/** < planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA420P10BE(91),
-		/** < planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA420P10LE(92),
-		/** < planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA422P10BE(93),
-		/** < planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA422P10LE(94),
-		/** < planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA444P10BE(95),
-		/** < planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA444P10LE(96),
-		/** < planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA420P16BE(97),
-		/** < planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA420P16LE(98),
-		/** < planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA422P16BE(99),
-		/** < planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA422P16LE(100),
-		/** < planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian) */
-		AV_PIX_FMT_YUVA444P16BE(101),
-		/** < planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian) */
-		AV_PIX_FMT_YUVA444P16LE(102),
-		/** < HW acceleration through VDPAU, Picture.data[3] contains a VdpVideoSurface */
-		AV_PIX_FMT_VDPAU(103),
-		/** < packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X/Y/Z is stored as little-endian, the 4 lower bits are set to 0 */
-		AV_PIX_FMT_XYZ12LE(104),
-		/** < packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X/Y/Z is stored as big-endian, the 4 lower bits are set to 0 */
-		AV_PIX_FMT_XYZ12BE(105),
-		/** < interleaved chroma YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples) */
-		AV_PIX_FMT_NV16(106),
-		/** < interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_NV20LE(107),
-		/** < interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_NV20BE(108),
-		/** < packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R/G/B/A component is stored as big-endian */
-		AV_PIX_FMT_RGBA64BE(0x123),
-		/** < packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R/G/B/A component is stored as little-endian */
-		AV_PIX_FMT_RGBA64LE((0x123 + 1)),
-		/** < packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R/G/B/A component is stored as big-endian */
-		AV_PIX_FMT_BGRA64BE((0x123 + 2)),
-		/** < packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R/G/B/A component is stored as little-endian */
-		AV_PIX_FMT_BGRA64LE((0x123 + 3)),
-		/** < packed RGB 8:8:8, 32bpp, 0RGB0RGB... */
-		AV_PIX_FMT_0RGB(0x123 + 4),
-		/** < packed RGB 8:8:8, 32bpp, RGB0RGB0... */
-		AV_PIX_FMT_RGB0((0x123 + 4 + 1)),
-		/** < packed BGR 8:8:8, 32bpp, 0BGR0BGR... */
-		AV_PIX_FMT_0BGR((0x123 + 4 + 2)),
-		/** < packed BGR 8:8:8, 32bpp, BGR0BGR0... */
-		AV_PIX_FMT_BGR0((0x123 + 4 + 3)),
-		/** < planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples) */
-		AV_PIX_FMT_YUVA444P((0x123 + 4 + 4)),
-		/** < planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples) */
-		AV_PIX_FMT_YUVA422P((0x123 + 4 + 5)),
-		/** < planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian */
-		AV_PIX_FMT_YUV420P12BE((0x123 + 4 + 6)),
-		/** < planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian */
-		AV_PIX_FMT_YUV420P12LE((0x123 + 4 + 7)),
-		/** < planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian */
-		AV_PIX_FMT_YUV420P14BE((0x123 + 4 + 8)),
-		/** < planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian */
-		AV_PIX_FMT_YUV420P14LE((0x123 + 4 + 9)),
-		/** < planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV422P12BE((0x123 + 4 + 10)),
-		/** < planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV422P12LE((0x123 + 4 + 11)),
-		/** < planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV422P14BE((0x123 + 4 + 12)),
-		/** < planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV422P14LE((0x123 + 4 + 13)),
-		/** < planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV444P12BE((0x123 + 4 + 14)),
-		/** < planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV444P12LE((0x123 + 4 + 15)),
-		/** < planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian */
-		AV_PIX_FMT_YUV444P14BE((0x123 + 4 + 16)),
-		/** < planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian */
-		AV_PIX_FMT_YUV444P14LE((0x123 + 4 + 17)),
-		/** < planar GBR 4:4:4 36bpp, big-endian */
-		AV_PIX_FMT_GBRP12BE((0x123 + 4 + 18)),
-		/** < planar GBR 4:4:4 36bpp, little-endian */
-		AV_PIX_FMT_GBRP12LE((0x123 + 4 + 19)),
-		/** < planar GBR 4:4:4 42bpp, big-endian */
-		AV_PIX_FMT_GBRP14BE((0x123 + 4 + 20)),
-		/** < planar GBR 4:4:4 42bpp, little-endian */
-		AV_PIX_FMT_GBRP14LE((0x123 + 4 + 21)),
-		/** < planar GBRA 4:4:4:4 32bpp */
-		AV_PIX_FMT_GBRAP((0x123 + 4 + 22)),
-		/** < planar GBRA 4:4:4:4 64bpp, big-endian */
-		AV_PIX_FMT_GBRAP16BE((0x123 + 4 + 23)),
-		/** < planar GBRA 4:4:4:4 64bpp, little-endian */
-		AV_PIX_FMT_GBRAP16LE((0x123 + 4 + 24)),
-		/** < planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples) full scale (JPEG), deprecated in favor of PIX_FMT_YUV411P and setting color_range */
-		AV_PIX_FMT_YUVJ411P((0x123 + 4 + 25)),
-		/** < bayer, BGBG..(odd line), GRGR..(even line), 8-bit samples * / */
-		AV_PIX_FMT_BAYER_BGGR8((0x123 + 4 + 26)),
-		/** < bayer, RGRG..(odd line), GBGB..(even line), 8-bit samples * / */
-		AV_PIX_FMT_BAYER_RGGB8((0x123 + 4 + 27)),
-		/** < bayer, GBGB..(odd line), RGRG..(even line), 8-bit samples * / */
-		AV_PIX_FMT_BAYER_GBRG8((0x123 + 4 + 28)),
-		/** < bayer, GRGR..(odd line), BGBG..(even line), 8-bit samples * / */
-		AV_PIX_FMT_BAYER_GRBG8((0x123 + 4 + 29)),
-		/** < bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, little-endian * / */
-		AV_PIX_FMT_BAYER_BGGR16LE((0x123 + 4 + 30)),
-		/** < bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, big-endian * / */
-		AV_PIX_FMT_BAYER_BGGR16BE((0x123 + 4 + 31)),
-		/** < bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, little-endian * / */
-		AV_PIX_FMT_BAYER_RGGB16LE((0x123 + 4 + 32)),
-		/** < bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, big-endian * / */
-		AV_PIX_FMT_BAYER_RGGB16BE((0x123 + 4 + 33)),
-		/** < bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, little-endian * / */
-		AV_PIX_FMT_BAYER_GBRG16LE((0x123 + 4 + 34)),
-		/** < bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, big-endian * / */
-		AV_PIX_FMT_BAYER_GBRG16BE((0x123 + 4 + 35)),
-		/** < bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, little-endian * / */
-		AV_PIX_FMT_BAYER_GRBG16LE((0x123 + 4 + 36)),
-		/** < bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, big-endian * / */
-		AV_PIX_FMT_BAYER_GRBG16BE((0x123 + 4 + 37)),
-		/** < number of pixel formats, DO NOT USE THIS if you want to link with shared libav* because the number of formats might differ between versions */
-		AV_PIX_FMT_NB((0x123 + 4 + 38));
-		AVPixelFormat(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVPixelFormat > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVPixelFormat > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/**
-	 * enum values<br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:24</i>
-	 */
-	public enum AVSampleFormat implements IntValuedEnum<AVSampleFormat > {
-		AV_SAMPLE_FMT_NONE(-1),
-		/** < unsigned 8 bits */
-		AV_SAMPLE_FMT_U8(0),
-		/** < signed 16 bits */
-		AV_SAMPLE_FMT_S16(1),
-		/** < signed 32 bits */
-		AV_SAMPLE_FMT_S32(2),
-		/** < float */
-		AV_SAMPLE_FMT_FLT(3),
-		/** < double */
-		AV_SAMPLE_FMT_DBL(4),
-		/** < unsigned 8 bits, planar */
-		AV_SAMPLE_FMT_U8P(5),
-		/** < signed 16 bits, planar */
-		AV_SAMPLE_FMT_S16P(6),
-		/** < signed 32 bits, planar */
-		AV_SAMPLE_FMT_S32P(7),
-		/** < float, planar */
-		AV_SAMPLE_FMT_FLTP(8),
-		/** < double, planar */
-		AV_SAMPLE_FMT_DBLP(9),
-		/** < Number of sample formats. DO NOT USE if linking dynamically */
-		AV_SAMPLE_FMT_NB(10);
-		AVSampleFormat(long value) {
-			this.value = value;
-		}
-		public final long value;
-		public long value() {
-			return this.value;
-		}
-		public Iterator<AVSampleFormat > iterator() {
-			return Collections.singleton(this).iterator();
-		}
-		public static IntValuedEnum<AVSampleFormat > fromValue(int value) {
-			return FlagSet.fromValue(value, values());
-		}
-	};
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/avutil.h</i> */
-	public static final int AV_TIME_BASE = (int)1000000;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_DONT_STRDUP_KEY = (int)4;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_MATCH_CASE = (int)1;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_IGNORE_SUFFIX = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_DONT_STRDUP_VAL = (int)8;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_DONT_OVERWRITE = (int)16;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h</i> */
-	public static final int AV_DICT_APPEND = (int)32;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/frame.h</i> */
-	public static final int AV_NUM_DATA_POINTERS = (int)8;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/timestamp.h</i> */
-	public static final int AV_TS_MAX_STRING_SIZE = (int)32;
-	/**
-	 * Original signature : <code>void av_dict_copy(AVDictionary**, AVDictionary*, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h:8</i>
-	 */
-	public void av_dict_copy(Pointer<Pointer<AVDictionary > > dst, Pointer<AVDictionary > src, int flags) {
-		av_dict_copy(Pointer.getPeer(dst), Pointer.getPeer(src), flags);
-	}
-	public native void av_dict_copy(@Ptr long dst, @Ptr long src, int flags);
-	/**
-	 * Original signature : <code>void av_dict_free(AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/dict.h:10</i>
-	 */
-	public void av_dict_free(Pointer<Pointer<AVDictionary > > m) {
-		av_dict_free(Pointer.getPeer(m));
-	}
-	public native void av_dict_free(@Ptr long m);
-	/**
-	 * Original signature : <code>int av_reduce(int*, int*, int64_t, int64_t, int64_t)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/rational.h:7</i>
-	 */
-	public int av_reduce(Pointer<Integer > dst_num, Pointer<Integer > dst_den, long num, long den, long max) {
-		return av_reduce(Pointer.getPeer(dst_num), Pointer.getPeer(dst_den), num, den, max);
-	}
-	public native int av_reduce(@Ptr long dst_num, @Ptr long dst_den, long num, long den, long max);
-	/**
-	 * Original signature : <code>AVRational av_d2q(double, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/rational.h:9</i>
-	 */
-	public native AVRational av_d2q(double d, int max);
-	/** Inline-Funktion rational.h */
-	public double av_q2d(AVRational a) {
-		return a.num() / (double)a.den();
-	}
-	
-	/**
-	 * Original signature : <code>void av_opt_set_defaults(void*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:61</i>
-	 */
-	public void av_opt_set_defaults(Pointer<? > s) {
-		av_opt_set_defaults(Pointer.getPeer(s));
-	}
-	public native void av_opt_set_defaults(@Ptr long s);
-	/**
-	 * Original signature : <code>void av_opt_free(void*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:63</i>
-	 */
-	public void av_opt_free(Pointer<? > obj) {
-		av_opt_free(Pointer.getPeer(obj));
-	}
-	public native void av_opt_free(@Ptr long obj);
-	/**
-	 * Original signature : <code>int av_opt_set_dict(void*, AVDictionary**)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/opt.h:65</i>
-	 */
-	public int av_opt_set_dict(Pointer<? > obj, Pointer<Pointer<AVDictionary > > options) {
-		return av_opt_set_dict(Pointer.getPeer(obj), Pointer.getPeer(options));
-	}
-	public native int av_opt_set_dict(@Ptr long obj, @Ptr long options);
-	/**
-	 * Original signature : <code>void av_free(void*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/mem.h:1</i>
-	 */
-	public void av_free(Pointer<? > ptr) {
-		av_free(Pointer.getPeer(ptr));
-	}
-	public native void av_free(@Ptr long ptr);
-	/**
-	 * Original signature : <code>void av_freep(void*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/mem.h:3</i>
-	 */
-	public void av_freep(Pointer<? > ptr) {
-		av_freep(Pointer.getPeer(ptr));
-	}
-	public native void av_freep(@Ptr long ptr);
-	void av_freep(@Ptr long ptr);
-	/**
-	 * Original signature : <code>char* av_get_sample_fmt_name(AVSampleFormat)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:26</i>
-	 */
-	public Pointer<Byte > av_get_sample_fmt_name(IntValuedEnum<AvutilLibrary.AVSampleFormat > sample_fmt) {
-		return Pointer.pointerToAddress(av_get_sample_fmt_name((int)sample_fmt.value()), Byte.class);
-	}
-	@Ptr 
-	public native long av_get_sample_fmt_name(int sample_fmt);
-	@Ptr 
-	long av_get_sample_fmt_name(int sample_fmt);
-	/**
-	 * Original signature : <code>int av_sample_fmt_is_planar(AVSampleFormat)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:28</i>
-	 */
-	public int av_sample_fmt_is_planar(IntValuedEnum<AvutilLibrary.AVSampleFormat > sample_fmt) {
-		return av_sample_fmt_is_planar((int)sample_fmt.value());
-	}
-	public native int av_sample_fmt_is_planar(int sample_fmt);
-	int av_sample_fmt_is_planar(int sample_fmt);
-	/**
-	 * Original signature : <code>int av_get_bytes_per_sample(AVSampleFormat)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:30</i>
-	 */
-	public int av_get_bytes_per_sample(IntValuedEnum<AvutilLibrary.AVSampleFormat > sample_fmt) {
-		return av_get_bytes_per_sample((int)sample_fmt.value());
-	}
-	public native int av_get_bytes_per_sample(int sample_fmt);
-	int av_get_bytes_per_sample(int sample_fmt);
-	/**
-	 * Original signature : <code>AVSampleFormat av_get_sample_fmt(const char*)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:32</i>
-	 */
-	public IntValuedEnum<AvutilLibrary.AVSampleFormat > av_get_sample_fmt(Pointer<Byte > name) {
-		return FlagSet.fromValue(av_get_sample_fmt(Pointer.getPeer(name)), AvutilLibrary.AVSampleFormat.class);
-	}
-	public native int av_get_sample_fmt(@Ptr long name);
-	int av_get_sample_fmt(@Ptr long name);
-	/**
-	 * Original signature : <code>AVSampleFormat av_get_packed_sample_fmt(AVSampleFormat)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/samplefmt.h:34</i>
-	 */
-	public IntValuedEnum<AvutilLibrary.AVSampleFormat > av_get_packed_sample_fmt(IntValuedEnum<AvutilLibrary.AVSampleFormat > sample_fmt) {
-		return FlagSet.fromValue(av_get_packed_sample_fmt((int)sample_fmt.value()), AvutilLibrary.AVSampleFormat.class);
-	}
-	public native int av_get_packed_sample_fmt(int sample_fmt);
-	int av_get_packed_sample_fmt(int sample_fmt);
-	/**
-	 * Original signature : <code>void av_image_copy(uint8_t*[4], int[4], const uint8_t*[4], const int[4], AVPixelFormat, int, int)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/imgutils.h:1</i>
-	 */
-	public void av_image_copy(Pointer<Pointer<Byte > > dst_data, Pointer<Integer > dst_linesizes, Pointer<Pointer<Byte > > src_data, Pointer<Integer > src_linesizes, IntValuedEnum<AvutilLibrary.AVPixelFormat > pix_fmt, int width, int height) {
-		av_image_copy(Pointer.getPeer(dst_data), Pointer.getPeer(dst_linesizes), Pointer.getPeer(src_data), Pointer.getPeer(src_linesizes), (int)pix_fmt.value(), width, height);
-	}
-	public native void av_image_copy(@Ptr long dst_data, @Ptr long dst_linesizes, @Ptr long src_data, @Ptr long src_linesizes, int pix_fmt, int width, int height);
-	void av_image_copy(@Ptr long dst_data, @Ptr long dst_linesizes, @Ptr long src_data, @Ptr long src_linesizes, int pix_fmt, int width, int height);
-	/**
-	 * Original signature : <code>char* av_get_pix_fmt_name(AVPixelFormat)</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavutil/pixdesc.h:1</i>
-	 */
-	public Pointer<Byte> av_get_pix_fmt_name(IntValuedEnum<AVPixelFormat> pix_fmt) {
-		return Pointer.pointerToAddress(av_get_pix_fmt_name((int)pix_fmt.value()), Byte.class);
-	}
-	@Ptr 
-	public native long av_get_pix_fmt_name(int pix_fmt);
-
-}
diff -pruN src/org/ffmpeg/FFMPeg.java src.bak/org/ffmpeg/FFMPeg.java
--- src/org/ffmpeg/FFMPeg.java	2014-03-09 13:11:43.000000000 +0100
+++ src.bak/org/ffmpeg/FFMPeg.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,27 +0,0 @@
-package org.ffmpeg;
-
-import org.ffmpeg.avformat.AVStream;
-import org.ffmpeg.avcodec.AvcodecLibrary;
-
-public class FFMPeg {
-
-	private static AvcodecLibrary avcodec;
-	
-	public static void main(String[] args) {
-		System.out.println("Java-Bibliothek ffmpeg.jar");
-		System.out.println("==========================");
-		System.out.println("Die Bibliothek ffmpeg ist nur in den Bruchteilen implementiert, die für\n"
-				+ "Open Source Physics tracker benötigt werden.");
-		System.out.println("Bestandteile:");
-		System.out.println("avutil in Version ...");
-		System.out.println("avcodec in Version ...");
-		System.out.println("avformat in Version ...");
-		System.out.println("swscale in Version ...");
-		avcodec = new AvcodecLibrary();
-	}
-	
-	public void stream_close(AVStream stream) {
-		avcodec.avcodec_close(stream.codec());
-	}
-
-}
diff -pruN src/org/ffmpeg/swscale/SwscaleLibrary.java src.bak/org/ffmpeg/swscale/SwscaleLibrary.java
--- src/org/ffmpeg/swscale/SwscaleLibrary.java	2014-03-11 17:30:29.000000000 +0100
+++ src.bak/org/ffmpeg/swscale/SwscaleLibrary.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,44 +0,0 @@
-package org.ffmpeg.swscale;
-import org.bridj.BridJ;
-import org.bridj.CRuntime;
-import org.bridj.Pointer;
-import org.bridj.ann.Library;
-import org.bridj.ann.Ptr;
-import org.bridj.ann.Runtime;
-/**
- * Wrapper for library <b>swscale</b><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("swscale") 
-@Runtime(CRuntime.class) 
-public class SwscaleLibrary {
-	static {
-		BridJ.register();
-	}
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/version.h</i> */
-	public static final int LIBSWSCALE_VERSION_MICRO = (int)101;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/version.h</i> */
-	public static final int LIBSWSCALE_VERSION_MAJOR = (int)2;
-	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/version.h</i> */
-	public static final int LIBSWSCALE_VERSION_MINOR = (int)5;
-	/**
-	 * Original signature : <code>int swscale_version()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/swscale.h:1</i>
-	 */
-	public native int swscale_version();
-	/**
-	 * Original signature : <code>int swscale_version()</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/swscale.h:1</i>
-	 */
-	int swscale_version();
-	/**
-	 * Original signature : <code>int sws_scale(SwsContext*, const const uint8_t*[], const int[], int, int, const uint8_t*[], const int[])</code><br>
-	 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/swscale.h:6</i>
-	 */
-	public int sws_scale(Pointer<SwsContext > c, Pointer<Pointer<Byte > > srcSlice, Pointer<Integer > srcStride, int srcSliceY, int srcSliceH, Pointer<Pointer<Byte > > dst, Pointer<Integer > dstStride) {
-		return sws_scale(Pointer.getPeer(c), Pointer.getPeer(srcSlice), Pointer.getPeer(srcStride), srcSliceY, srcSliceH, Pointer.getPeer(dst), Pointer.getPeer(dstStride));
-	}
-	public native int sws_scale(@Ptr long c, @Ptr long srcSlice, @Ptr long srcStride, int srcSliceY, int srcSliceH, @Ptr long dst, @Ptr long dstStride);
-}
diff -pruN src/org/ffmpeg/swscale/SwsContext.java src.bak/org/ffmpeg/swscale/SwsContext.java
--- src/org/ffmpeg/swscale/SwsContext.java	2014-03-09 09:36:00.000000000 +0100
+++ src.bak/org/ffmpeg/swscale/SwsContext.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-package org.ffmpeg.swscale;
-import org.bridj.BridJ;
-import org.bridj.Pointer;
-import org.bridj.StructObject;
-import org.bridj.ann.Field;
-import org.bridj.ann.Library;
-/**
- * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libswscale/swscale.h:4</i><br>
- * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
- * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
- * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
- */
-@Library("swscale") 
-public class SwsContext extends StructObject {
-	static {
-		BridJ.register();
-	}
-	@Field(0) 
-	public int dummy() {
-		return this.io.getIntField(this, 0);
-	}
-	@Field(0) 
-	public SwsContext dummy(int dummy) {
-		this.io.setIntField(this, 0, dummy);
-		return this;
-	}
-	public SwsContext() {
-		super();
-	}
-	public SwsContext(Pointer pointer) {
-		super(pointer);
-	}
-}
diff -pruN src/test/Demuxing.java src.bak/test/Demuxing.java
--- src/test/Demuxing.java	2014-03-11 17:31:09.786295351 +0100
+++ src.bak/test/Demuxing.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,389 +0,0 @@
-package test;
-
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-
-import org.bridj.IntValuedEnum;
-import org.bridj.Pointer;
-import org.ffmpeg.avcodec.AVCodec;
-import org.ffmpeg.avcodec.AVCodecContext;
-import org.ffmpeg.avcodec.AVPacket;
-import org.ffmpeg.avcodec.AvcodecLibrary;
-import org.ffmpeg.avformat.AVFormatContext;
-import org.ffmpeg.avformat.AVStream;
-import org.ffmpeg.avformat.AvformatLibrary;
-import org.ffmpeg.avutil.AVFrame;
-import org.ffmpeg.avutil.AvutilLibrary;
-import org.ffmpeg.avutil.AvutilLibrary.AVSampleFormat;
-
-import static org.ffmpeg.avutil.AvutilLibrary.*;
-
-/**
- * @file libavformat demuxing API use example.
- * 
- *       Show how to use the libavformat and libavcodec API to demux and decode
- *       audio and video data.
- * @example doc/examples/demuxing.c
- */
-
-public class Demuxing {
-	static AvcodecLibrary avcodec = new AvcodecLibrary();
-	static AvutilLibrary avutil = new AvutilLibrary();
-	static AvformatLibrary avformat = new AvformatLibrary();
-	static AVFormatContext fmt_ctx = null;
-	static Pointer<AVCodecContext> video_dec_ctx = null, audio_dec_ctx;
-	static Pointer<AVStream> video_stream = null, audio_stream = null;
-	static String src_filename = null;
-	static String video_dst_filename = null;
-	static String audio_dst_filename = null;
-	static FileOutputStream video_dst_file = null;
-	static FileOutputStream audio_dst_file = null;
-
-	static Pointer<Pointer<Byte>> video_dst_data = Pointer.allocateBytes(4, 0);
-	static Pointer<Integer> video_dst_linesize = Pointer.allocateInts(4);
-	static int video_dst_bufsize;
-
-	static Pointer<Integer> video_stream_idx = Pointer.allocateInt(),
-			audio_stream_idx = Pointer.allocateInt();
-	static Pointer<AVFrame> frame = null;
-	static Pointer<AVPacket> pkt;
-	static int video_frame_count = 0;
-	static int audio_frame_count = 0;
-
-	static int decode_packet(Pointer<Integer> got_frame, int cached)
-			throws IOException {
-		int ret = 0;
-		int decoded = pkt.get().size();
-
-		if (pkt.get().stream_index() == video_stream_idx.get()) {
-			/* decode video frame */
-			ret = avcodec.avcodec_decode_video2(video_dec_ctx, frame,
-					got_frame, pkt);
-			if (ret < 0) {
-				System.err.printf("Error decoding video frame\n");
-				return ret;
-			}
-
-			if (got_frame.get() != 0) {
-				System.out.printf("video_frame%s n:%d coded_n:%d pts:%s\n",
-						cached != 0 ? "(cached)" : "", video_frame_count++,
-						frame.get().coded_picture_number(), avutil
-								.av_ts2timestr(frame.get().pts(), video_dec_ctx
-										.get().time_base()));
-
-				/*
-				 * copy decoded frame to destination buffer: this is required
-				 * since rawvideo expects non aligned data
-				 */
-				avutil.av_image_copy(video_dst_data, video_dst_linesize, frame
-						.get().data(), frame.get().linesize(), video_dec_ctx
-						.get().pix_fmt(), video_dec_ctx.get().width(),
-						video_dec_ctx.get().height());
-
-				/* write to rawvideo file */
-				video_dst_file.write(video_dst_data.getBytes());
-			}
-		} else if (pkt.get().stream_index() == audio_stream_idx.get()) {
-			/* decode audio frame */
-			ret = avcodec.avcodec_decode_audio4(audio_dec_ctx, frame,
-					got_frame, pkt);
-			if (ret < 0) {
-				System.err.printf("Error decoding audio frame\n");
-				return ret;
-			}
-			/*
-			 * Some audio decoders decode only part of the packet, and have to
-			 * be called again with the remainder of the packet data. Sample:
-			 * fate-suite/lossless-audio/luckynight-partial.shn Also, some
-			 * decoders might over-read the packet.
-			 */
-			decoded = Math.min(ret, pkt.get().size());
-
-			if (got_frame.get() != 0) {
-				int unpadded_linesize = frame.get().nb_samples()
-						* avutil.av_get_bytes_per_sample(frame.get().format());
-				System.out.printf("audio_frame%s n:%d nb_samples:%d pts:%s\n",
-						cached != 0 ? "(cached)" : "", audio_frame_count++,
-						frame.get().nb_samples(), avutil.av_ts2timestr(frame
-								.get().pts(), audio_dec_ctx.get().time_base()));
-
-				/*
-				 * Write the raw audio data samples of the first plane. This
-				 * works fine for packed formats (e.g. AV_SAMPLE_FMT_S16).
-				 * However, most audio decoders output planar audio, which uses
-				 * a separate plane of audio samples for each channel (e.g.
-				 * AV_SAMPLE_FMT_S16P). In other words, this code will write
-				 * only the first audio channel in these cases. You should use
-				 * libswresample or libavfilter to convert the frame to packed
-				 * data.
-				 */
-				audio_dst_file.write(frame.get().extended_data().getBytes());
-			}
-		}
-
-		return decoded;
-	}
-
-	static int open_codec_context(Pointer<Integer> stream_idx,
-			AVFormatContext fmt_ctx,
-			IntValuedEnum<AvutilLibrary.AVMediaType> type) {
-		int ret;
-		AVStream st;
-		AVCodecContext dec_ctx = null;
-		AVCodec dec = null;
-
-		ret = avformat.av_find_best_stream(Pointer.getPointer(fmt_ctx), type, -1, -1, null, 0);
-		if (ret < 0) {
-			System.err.printf("Could not find %s stream in input file '%s'\n",
-					avformat.av_get_media_type_string(type).getCString(),
-					src_filename);
-			return ret;
-		} else {
-			stream_idx.set(ret);
-			st = fmt_ctx.streams().get(stream_idx.get()).get();
-
-			/* find decoder for the stream */
-			dec_ctx = st.codec().get();
-			dec = avcodec.avcodec_find_decoder(dec_ctx.codec_id()).get();
-			if (dec != null) {
-				System.err.printf("Failed to find %s codec\n",
-						avformat.av_get_media_type_string(type));
-				return ret;
-			}
-
-			if ((ret = avcodec.avcodec_open2(Pointer.getPointer(dec_ctx), Pointer.getPointer(dec), null)) < 0) {
-				System.err.printf("Failed to open %s codec\n",
-						avformat.av_get_media_type_string(type));
-				return ret;
-			}
-		}
-
-		return 0;
-	}
-
-	static int get_format_from_sample_fmt(Pointer<Pointer<Byte>> fmt,
-			AVSampleFormat sample_fmt) {
-		fmt = null;
-		switch (sample_fmt) {
-		default:
-		case AV_SAMPLE_FMT_U8:
-			fmt = Pointer.pointerToPointer(Pointer.pointerToBytes("u8"
-					.getBytes()));
-			break;
-		case AV_SAMPLE_FMT_S16:
-			fmt = Pointer.pointerToPointer(Pointer.pointerToBytes("s16le"
-					.getBytes()));
-			break;
-		case AV_SAMPLE_FMT_S32:
-			fmt = Pointer.pointerToPointer(Pointer.pointerToBytes("s32le"
-					.getBytes()));
-			break;
-		case AV_SAMPLE_FMT_FLT:
-			fmt = Pointer.pointerToPointer(Pointer.pointerToBytes("f32le"
-					.getBytes()));
-			break;
-		case AV_SAMPLE_FMT_DBL:
-			fmt = Pointer.pointerToPointer(Pointer.pointerToBytes("f64le"
-					.getBytes()));
-			break;
-		}
-		if (fmt != null)
-			return 0;
-		System.err.printf(
-				"sample format %s is not supported as output format\n",
-				avutil.av_get_sample_fmt_name(sample_fmt));
-		return -1;
-	}
-
-	public static void main(String[] args) throws IOException {
-		int ret = 0;
-		Pointer<Integer> got_frame = Pointer.allocateInt();
-		video_stream_idx.set(-1);
-		audio_stream_idx.set(-1);
-		if (args.length != 3) {
-			System.err
-					.printf("usage: Demuxing input_file video_output_file audio_output_file\n"
-							+ "API example program to show how to read frames from an input file.\n"
-							+ "This program reads frames from a file, decodes them, and writes decoded\n"
-							+ "video frames to a rawvideo file named video_output_file, and decoded\n"
-							+ "audio frames to a rawaudio file named audio_output_file.\n"
-							+ "\n");
-			System.exit(1);
-		}
-		src_filename = args[0];
-		video_dst_filename = args[1];
-		audio_dst_filename = args[2];
-
-		try {
-			/* register all formats and codecs */
-			avformat.av_register_all();
-
-			/* open input file, and allocate format context */
-			Pointer<Pointer<AVFormatContext>> pfmt_ctx = Pointer.pointerToPointer(null);
-			if (avformat.avformat_open_input(pfmt_ctx, (Pointer<Byte>) Pointer
-					.pointerToCString(src_filename),
-					null, null) < 0) {
-				System.err.printf("Could not open source file %s\n",
-						src_filename);
-				System.exit(1);
-			}
-			fmt_ctx = pfmt_ctx.get().as(AVFormatContext.class).get();
-			/* retrieve stream information */
-			if (avformat.avformat_find_stream_info(Pointer.getPointer(fmt_ctx), null) < 0) {
-				System.err.printf("Could not find stream information\n");
-				System.exit(1);
-			}
-
-			if (open_codec_context(video_stream_idx, fmt_ctx,
-					AVMediaType.AVMEDIA_TYPE_VIDEO) >= 0) {
-				video_stream = fmt_ctx.streams()
-						.get(video_stream_idx.get());
-				video_dec_ctx = video_stream.get().codec();
-
-				try {
-					video_dst_file = new FileOutputStream(video_dst_filename);
-				} catch (IOException e) {
-					System.err.printf("Could not open destination file %s\n",
-							video_dst_filename);
-					ret = 1;
-					System.exit(1);
-				}
-
-				/* allocate image where the decoded image will be put */
-				ret = avcodec.av_image_alloc(video_dst_data,
-						video_dst_linesize, video_dec_ctx.get().width(),
-						video_dec_ctx.get().height(), video_dec_ctx.get()
-								.pix_fmt(), 1);
-				if (ret < 0) {
-					System.err.printf("Could not allocate raw video buffer\n");
-					System.exit(ret);
-				}
-				video_dst_bufsize = ret;
-			}
-
-			if (open_codec_context(audio_stream_idx, fmt_ctx,
-					AVMediaType.AVMEDIA_TYPE_AUDIO) >= 0) {
-				audio_stream = fmt_ctx.streams()
-						.get(audio_stream_idx.get());
-				audio_dec_ctx = audio_stream.get().codec();
-				try {
-					audio_dst_file = new FileOutputStream(audio_dst_filename);
-				} catch (IOException e) {
-					System.err.printf("Could not open destination file %s\n",
-							video_dst_filename);
-					System.exit(1);
-				}
-			}
-
-			/* dump input information to stderr */
-			avformat.av_dump_format(Pointer.getPointer(fmt_ctx), 0,
-					Pointer.pointerToBytes(src_filename.getBytes()), 0);
-
-			if (audio_stream == null && video_stream == null) {
-				System.err
-						.printf("Could not find audio or video stream in the input, aborting\n");
-				System.exit(1);
-			}
-
-			frame = avcodec.alloc_frame();
-			if (frame == null) {
-				System.err.printf("Could not allocate frame\n");
-				System.exit(1);
-			}
-
-			/* initialize packet, set data to null, let the demuxer fill it */
-			avcodec.av_init_packet(pkt);
-			pkt.get().data().set(null);
-			pkt.get().size(0);
-
-			if (video_stream != null)
-				System.out.printf("Demuxing video from file '%s' into '%s'\n",
-						src_filename, video_dst_filename);
-			if (audio_stream != null)
-				System.out.printf("Demuxing audio from file '%s' into '%s'\n",
-						src_filename, audio_dst_filename);
-
-			/* read frames from the file */
-			while (avformat.av_read_frame(Pointer.getPointer(fmt_ctx), pkt) >= 0) {
-				Pointer<AVPacket> orig_pkt = pkt;
-				do {
-					ret = decode_packet(got_frame, 0);
-					if (ret < 0)
-						break;
-					pkt.get().data(
-							Pointer.pointerToAddress(
-									Pointer.getPeer(pkt.get().data()) + ret,
-									Byte.class));
-					pkt.get().size(pkt.get().size() - ret);
-				} while (pkt.get().size() > 0);
-				avcodec.av_free_packet(orig_pkt);
-			}
-
-			/* flush cached frames */
-			pkt.get().data().set(null);
-			pkt.get().size(0);
-			do {
-				decode_packet(got_frame, 1);
-			} while (got_frame.get() != 0);
-
-			System.out.printf("Demuxing succeeded.\n");
-
-			if (video_stream != null) {
-				System.out
-						.printf("Play the output video file with the command:\n"
-								+ "ffplay -f rawvideo -pix_fmt %s -video_size %dx%d %s\n",
-								avutil.av_get_pix_fmt_name(
-										video_dec_ctx.get().pix_fmt())
-										.getCString(), video_dec_ctx.get()
-										.width(), video_dec_ctx.get().height(),
-								video_dst_filename);
-			}
-
-			if (audio_stream != null) {
-				AVSampleFormat sfmt = (AVSampleFormat) audio_dec_ctx.get()
-						.sample_fmt();
-				int n_channels = audio_dec_ctx.get().channels();
-				Pointer<Pointer<Byte>> fmt;
-
-				if (avutil.av_sample_fmt_is_planar(sfmt) != 0) {
-					Pointer<Byte> packed = avutil.av_get_sample_fmt_name(sfmt);
-					System.out
-							.printf("Warning: the sample format the decoder produced is planar "
-									+ "(%s). This example will output the first channel only.\n",
-									packed != null ? packed : "?");
-					sfmt = (AVSampleFormat) avutil
-							.av_get_packed_sample_fmt(sfmt);
-					n_channels = 1;
-				}
-
-				fmt = null;
-				if ((ret = get_format_from_sample_fmt(fmt, sfmt)) < 0)
-					System.exit(ret);
-
-				System.out.printf(
-						"Play the output audio file with the command:\n"
-								+ "ffplay -f %s -ac %d -ar %d %s\n", fmt,
-						n_channels, audio_dec_ctx.get().sample_rate(),
-						audio_dst_filename);
-			}
-
-		} catch (IOException e) {
-			e.printStackTrace();
-			System.exit(1);
-		} finally {
-			if (video_dec_ctx != null)
-				avcodec.avcodec_close(video_dec_ctx);
-			if (audio_dec_ctx != null)
-				avcodec.avcodec_close(audio_dec_ctx);
-			//avformat.avformat_close_input(Pointer.getPointer(fmt_ctx));
-			if (video_dst_file != null)
-				video_dst_file.close();
-			if (audio_dst_file != null)
-				audio_dst_file.close();
-			avutil.av_free(frame);
-			avutil.av_free(video_dst_data);
-		}
-		System.exit(ret);
-	}
-}
