package org.ffmpeg.avutil;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavutil/opt.h:55</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVOptionRange extends Structure {
	/** C type : const char* */
	public Pointer str;
	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
	public double value_min;
	/** < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count */
	public double value_max;
	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
	public double component_min;
	/** < For string this represents the unicode range for chars, 0-127 limits to ASCII */
	public double component_max;
	/** < if set to 1 the struct encodes a range, if set to 0 a single value */
	public int is_range;
	public AVOptionRange() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("str", "value_min", "value_max", "component_min", "component_max", "is_range");
	}
	/**
	 * @param str C type : const char*<br>
	 * @param value_min < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count<br>
	 * @param value_max < For string ranges this represents the min/max length, for dimensions this represents the min/max pixel count<br>
	 * @param component_min < For string this represents the unicode range for chars, 0-127 limits to ASCII<br>
	 * @param component_max < For string this represents the unicode range for chars, 0-127 limits to ASCII<br>
	 * @param is_range < if set to 1 the struct encodes a range, if set to 0 a single value
	 */
	public AVOptionRange(Pointer str, double value_min, double value_max, double component_min, double component_max, int is_range) {
		super();
		this.str = str;
		this.value_min = value_min;
		this.value_max = value_max;
		this.component_min = component_min;
		this.component_max = component_max;
		this.is_range = is_range;
	}
	public AVOptionRange(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVOptionRange implements Structure.ByReference {
		
	};
	public static class ByValue extends AVOptionRange implements Structure.ByValue {
		
	};
}
