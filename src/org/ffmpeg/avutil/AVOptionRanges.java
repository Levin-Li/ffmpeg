package org.ffmpeg.avutil;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavutil/opt.h:123</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avutil") 
public class AVOptionRanges extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * Array of option ranges.<br>
	 * * Most of option types use just one component.<br>
	 * Following describes multi-component option types:<br>
	 * * AV_OPT_TYPE_IMAGE_SIZE:<br>
	 * component index 0: range of pixel count (width * height).<br>
	 * component index 1: range of width.<br>
	 * component index 2: range of height.<br>
	 * * @note To obtain multi-component version of this structure, user must<br>
	 *       provide AV_OPT_MULTI_COMPONENT_RANGE to av_opt_query_ranges or<br>
	 *       av_opt_query_ranges_default function.<br>
	 * * Multi-component range can be read as in following example:<br>
	 * * @code<br>
	 * int range_index, component_index;<br>
	 * AVOptionRanges *ranges;<br>
	 * AVOptionRange *range[3]; //may require more than 3 in the future.<br>
	 * av_opt_query_ranges(&ranges, obj, key, AV_OPT_MULTI_COMPONENT_RANGE);<br>
	 * for (range_index = 0; range_index < ranges->nb_ranges; range_index++) {<br>
	 *     for (component_index = 0; component_index < ranges->nb_components; component_index++)<br>
	 *         range[component_index] = ranges->range[ranges->nb_ranges * component_index + range_index];<br>
	 *     //do something with range here.<br>
	 * }<br>
	 * av_opt_freep_ranges(&ranges);<br>
	 * @endcode<br>
	 * C type : AVOptionRange**
	 */
	@Field(0) 
	public Pointer<Pointer<AVOptionRange > > range() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * Array of option ranges.<br>
	 * * Most of option types use just one component.<br>
	 * Following describes multi-component option types:<br>
	 * * AV_OPT_TYPE_IMAGE_SIZE:<br>
	 * component index 0: range of pixel count (width * height).<br>
	 * component index 1: range of width.<br>
	 * component index 2: range of height.<br>
	 * * @note To obtain multi-component version of this structure, user must<br>
	 *       provide AV_OPT_MULTI_COMPONENT_RANGE to av_opt_query_ranges or<br>
	 *       av_opt_query_ranges_default function.<br>
	 * * Multi-component range can be read as in following example:<br>
	 * * @code<br>
	 * int range_index, component_index;<br>
	 * AVOptionRanges *ranges;<br>
	 * AVOptionRange *range[3]; //may require more than 3 in the future.<br>
	 * av_opt_query_ranges(&ranges, obj, key, AV_OPT_MULTI_COMPONENT_RANGE);<br>
	 * for (range_index = 0; range_index < ranges->nb_ranges; range_index++) {<br>
	 *     for (component_index = 0; component_index < ranges->nb_components; component_index++)<br>
	 *         range[component_index] = ranges->range[ranges->nb_ranges * component_index + range_index];<br>
	 *     //do something with range here.<br>
	 * }<br>
	 * av_opt_freep_ranges(&ranges);<br>
	 * @endcode<br>
	 * C type : AVOptionRange**
	 */
	@Field(0) 
	public AVOptionRanges range(Pointer<Pointer<AVOptionRange > > range) {
		this.io.setPointerField(this, 0, range);
		return this;
	}
	/** Number of ranges per component. */
	@Field(1) 
	public int nb_ranges() {
		return this.io.getIntField(this, 1);
	}
	/** Number of ranges per component. */
	@Field(1) 
	public AVOptionRanges nb_ranges(int nb_ranges) {
		this.io.setIntField(this, 1, nb_ranges);
		return this;
	}
	/** Number of componentes. */
	@Field(2) 
	public int nb_components() {
		return this.io.getIntField(this, 2);
	}
	/** Number of componentes. */
	@Field(2) 
	public AVOptionRanges nb_components(int nb_components) {
		this.io.setIntField(this, 2, nb_components);
		return this;
	}
	public AVOptionRanges() {
		super();
	}
	public AVOptionRanges(Pointer pointer) {
		super(pointer);
	}
}
