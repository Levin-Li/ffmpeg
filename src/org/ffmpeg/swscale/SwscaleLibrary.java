package org.ffmpeg.swscale;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
/**
 * JNA Wrapper for library <b>swscale</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface SwscaleLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "swscale";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(SwscaleLibrary.JNA_LIBRARY_NAME);
	public static final SwscaleLibrary INSTANCE = (SwscaleLibrary)Native.loadLibrary(SwscaleLibrary.JNA_LIBRARY_NAME, SwscaleLibrary.class);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final String LIBSWSCALE_IDENT = (String)"SwS2.5.102";
	/**
	 * define<br>
	 * Conversion Error : 2.5.<br>
	 * SKIPPED:<br>
	 * <i>native declaration : libswscale/version.h:0</i><br>
	 * 2.5.
	 */
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_FORMAT_NAME = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_CPU_CAPS = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MAJOR = (int)2;
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_BUILD = (int)(2 << 16 | 5 << 8 | 102);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_GETCONTEXT = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_INT = (int)(2 << 16 | 5 << 8 | 102);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MICRO = (int)102;
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MINOR = (int)5;
	/**
	 * Original signature : <code>int swscale_version()</code><br>
	 * <i>native declaration : libswscale/swscale.h:1</i>
	 */
	int swscale_version();
	/**
	 * Original signature : <code>int sws_scale(SwsContext*, const const uint8_t*[], const int[], int, int, const uint8_t*[], const int[])</code><br>
	 * <i>native declaration : libswscale/swscale.h:6</i><br>
	 * @deprecated use the safer methods {@link #sws_scale(org.ffmpeg.swscale.SwsContext, byte[][], int[], int, int, byte[][], int[])} and {@link #sws_scale(org.ffmpeg.swscale.SwsContext, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, int, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int sws_scale(SwsContext c, PointerByReference srcSlice, IntByReference srcStride, int srcSliceY, int srcSliceH, PointerByReference dst, IntByReference dstStride);
	/**
	 * Original signature : <code>int sws_scale(SwsContext*, const const uint8_t*[], const int[], int, int, const uint8_t*[], const int[])</code><br>
	 * <i>native declaration : libswscale/swscale.h:6</i>
	 */
	int sws_scale(SwsContext c, byte[] srcSlice[], int srcStride[], int srcSliceY, int srcSliceH, byte[] dst[], int dstStride[]);
}
