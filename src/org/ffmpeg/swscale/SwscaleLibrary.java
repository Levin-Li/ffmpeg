package org.ffmpeg.swscale;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>swscale</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("swscale") 
@Runtime(CRuntime.class) 
public class SwscaleLibrary {
	static {
		BridJ.register();
	}
	/** <i>native declaration : libswscale/version.h</i> */
	public static final String LIBSWSCALE_IDENT = (String)"SwS2.5.102";
	/**
	 * define<br>
	 * Conversion Error : 2.5.<br>
	 * SKIPPED:<br>
	 * <i>native declaration : libswscale/version.h:0</i><br>
	 * 2.5.
	 */
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_FORMAT_NAME = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_CPU_CAPS = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MAJOR = (int)2;
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_BUILD = (int)(2 << 16 | 5 << 8 | 102);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final boolean FF_API_SWS_GETCONTEXT = (boolean)(2 < 3);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_INT = (int)(2 << 16 | 5 << 8 | 102);
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MICRO = (int)102;
	/** <i>native declaration : libswscale/version.h</i> */
	public static final int LIBSWSCALE_VERSION_MINOR = (int)5;
	/**
	 * Original signature : <code>int swscale_version()</code><br>
	 * <i>native declaration : libswscale/swscale.h:1</i>
	 */
	public static native int swscale_version();
	/**
	 * Original signature : <code>int sws_scale(SwsContext*, const const uint8_t*[], const int[], int, int, const uint8_t*[], const int[])</code><br>
	 * <i>native declaration : libswscale/swscale.h:4</i>
	 */
	public static int sws_scale(Pointer<SwscaleLibrary.SwsContext > c, Pointer<Pointer<Byte > > srcSlice, Pointer<Integer > srcStride, int srcSliceY, int srcSliceH, Pointer<Pointer<Byte > > dst, Pointer<Integer > dstStride) {
		return sws_scale(Pointer.getPeer(c), Pointer.getPeer(srcSlice), Pointer.getPeer(srcStride), srcSliceY, srcSliceH, Pointer.getPeer(dst), Pointer.getPeer(dstStride));
	}
	protected native static int sws_scale(@Ptr long c, @Ptr long srcSlice, @Ptr long srcStride, int srcSliceY, int srcSliceH, @Ptr long dst, @Ptr long dstStride);
	/** Undefined type */
	public static interface SwsContext {
		
	};
}
