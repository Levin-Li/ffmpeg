package org.ffmpeg.avfilter;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavfilter/avfilter.h:74</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avfilter") 
public class AVFilterBufferRefAudioProps extends StructObject {
	static {
		BridJ.register();
	}
	/** < channel layout of audio buffer */
	@Field(0) 
	public long channel_layout() {
		return this.io.getLongField(this, 0);
	}
	/** < channel layout of audio buffer */
	@Field(0) 
	public AVFilterBufferRefAudioProps channel_layout(long channel_layout) {
		this.io.setLongField(this, 0, channel_layout);
		return this;
	}
	/** < number of audio samples per channel */
	@Field(1) 
	public int nb_samples() {
		return this.io.getIntField(this, 1);
	}
	/** < number of audio samples per channel */
	@Field(1) 
	public AVFilterBufferRefAudioProps nb_samples(int nb_samples) {
		this.io.setIntField(this, 1, nb_samples);
		return this;
	}
	/** < audio buffer sample rate */
	@Field(2) 
	public int sample_rate() {
		return this.io.getIntField(this, 2);
	}
	/** < audio buffer sample rate */
	@Field(2) 
	public AVFilterBufferRefAudioProps sample_rate(int sample_rate) {
		this.io.setIntField(this, 2, sample_rate);
		return this;
	}
	/** < number of channels (do not access directly) */
	@Field(3) 
	public int channels() {
		return this.io.getIntField(this, 3);
	}
	/** < number of channels (do not access directly) */
	@Field(3) 
	public AVFilterBufferRefAudioProps channels(int channels) {
		this.io.setIntField(this, 3, channels);
		return this;
	}
	public AVFilterBufferRefAudioProps() {
		super();
	}
	public AVFilterBufferRefAudioProps(Pointer pointer) {
		super(pointer);
	}
}
