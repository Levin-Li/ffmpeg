package org.ffmpeg.avformat;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.ffmpeg.avcodec.AVPacket;
import org.ffmpeg.avformat.AvformatLibrary.AVProbeData;
import org.ffmpeg.avutil.AVClass;
/**
 * <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:66</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avformat") 
public abstract class AVInputFormat extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : const char* */
	@Field(0) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 0);
	}
	/** C type : const char* */
	@Field(0) 
	public AVInputFormat name(Pointer<Byte > name) {
		this.io.setPointerField(this, 0, name);
		return this;
	}
	/** C type : const char* */
	@Field(1) 
	public Pointer<Byte > long_name() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : const char* */
	@Field(1) 
	public AVInputFormat long_name(Pointer<Byte > long_name) {
		this.io.setPointerField(this, 1, long_name);
		return this;
	}
	@Field(2) 
	public int flags() {
		return this.io.getIntField(this, 2);
	}
	@Field(2) 
	public AVInputFormat flags(int flags) {
		this.io.setIntField(this, 2, flags);
		return this;
	}
	/** C type : const char* */
	@Field(3) 
	public Pointer<Byte > extensions() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : const char* */
	@Field(3) 
	public AVInputFormat extensions(Pointer<Byte > extensions) {
		this.io.setPointerField(this, 3, extensions);
		return this;
	}
	/** Conversion Error : AVCodecTag** (failed to convert type to Java (undefined type)) */
	/**
	 * < AVClass for the private context<br>
	 * C type : const AVClass*
	 */
	@Field(5) 
	public Pointer<AVClass > priv_class() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * < AVClass for the private context<br>
	 * C type : const AVClass*
	 */
	@Field(5) 
	public AVInputFormat priv_class(Pointer<AVClass > priv_class) {
		this.io.setPointerField(this, 5, priv_class);
		return this;
	}
	/** C type : AVInputFormat* */
	@Field(6) 
	public Pointer<AVInputFormat > next() {
		return this.io.getPointerField(this, 6);
	}
	/** C type : AVInputFormat* */
	@Field(6) 
	public AVInputFormat next(Pointer<AVInputFormat > next) {
		this.io.setPointerField(this, 6, next);
		return this;
	}
	@Field(7) 
	public int raw_codec_id() {
		return this.io.getIntField(this, 7);
	}
	@Field(7) 
	public AVInputFormat raw_codec_id(int raw_codec_id) {
		this.io.setIntField(this, 7, raw_codec_id);
		return this;
	}
	@Field(8) 
	public int priv_data_size() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public AVInputFormat priv_data_size(int priv_data_size) {
		this.io.setIntField(this, 8, priv_data_size);
		return this;
	}
	/** C type : read_probe_callback* */
	@Field(9) 
	public Pointer<AVInputFormat.read_probe_callback > read_probe() {
		return this.io.getPointerField(this, 9);
	}
	/** C type : read_probe_callback* */
	@Field(9) 
	public AVInputFormat read_probe(Pointer<AVInputFormat.read_probe_callback > read_probe) {
		this.io.setPointerField(this, 9, read_probe);
		return this;
	}
	/** C type : read_header_callback* */
	@Field(10) 
	public Pointer<AVInputFormat.read_header_callback > read_header() {
		return this.io.getPointerField(this, 10);
	}
	/** C type : read_header_callback* */
	@Field(10) 
	public AVInputFormat read_header(Pointer<AVInputFormat.read_header_callback > read_header) {
		this.io.setPointerField(this, 10, read_header);
		return this;
	}
	/** C type : read_packet_callback* */
	@Field(11) 
	public Pointer<AVInputFormat.read_packet_callback > read_packet() {
		return this.io.getPointerField(this, 11);
	}
	/** C type : read_packet_callback* */
	@Field(11) 
	public AVInputFormat read_packet(Pointer<AVInputFormat.read_packet_callback > read_packet) {
		this.io.setPointerField(this, 11, read_packet);
		return this;
	}
	/** C type : read_close_callback* */
	@Field(12) 
	public Pointer<AVInputFormat.read_close_callback > read_close() {
		return this.io.getPointerField(this, 12);
	}
	/** C type : read_close_callback* */
	@Field(12) 
	public AVInputFormat read_close(Pointer<AVInputFormat.read_close_callback > read_close) {
		this.io.setPointerField(this, 12, read_close);
		return this;
	}
	/** C type : read_seek_callback* */
	@Field(13) 
	public Pointer<AVInputFormat.read_seek_callback > read_seek() {
		return this.io.getPointerField(this, 13);
	}
	/** C type : read_seek_callback* */
	@Field(13) 
	public AVInputFormat read_seek(Pointer<AVInputFormat.read_seek_callback > read_seek) {
		this.io.setPointerField(this, 13, read_seek);
		return this;
	}
	/** C type : read_timestamp_callback* */
	@Field(14) 
	public Pointer<AVInputFormat.read_timestamp_callback > read_timestamp() {
		return this.io.getPointerField(this, 14);
	}
	/** C type : read_timestamp_callback* */
	@Field(14) 
	public AVInputFormat read_timestamp(Pointer<AVInputFormat.read_timestamp_callback > read_timestamp) {
		this.io.setPointerField(this, 14, read_timestamp);
		return this;
	}
	/** C type : read_play_callback* */
	@Field(15) 
	public Pointer<AVInputFormat.read_play_callback > read_play() {
		return this.io.getPointerField(this, 15);
	}
	/** C type : read_play_callback* */
	@Field(15) 
	public AVInputFormat read_play(Pointer<AVInputFormat.read_play_callback > read_play) {
		this.io.setPointerField(this, 15, read_play);
		return this;
	}
	/** C type : read_pause_callback* */
	@Field(16) 
	public Pointer<AVInputFormat.read_pause_callback > read_pause() {
		return this.io.getPointerField(this, 16);
	}
	/** C type : read_pause_callback* */
	@Field(16) 
	public AVInputFormat read_pause(Pointer<AVInputFormat.read_pause_callback > read_pause) {
		this.io.setPointerField(this, 16, read_pause);
		return this;
	}
	/** C type : read_seek2_callback* */
	@Field(17) 
	public Pointer<AVInputFormat.read_seek2_callback > read_seek2() {
		return this.io.getPointerField(this, 17);
	}
	/** C type : read_seek2_callback* */
	@Field(17) 
	public AVInputFormat read_seek2(Pointer<AVInputFormat.read_seek2_callback > read_seek2) {
		this.io.setPointerField(this, 17, read_seek2);
		return this;
	}
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:57</i> */
	public static abstract class read_probe_callback extends Callback<read_probe_callback > {
		public int apply(Pointer<AVProbeData > AVProbeDataPtr1) {
			return apply(Pointer.getPeer(AVProbeDataPtr1));
		}
		public int apply(@Ptr long AVProbeDataPtr1) {
			return apply(Pointer.pointerToAddress(AVProbeDataPtr1, AVProbeData.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:58</i> */
	public static abstract class read_header_callback extends Callback<read_header_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
			return apply(Pointer.getPeer(AVFormatContextPtr1));
		}
		public int apply(@Ptr long AVFormatContextPtr1) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:59</i> */
	public static abstract class read_packet_callback extends Callback<read_packet_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, Pointer<AVPacket > pkt) {
			return apply(Pointer.getPeer(AVFormatContextPtr1), Pointer.getPeer(pkt));
		}
		public int apply(@Ptr long AVFormatContextPtr1, @Ptr long pkt) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), Pointer.pointerToAddress(pkt, AVPacket.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:60</i> */
	public static abstract class read_close_callback extends Callback<read_close_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
			return apply(Pointer.getPeer(AVFormatContextPtr1));
		}
		public int apply(@Ptr long AVFormatContextPtr1) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:61</i> */
	public static abstract class read_seek_callback extends Callback<read_seek_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1, int stream_index, long timestamp, int flags) {
			return apply(Pointer.getPeer(AVFormatContextPtr1), stream_index, timestamp, flags);
		}
		public int apply(@Ptr long AVFormatContextPtr1, int stream_index, long timestamp, int flags) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class), stream_index, timestamp, flags);
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:62</i> */
	public static abstract class read_timestamp_callback extends Callback<read_timestamp_callback > {
		public long apply(Pointer<AVFormatContext > s, int stream_index, Pointer<Long > pos, long pos_limit) {
			return apply(Pointer.getPeer(s), stream_index, Pointer.getPeer(pos), pos_limit);
		}
		public long apply(@Ptr long s, int stream_index, @Ptr long pos, long pos_limit) {
			return apply(Pointer.pointerToAddress(s, AVFormatContext.class), stream_index, Pointer.pointerToAddress(pos, Long.class), pos_limit);
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:63</i> */
	public static abstract class read_play_callback extends Callback<read_play_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
			return apply(Pointer.getPeer(AVFormatContextPtr1));
		}
		public int apply(@Ptr long AVFormatContextPtr1) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:64</i> */
	public static abstract class read_pause_callback extends Callback<read_pause_callback > {
		public int apply(Pointer<AVFormatContext > AVFormatContextPtr1) {
			return apply(Pointer.getPeer(AVFormatContextPtr1));
		}
		public int apply(@Ptr long AVFormatContextPtr1) {
			return apply(Pointer.pointerToAddress(AVFormatContextPtr1, AVFormatContext.class));
		}
	};
	/** <i>native declaration : /home/fschuett/prog/java/eclipse/ffmpeg/csrc/libavformat/avformat.h:65</i> */
	public static abstract class read_seek2_callback extends Callback<read_seek2_callback > {
		public int apply(Pointer<AVFormatContext > s, int stream_index, long min_ts, long ts, long max_ts, int flags) {
			return apply(Pointer.getPeer(s), stream_index, min_ts, ts, max_ts, flags);
		}
		public int apply(@Ptr long s, int stream_index, long min_ts, long ts, long max_ts, int flags) {
			return apply(Pointer.pointerToAddress(s, AVFormatContext.class), stream_index, min_ts, ts, max_ts, flags);
		}
	};
}
